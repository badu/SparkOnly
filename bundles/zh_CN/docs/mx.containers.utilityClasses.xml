<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.containers.utilityClasses"><apiName>mx.containers.utilityClasses</apiName><apiDetail/><apiClassifier id="mx.containers.utilityClasses:ConstraintRow"><apiName>ConstraintRow</apiName><shortdesc>
  ConstraintRow 类用于在水平面中细分绝对定位的容器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Exclude kind="property" name="container"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  ConstraintRow 类用于在水平面中细分绝对定位的容器。ConstraintRow 实例有 3 个调整大小的选项：固定、百分比和内容。这些选项分别指示约束行的位置、约束行在容器中占据的空间大小以及约束行如何更改容器大小。 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.containers.utilityClasses:ConstraintRow:ConstraintRow"><apiName>ConstraintRow</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  构造函数。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers.utilityClasses:ConstraintRow:initialized"><apiName>initialized</apiName><shortdesc>
       如果 ConstraintRow 实例是使用 MXML 标签创建的，则由 MXML 编译器自动调用。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>包含此 ConstraintRow 的 MXML 文档。
      
       </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>已忽略。
       
       </apiDesc></apiParam></apiOperationDef><apiDesc>
       如果 ConstraintRow 实例是使用 MXML 标签创建的，则由 MXML 编译器自动调用。如果通过 ActionScript 创建约束行，则必须调用传入 MXML 文档的此方法，并将 <codeph>id</codeph> 设置为 <codeph>null</codeph>。
      
       </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:ConstraintRow:setActualHeight"><apiName>setActualHeight</apiName><shortdesc>
      调整 ConstraintRow 的大小
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>h</apiItemName><apiType value="Number"/><apiDesc>约束行的高度，在父容器处理过程中进行计算。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      调整 ConstraintRow 的大小
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers.utilityClasses:ConstraintRow:baseline:get"><apiName>baseline</apiName><shortdesc>
      指定 ConstraintRow 实例的基线的数字（以像素为单位），相对于行的顶部边缘或相对于此行中包含的元素的最大上缘。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="baselineChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"maxAscent:0"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      指定 ConstraintRow 实例的基线的数字（以像素为单位），相对于行的顶部边缘或相对于此行中包含的元素的最大上缘。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintRow:explicitHeight:get"><apiName>explicitHeight</apiName><shortdesc>
      指定 ConstraintRow 实例在 ConstraintRow 实例坐标中的显式高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="explicitHeightChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintRow 实例在 ConstraintRow 实例坐标中的显式高度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintRow:height:get"><apiName>height</apiName><shortdesc>
      指定 ConstraintRow 实例在父坐标中的高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="heightChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintRow 实例在父坐标中的高度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintRow:id:get"><apiName>id</apiName><shortdesc>
      ConstraintRow 实例的 ID。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      ConstraintRow 实例的 ID。此值将成为约束行的实例名称，其中不应包含空格或特殊字符。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintRow:maxHeight:get"><apiName>maxHeight</apiName><shortdesc>
      指定 ConstraintRow 实例在 ConstraintRow 实例坐标中的最大高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="maxHeightChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintRow 实例在 ConstraintRow 实例坐标中的最大高度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintRow:minHeight:get"><apiName>minHeight</apiName><shortdesc>
      指定 ConstraintRow 实例在 ConstraintRow 实例坐标中的最小高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="minHeightChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintRow 实例在 ConstraintRow 实例坐标中的最小高度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintRow:percentHeight:get"><apiName>percentHeight</apiName><shortdesc>
      以组件父项大小百分比的方式指定组件高度的数字。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="percentHeightChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      以组件父项大小百分比的方式指定组件高度的数字。允许的值为 0-100。默认值为 NaN。设置 <codeph>width</codeph> 属性会将其重置为 NaN。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers.utilityClasses:ConstraintColumn"><apiName>ConstraintColumn</apiName><shortdesc>
  ConstraintColumn 类用于在垂直平面中细分绝对定位的容器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Exclude kind="property" name="container"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  ConstraintColumn 类用于在垂直平面中细分绝对定位的容器。ConstraintColumn 实例有 3 个调整大小的选项：固定、百分比和内容。这些选项分别指示约束列的位置、约束列在容器中占据的空间大小以及约束列如何处理容器大小的更改。 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.containers.utilityClasses:ConstraintColumn:ConstraintColumn"><apiName>ConstraintColumn</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  构造函数。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers.utilityClasses:ConstraintColumn:initialized"><apiName>initialized</apiName><shortdesc>
       如果 ConstraintColumn 实例是使用 MXML 标签创建的，则由 MXML 编译器自动调用。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>包含此 ConstraintColumn 的 MXML 文档。
      
       </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>已忽略。
       
       </apiDesc></apiParam></apiOperationDef><apiDesc>
       如果 ConstraintColumn 实例是使用 MXML 标签创建的，则由 MXML 编译器自动调用。如果通过 ActionScript 创建 ConstraintColumn 实例，则必须调用传入 MXML 文档的此方法，并将 <codeph>id</codeph> 设置为 <codeph>null</codeph>。
      
       </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:ConstraintColumn:setActualWidth"><apiName>setActualWidth</apiName><shortdesc>
	  调整约束列的大小。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/><apiDesc>约束列的宽度，在父容器处理过程中进行计算。
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  调整约束列的大小。
	 
	  </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers.utilityClasses:ConstraintColumn:explicitWidth:get"><apiName>explicitWidth</apiName><shortdesc>
      指定 ConstraintColumn 实例在 ConstraintColumn 实例坐标中的显式宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="explicitWidthChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintColumn 实例在 ConstraintColumn 实例坐标中的显式宽度的数字（以像素为单位）。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintColumn:id:get"><apiName>id</apiName><shortdesc>
      ConstraintColumn 实例的 ID。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      ConstraintColumn 实例的 ID。此值将成为 ConstraintColumn 实例的实例名称，其中不应包含空格或特殊字符。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintColumn:maxWidth:get"><apiName>maxWidth</apiName><shortdesc>
      指定 ConstraintColumn 实例在 ConstraintColumn 实例坐标中的最大宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="maxWidthChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintColumn 实例在 ConstraintColumn 实例坐标中的最大宽度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintColumn:minWidth:get"><apiName>minWidth</apiName><shortdesc>
      指定 ConstraintColumn 实例在 ConstraintColumn 实例坐标中的最小宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="minWidthChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintColumn 实例在 ConstraintColumn 实例坐标中的最小宽度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintColumn:percentWidth:get"><apiName>percentWidth</apiName><shortdesc>
      以组件父容器大小百分比的方式指定组件宽度的数字。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="percentWidthChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      以组件父容器大小百分比的方式指定组件宽度的数字。允许的值为 0-100。默认值为 NaN。设置 <codeph>width</codeph> 属性会将其重置为 NaN。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:ConstraintColumn:width:get"><apiName>width</apiName><shortdesc>
      指定 ConstraintColumn 实例在父容器坐标中的宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="widthChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      指定 ConstraintColumn 实例在父容器坐标中的宽度的数字（以像素为单位）。
     
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers.utilityClasses:PostScaleAdapter"><apiName>PostScaleAdapter</apiName><shortdesc>
  PostScaleAdapter 类用作依赖于要在应用缩放之后确定的 width、height、min、max、explicit、measured 以及其它属性的 Flex 3 类的兼容层。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IUIComponent</apiBaseInterface><apiBaseInterface>mx.core:IConstraintClient</apiBaseInterface><apiBaseInterface>mx.core:IInvalidating</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  PostScaleAdapter 类用作依赖于要在应用缩放之后确定的 width、height、min、max、explicit、measured 以及其他属性的 Flex 3 类的兼容层。自 Flex 4 起，此功能就很有用，会在应用缩放之前计算这些属性。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.containers.utilityClasses:PostScaleAdapter:PostScaleAdapter"><apiName>PostScaleAdapter</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>obj</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:addEventListener"><apiName>addEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:getBounds"><apiName>getBounds</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>targetCoordinateSpace</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:getCompatibleIUIComponent"><apiName>getCompatibleIUIComponent</apiName><shortdesc>
      当需要使用在后放大坐标中报告 width、height、min、max、explicit、measured 等属性的 IUIComponent 时，调用 getCompatibleIUIComponent。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier></apiReturn><apiParam><apiItemName>obj</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc>
      当需要使用在后放大坐标中报告 width、height、min、max、explicit、measured 等属性的 IUIComponent 时，调用 getCompatibleIUIComponent。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:getConstraintValue"><apiName>getConstraintValue</apiName><shortdesc>
      
      返回指定的约束值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>约束值；如果尚未定义约束值，则为空。
     
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>constraintName</apiItemName><apiType value="String"/><apiDesc>约束值的名称。约束参数为“<codeph>baseline</codeph>”、“<codeph>bottom</codeph>”、“<codeph>horizontalCenter</codeph>”、“<codeph>left</codeph>”、“<codeph>right</codeph>”、“<codeph>top</codeph>”和“<codeph>verticalCenter</codeph>”。
     
      <p>有关这些参数的详细信息，请参见 Canvas 和 Panel 容器以及 Styles Metadata AnchorStyles。</p>
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回指定的约束值。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:getExplicitOrMeasuredHeight"><apiName>getExplicitOrMeasuredHeight</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:getExplicitOrMeasuredWidth"><apiName>getExplicitOrMeasuredWidth</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:getRect"><apiName>getRect</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>targetCoordinateSpace</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:globalToLocal"><apiName>globalToLocal</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:hasEventListener"><apiName>hasEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:hitTestObject"><apiName>hitTestObject</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>obj</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:hitTestPoint"><apiName>hitTestPoint</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>shapeFlag</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:initialize"><apiName>initialize</apiName><shortdesc>
      
      初始化对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      初始化对象。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:invalidateDisplayList"><apiName>invalidateDisplayList</apiName><shortdesc>
      
	  调用此方法将导致在呈示显示列表前调用组件的 validateDisplayList() 方法。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
	  调用此方法将导致在呈示显示列表前调用组件的 <codeph>validateDisplayList()</codeph> 方法。
	 
	  <p>对于扩展 UIComponent 的组件，这暗示调用 <codeph>updateDisplayList()</codeph>。</p>
	  
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:invalidateProperties"><apiName>invalidateProperties</apiName><shortdesc>
      
	  调用此方法将导致在呈示显示列表前调用组件的 validateProperties() 方法。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
	  调用此方法将导致在呈示显示列表前调用组件的 <codeph>validateProperties()</codeph> 方法。
	 
	  <p>对于扩展 UIComponent 的组件，这暗示调用 <codeph>commitProperties()</codeph>。</p>
	  
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:invalidateSize"><apiName>invalidateSize</apiName><shortdesc>
      
	  调用此方法将导致在呈示显示列表前调用组件的 validateSize() 方法。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
	  调用此方法将导致在呈示显示列表前调用组件的 <codeph>validateSize()</codeph> 方法。
	 
	  <p>对于扩展 UIComponent 的组件，这暗示调用 <codeph>measure()</codeph>，除非组件设置了 <codeph>explicitWidth</codeph> 和 <codeph>explicitHeight</codeph>。</p>
	  
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:localToGlobal"><apiName>localToGlobal</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:move"><apiName>move</apiName><shortdesc>
      
	  将此对象移动到指定的 x 和 y 坐标。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>此对象的新 x 位置。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>此对象的新 y 位置。
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
      
	  将此对象移动到指定的 x 和 y 坐标。
	 
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:owns"><apiName>owns</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>displayObject</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:parentChanged"><apiName>parentChanged</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>p</apiItemName><apiType value="flash.display:DisplayObjectContainer"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:removeEventListener"><apiName>removeEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:setActualSize"><apiName>setActualSize</apiName><shortdesc>
      
	  设置此对象的实际大小。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newWidth</apiItemName><apiType value="Number"/><apiDesc>此对象的新宽度。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newHeight</apiItemName><apiType value="Number"/><apiDesc>此对象的新高度。
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
      
	  设置此对象的实际大小。
	 
	  <p>此方法主要用于实现 <codeph>updateDisplayList()</codeph> 方法。在此期间，您可以根据其显式大小、相对于父项的（百分比）大小以及度量大小计算此对象的实际大小。然后，通过调用 <codeph>setActualSize()</codeph> 将此实际大小应用于对象。</p>
	 
	  <p>在其他情况下，您应该设置 <codeph>width</codeph>、<codeph>height</codeph>、<codeph>percentWidth</codeph> 或 <codeph>percentHeight</codeph> 属性，而非调用此方法。</p>
	 
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:setConstraintValue"><apiName>setConstraintValue</apiName><shortdesc>
      
      设置指定的约束值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>constraintName</apiItemName><apiType value="String"/><apiDesc>约束值的名称。约束参数为“<codeph>baseline</codeph>”、“<codeph>bottom</codeph>”、“<codeph>horizontalCenter</codeph>”、“<codeph>left</codeph>”、“<codeph>right</codeph>”、“<codeph>top</codeph>”和“<codeph>verticalCenter</codeph>”。
     
      <p>有关这些参数的详细信息，请参见 Canvas 和 Panel 容器以及 Styles Metadata AnchorStyles。</p>
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/><apiDesc>约束的新值。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      设置指定的约束值。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:setVisible"><apiName>setVisible</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>noEvent</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:validateNow"><apiName>validateNow</apiName><shortdesc>
      
      根据需要，通过立即调用 validateProperties()、validateSize() 和 validateDisplayList() 来验证并更新此对象的属性和布局。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      根据需要，通过立即调用 <codeph>validateProperties()</codeph>、<codeph>validateSize()</codeph> 和 <codeph>validateDisplayList()</codeph> 来验证并更新此对象的属性和布局。
     
      <p>当属性更改时，新值通常不会立即对组件发挥作用。通常，会执行此时应运行的所有应用程序代码。然后根据组件验证需要及其在显示列表对象层次结构中的深度，LayoutManager 开始对组件调用 <codeph>validateProperties()</codeph>、<codeph>validateSize()</codeph> 和 <codeph>validateDisplayList()</codeph> 方法。</p>
	 
      <p>例如，设置 <codeph>width</codeph> 属性被延迟，因为可能需要重新计算对象子项或其父项的宽度。如果应用程序代码多次设置了 <codeph>width</codeph> 属性，则延迟处理还可以防止重复多次操作。此方法允许您手动覆盖此行为。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers.utilityClasses:PostScaleAdapter:willTrigger"><apiName>willTrigger</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:accessibilityProperties:get"><apiName>accessibilityProperties</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.accessibility:AccessibilityProperties"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:alpha:get"><apiName>alpha</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:baselinePosition:get"><apiName>baselinePosition</apiName><shortdesc>
       
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
       
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:blendMode:get"><apiName>blendMode</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:cacheAsBitmap:get"><apiName>cacheAsBitmap</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:document:get"><apiName>document</apiName><shortdesc>
      
      对与此组件关联的文档对象的引用。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      
      对与此组件关联的文档对象的引用。文档对象是位于 Flex 应用程序、MXML 组件或 ActionScript 组件层次结构顶层的 Object。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:enabled:get"><apiName>enabled</apiName><shortdesc>
      
      组件是否可以接受用户交互。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      组件是否可以接受用户交互。将 <codeph>enabled</codeph> 属性设置为 <codeph>false</codeph> 后，某些组件仍会响应鼠标交互，如 mouseOver。因此，要完全禁用 UIComponent，您应该将 <codeph>mouseEnabled</codeph> 属性的值也设置为 <codeph>false</codeph>。如果将容器的 <codeph>enabled</codeph> 属性设置为 <codeph>false</codeph>，则 Flex 会使该容器及其所有子项的颜色变暗，并阻止用户向容器及其所有子项输入内容。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:explicitHeight:get"><apiName>explicitHeight</apiName><shortdesc>
      
      在组件坐标中显式指定的组件高度（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中显式指定的组件高度（以像素为单位）。如果没有显式指定的高度，则值为 <codeph>NaN</codeph>。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:explicitMaxHeight:get"><apiName>explicitMaxHeight</apiName><shortdesc>
      
      在组件坐标中指定组件最大高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最大高度的数字（以像素为单位）。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:explicitMaxWidth:get"><apiName>explicitMaxWidth</apiName><shortdesc>
      
      在组件坐标中指定组件最大宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最大宽度的数字（以像素为单位）。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:explicitMinHeight:get"><apiName>explicitMinHeight</apiName><shortdesc>
      
      在组件坐标中指定组件最小高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最小高度的数字（以像素为单位）。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:explicitMinWidth:get"><apiName>explicitMinWidth</apiName><shortdesc>
      
      在组件坐标中指定组件最小宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最小宽度的数字（以像素为单位）。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:explicitWidth:get"><apiName>explicitWidth</apiName><shortdesc>
      
      在组件坐标中显式指定的组件宽度（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中显式指定的组件宽度（以像素为单位）。如果没有显式指定的宽度，则值为 <codeph>NaN</codeph>。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:filters:get"><apiName>filters</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:focusPane:get"><apiName>focusPane</apiName><shortdesc>
      
      在组件中共享并用作绘制焦点指示符的叠加层的单个 Sprite 对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      
      在组件中共享并用作绘制焦点指示符的叠加层的单个 Sprite 对象。如果组件的父项具有焦点，则这些组件共享此对象；如果该组件实现了 IFocusManagerComponent 接口，则不共享此对象。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:height:get"><apiName>height</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:includeInLayout:get"><apiName>includeInLayout</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:isPopUp:get"><apiName>isPopUp</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:loaderInfo:get"><apiName>loaderInfo</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:LoaderInfo"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:mask:get"><apiName>mask</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:maxHeight:get"><apiName>maxHeight</apiName><shortdesc>
      
      在组件坐标中指定组件最大高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最大高度的数字（以像素为单位）。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:maxWidth:get"><apiName>maxWidth</apiName><shortdesc>
      
      在组件坐标中指定组件最大宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最大宽度的数字（以像素为单位）。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:measuredHeight:get"><apiName>measuredHeight</apiName><shortdesc>
      
	  此对象的测量高度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
	  此对象的测量高度。
	 
	  <p>通常为图形外观硬编码此属性，因为此数字只是图形中的像素数目。对于代码外观来说，如果希望以特定大小进行绘制，也可以对其进行硬编码。如果此大小可以随属性更改，您可能还希望是 ILayoutManagerClient，以便在适当时调用 <codeph>measure()</codeph> 方法，从而能够计算 <codeph>measuredHeight</codeph>。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:measuredMinHeight:get"><apiName>measuredMinHeight</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:measuredMinWidth:get"><apiName>measuredMinWidth</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:measuredWidth:get"><apiName>measuredWidth</apiName><shortdesc>
      
	  此对象的测量宽度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
	  此对象的测量宽度。
	 
	  <p>通常为图形外观硬编码此属性，因为此数字只是图形中的像素数目。对于代码外观来说，如果希望以特定大小进行绘制，也可以对其进行硬编码。如果此大小可以随属性更改，您可能还希望是 ILayoutManagerClient，以便在适当时调用 <codeph>measure()</codeph> 方法，从而能够计算 <codeph>measuredHeight</codeph>。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:minHeight:get"><apiName>minHeight</apiName><shortdesc>
      
      在组件坐标中指定组件最小高度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最小高度的数字（以像素为单位）。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:minWidth:get"><apiName>minWidth</apiName><shortdesc>
      
      在组件坐标中指定组件最小宽度的数字（以像素为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      在组件坐标中指定组件最小宽度的数字（以像素为单位）。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:mouseX:get"><apiName>mouseX</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:mouseY:get"><apiName>mouseY</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:name:get"><apiName>name</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:opaqueBackground:get"><apiName>opaqueBackground</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:owner:get"><apiName>owner</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:parent:get"><apiName>parent</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:percentHeight:get"><apiName>percentHeight</apiName><shortdesc>
      
      以组件父项大小百分比的方式指定组件高度的数字。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      以组件父项大小百分比的方式指定组件高度的数字。允许的值为从 0 到 100。     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:percentWidth:get"><apiName>percentWidth</apiName><shortdesc>
      
      以组件父项大小百分比形式指定其宽度的数字。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      以组件父项大小百分比形式指定其宽度的数字。允许的值为从 0 到 100。     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:root:get"><apiName>root</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:rotation:get"><apiName>rotation</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:scale9Grid:get"><apiName>scale9Grid</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:scaleX:get"><apiName>scaleX</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:scaleY:get"><apiName>scaleY</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:scrollRect:get"><apiName>scrollRect</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:stage:get"><apiName>stage</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Stage"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:systemManager:get"><apiName>systemManager</apiName><shortdesc>
      
      对此组件的 SystemManager 对象的引用。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.managers:ISystemManager</apiValueClassifier></apiValueDef><apiDesc>
      
      对此组件的 SystemManager 对象的引用。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:transform:get"><apiName>transform</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Transform"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:tweeningProperties:get"><apiName>tweeningProperties</apiName><shortdesc>
      
      由 EffectManager 使用。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      由 EffectManager 使用。如果组件不使用 EffectManager 执行 Tween，则返回非空值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:visible:get"><apiName>visible</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:width:get"><apiName>width</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:x:get"><apiName>x</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:PostScaleAdapter:y:get"><apiName>y</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers.utilityClasses:IConstraintLayout"><apiName>IConstraintLayout</apiName><shortdesc>
  IConstraintLayout 是一个标记接口，指示容器支持其布局中的 ConstraintColumn 类和 ConstraintRow 类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IConstraintLayout 是一个标记接口，指示容器支持其布局中的 ConstraintColumn 类和 ConstraintRow 类。Application、Canvas 和 Panel 容器都支持 ConstraintRow 类和 ConstraintColumn 类。要在上述容器中利用此类型的约束，请将 <codeph>layout</codeph> 属性设置为 <codeph>"absolute"</codeph>，并创建 ConstraintColumn 和 ConstraintRow 实例。 
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.containers.Canvas.xml"><linktext>mx.containers.Canvas</linktext></link><link href="" invalidHref="mx.containers.Panel.xml"><linktext>mx.containers.Panel</linktext></link><link href="" invalidHref="mx.core.Application.xml"><linktext>mx.core.Application</linktext></link><link href="mx.containers.utilityClasses.xml#ConstraintColumn"><linktext>mx.containers.utilityClasses.ConstraintColumn</linktext></link><link href="mx.containers.utilityClasses.xml#ConstraintRow"><linktext>mx.containers.utilityClasses.ConstraintRow</linktext></link><link href="" invalidHref="mx.modules.Module.xml"><linktext>mx.modules.Module</linktext></link></related-links><apiValue id="mx.containers.utilityClasses:IConstraintLayout:mx.containers.utilityClasses:IConstraintLayout:constraintColumns:get"><apiName>constraintColumns</apiName><shortdesc>
      划分此容器的 ConstraintColumn 实例的 Array。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      划分此容器的 ConstraintColumn 实例的 Array。索引为 0 的 ConstraintColumn 实例是最左侧的列；索引从左到右依次增加。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers.utilityClasses:IConstraintLayout:mx.containers.utilityClasses:IConstraintLayout:constraintRows:get"><apiName>constraintRows</apiName><shortdesc>
      划分此容器的 ConstraintRow 实例的 Array。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      划分此容器的 ConstraintRow 实例的 Array。索引为 0 的 ConstraintRow 实例是最顶层的行；索引从上到下依次增加。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>