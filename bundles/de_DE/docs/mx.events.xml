<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.events"><apiName>mx.events</apiName><apiDetail/><apiClassifier id="mx.events:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
  Ein Ereignis, das zwischen Anwendungen über den sharedEvents-Auslöser versendet wird, der zwischen den beiden Anwendungs-SWFs vorhanden ist. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein Ereignis, das zwischen Anwendungen über den zwischen zwei Anwendungs-SWFs vorhandenen sharedEvents-Auslöser versendet wird. Das Ereignis beschreibt eine Anforderung für den Listener in der anderen SWF, um eine Aktion auf Objekte in dessen SWF anzuwenden und möglicherweise Daten an die auslösende SWF zurückzugeben. SWFBridgeRequests unterscheiden sich von typischen Ereignissen und sind eine Ausnahme in Bezug auf das Ereignismodell, da Eigenschaften des Ereignisses geändert werden, um Daten an die auslösende SWF zurückzugeben.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.xml#LoaderInfo/sharedEvents"><linktext>flash.display.LoaderInfo.sharedEvents</linktext></link></related-links><apiConstructor id="mx.events:SWFBridgeRequest:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>requestor</apiItemName><apiType value="flash.events:IEventDispatcher"/><apiData>null</apiData><apiDesc>Die Brücke, von der die Meldung gesendet wurde.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Daten, die sich auf das Ereignis beziehen.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeRequest:marshal"><apiName>marshal</apiName><shortdesc>
      Marshalling einer SWFBridgeRequest von einer Remote-ApplicationDomain in die aktuelle ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Eine SWFBridgeRequest, die in der ApplicationDomain des Aufrufers erstellt wurde.
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Eine SWFBridgeRequest, die möglicherweise in einer anderen ApplicationDomain erstellt wurde.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Marshalling einer SWFBridgeRequest von einer Remote-ApplicationDomain in die aktuelle ApplicationDomain.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_FOCUS_REQUEST"><apiName>ACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  Wird vom Focus Manager der obersten Ebene an untergeordnete Focus Manager gesendet, sodass alle an der Tabulatorschleife beteiligten Focus Manager aktiviert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Wird vom Focus Manager der obersten Ebene an untergeordnete Focus Manager gesendet, sodass alle an der Tabulatorschleife beteiligten Focus Manager aktiviert werden.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_POP_UP_REQUEST"><apiName>ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
      Anforderung zur Aktivierung des Popup einer untergeordneten Anwendung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung zur Aktivierung des Popup einer untergeordneten Anwendung. Diese Anforderung wird über die Brücke von einem SystemManager der obersten Ebene an einen untergeordneten SystemManager gesendet. Die <codeph>data</codeph>-Eigenschaft enthält den Bezeichner für das Popup. Es handelt sich nicht immer um einen tatsächlichen Verweis auf das Popup. Es werden keine Daten zurückgegeben.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_PLACE_HOLDER_REQUEST"><apiName>ADD_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  Fügt einen Platzhalter für ein Popupfenster hinzu, das von einem untergeordneten SystemManager gehostet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Fügt einen Platzhalter für ein Popupfenster hinzu, das von einem untergeordneten SystemManager gehostet wird. Das Popupfenster ist nicht vertrauenswürdig, sodass es von dem untergeordneten Element, das ihm vertraut, gehostet werden muss. Ein Platzhalter wird an den Stamm-SystemManager der obersten Ebene gesendet, sodass die Aktivierung und Deaktivierung aller Popups hier verwaltet werden kann.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_REQUEST"><apiName>ADD_POP_UP_REQUEST</apiName><shortdesc>
	  Fügt ein Popup auf der Zielanwendung hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Fügt ein Popup auf der Zielanwendung hinzu. Diese Anforderung wird von der Zielanwendung erst berücksichtigt, wenn ein gegenseitiges Vertrauensverhältnis zwischen auslösender und empfangender Anwendung besteht.
	  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CAN_ACTIVATE_POP_UP_REQUEST"><apiName>CAN_ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
	  Testet, ob ein angegebenes Popup aktiviert werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>canActivateRequestPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Testet, ob ein angegebenes Popup aktiviert werden kann. Wenn ein Popup nicht sichtbar ist oder nicht aktiviert ist, kann es nicht den Eingabefokus erhalten. Diese Meldung wird immer vom SystemManager der obersten Ebene über die Brücke an den SystemManager gesendet, zu dem das Popup gehört. Die <codeph>data</codeph>-Eigenschaft ist ein Bezeichner für das Popup. Es handelt sich nicht immer um einen tatsächlichen Verweis auf das Popup. Der empfangende SystemManager setzt die <codeph>data</codeph>-Eigenschaft auf <codeph>true</codeph>, wenn das Popup aktiviert werden kann. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CREATE_MODAL_WINDOW_REQUEST"><apiName>CREATE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Erstellt ein modales Fenster.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>createModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Erstellt ein modales Fenster. Mit der <codeph>show</codeph>-Eigenschaft kann das modale Fenster nach der Erstellung angezeigt werden. Beim Wert <codeph>true</codeph> wird das modale Fenster angezeigt. Beim Wert <codeph>false</codeph> bleibt das modale Fenster verborgen, bis eine <codeph>ModalWindowRequest.SHOW</codeph>-Anforderung ausgelöst wird. Die <codeph>data</codeph>-Eigenschaft kann ein Rechteck definieren, das den Bereich beschreibt, der aus dem modalen Fenster ausgeschlossen wird. Die Koordinaten des Rechtecks sind globale Koordinaten. Der Parameter ist nur vorhanden, wenn der Anfordernde dem Empfänger der Anforderung vertraut.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_FOCUS_REQUEST"><apiName>DEACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  Wird vom Focus Manager der obersten Ebene an untergeordnete Focus Manager gesendet, sodass alle an der Tabulatorschleife beteiligten Focus Manager deaktiviert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Wird vom Focus Manager der obersten Ebene an untergeordnete Focus Manager gesendet, sodass alle an der Tabulatorschleife beteiligten Focus Manager deaktiviert werden.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_POP_UP_REQUEST"><apiName>DEACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
          Anforderung zur Deaktivierung des Popup einer untergeordneten Anwendung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
          Anforderung zur Deaktivierung des Popup einer untergeordneten Anwendung. Diese Anforderung wird über die Brücke von einem untergeordneten SystemManager an den SystemManager der obersten Ebene gesendet. Die Dateneigenschaft enthält einen Bezeichner für das Popup. Es handelt sich nicht immer um einen tatsächlichen Verweis auf das Popup. Es werden keine Daten zurückgegeben.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_SIZE_REQUEST"><apiName>GET_SIZE_REQUEST</apiName><shortdesc>
	  Ruft die Größe des untergeordneten SystemManagers ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Ruft die Größe des untergeordneten SystemManagers ab. Wird vom SWFLoader-Steuerelement an den untergeordneten SystemManager gesendet, um den Umfang des Inhalts abzurufen. Der untergeordnete SystemManager aktualisiert die Eigenschaften <codeph>width</codeph> und <codeph>height</codeph> im Ereignisobjekt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_VISIBLE_RECT_REQUEST"><apiName>GET_VISIBLE_RECT_REQUEST</apiName><shortdesc>
      Anforderung zur Berechnung des sichtbaren Teils der anfordernden SWF durch den SystemManager auf der Basis der DisplayObjects, die die anfordernde SWF beschneiden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getVisibleRectRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung zur Berechnung des sichtbaren Teils der anfordernden SWF durch den SystemManager auf der Basis der DisplayObjects, die die anfordernde SWF beschneiden. Die Anforderungen werden an einen übergeordneten SystemManager über die Brücke gesendet. Die Ergebnisse werden in der <codeph>data</codeph>-Eigenschaft zurückgegeben, einem Rechteck mit globalen Koordinaten.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MODAL_WINDOW_REQUEST"><apiName>HIDE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Verbirgt ein modales Fenster.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Verbirgt ein modales Fenster. Die <codeph>remove</codeph>-Eigenschaft bestimmt, ob das modale Fenster in den Anzeigelisten nicht nur verborgen, sondern auch entfernt wird. Beim Wert <codeph>true</codeph> wird das modale Fenster entfernt. Beim Wert <codeph>false</codeph> wird das modale Fenster nur verborgen. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MOUSE_CURSOR_REQUEST"><apiName>HIDE_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Anforderung zum Verbergen des Mauszeigers, wenn dieser sich über der Anwendung befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung zum Verbergen des Mauszeigers, wenn dieser sich über der Anwendung befindet. Diese Anforderung wird an die Brücke gesendet, die mit der übergeordneten Anwendung gemeinsam genutzt wird, und bis zur obersten Ebene übertragen. Die <codeph>data</codeph>-Eigenschaft wird nicht verwendet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:INVALIDATE_REQUEST"><apiName>INVALIDATE_REQUEST</apiName><shortdesc>
	  Anforderung, die Eigenschaften, Größe oder Anzeigeliste des Loaders der aktuellen Anwendung für ungültig zu erklären. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalidateRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Anforderung, die Eigenschaften, Größe oder Anzeigeliste des Loaders der aktuellen Anwendung für ungültig zu erklären. Diese Anforderung wird von einem SystemManager an den übergeordneten SystemManager gesendet. Die <codeph>data</codeph>-Eigenschaft ist eine Kombination von InvalidationRequestData-Flags. Es werden keine Daten zurückgegeben.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:IS_BRIDGE_CHILD_REQUEST"><apiName>IS_BRIDGE_CHILD_REQUEST</apiName><shortdesc>
	  Überprüft, ob ein angegebenes DisplayObject einer SWF oder deren untergeordneten SWFs untergeordnet ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>isBridgeChildRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Überprüft, ob ein angegebenes DisplayObject einer SWF oder deren untergeordneten SWFs untergeordnet ist. Diese Anforderung wird von einem SystemManager an dessen untergeordnete SystemManager über deren Brücken gesendet. Die <codeph>data</codeph>-Eigenschaft ist ein Verweis auf das DisplayObject. Der empfangende SystemManager setzt die <codeph>data</codeph>-Eigenschaft auf <codeph>true</codeph>, wenn das DisplayObject der SWF oder einer untergeordneten SWF untergeordnet ist. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:MOVE_FOCUS_REQUEST"><apiName>MOVE_FOCUS_REQUEST</apiName><shortdesc>
	  Anforderung, das Steuerelement über dem Fokus zu einem anderen FocusManager zu verschieben, wonach der FocusManager den Fokus auf der Basis der direction-Eigenschaft des Ereignisses einem von ihm verwalteten Steuerelement zuweist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>moveFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Anforderung, das Steuerelement über dem Fokus zu einem anderen FocusManager zu verschieben, wonach der FocusManager den Fokus auf der Basis der <codeph>direction</codeph>-Eigenschaft des Ereignisses einem von ihm verwalteten Steuerelement zuweist. Wenn der Fokus wieder zum FocusManager der übergeordneten SWF verschoben wird, wird die <codeph>direction</codeph>-Eigenschaft auf <codeph>FocusDirection.FORWARD</codeph> oder <codeph>FocusDirection.BACKWARD</codeph> gesetzt. Wenn der Fokus zum FocusManager einer untergeordneten SWF verschoben wird, wird die <codeph>direction</codeph>-Eigenschaft auf <codeph>FocusDirection.TOP</codeph> oder <codeph>FocusDirection.BOTTOM</codeph> gesetzt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_PLACE_HOLDER_REQUEST"><apiName>REMOVE_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  Entfernt einen Platzhalter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Entfernt einen Platzhalter.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_REQUEST"><apiName>REMOVE_POP_UP_REQUEST</apiName><shortdesc>
	  Entfernt ein Popup aus dem SystemManager von sandboxRoot.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Entfernt ein Popup aus dem SystemManager von sandboxRoot.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:RESET_MOUSE_CURSOR_REQUEST"><apiName>RESET_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Anforderung, dass die Logik zum Anzeigen und Verbergen des Mauszeigers für ein neues Mausereignis zurückgesetzt wird, sodass die verschiedenen Anwendungen Anforderungen zum Anzeigen oder Verbergen des Mauszeigers senden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resetMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung, dass die Logik zum Anzeigen und Verbergen des Mauszeigers für ein neues Mausereignis zurückgesetzt wird, sodass die verschiedenen Anwendungen Anforderungen zum Anzeigen oder Verbergen des Mauszeigers senden können. Diese Anforderung wird an die Brücke gesendet, die mit der übergeordneten Anwendung gemeinsam genutzt wird, und bis zur obersten Ebene übertragen. Die data-Eigenschaft wird nicht verwendet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_ACTUAL_SIZE_REQUEST"><apiName>SET_ACTUAL_SIZE_REQUEST</apiName><shortdesc>
	  Legt die Größe des child.systemManager fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setActualSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt die Größe des <codeph>child.systemManager</codeph> fest. Wird vom SWFLoader-Steuerelement an den untergeordneten SystemManager gesendet. Der untergeordnete SystemManager aktualisiert die Größe seiner untergeordneten Elemente basierend auf den Eigenschaften <codeph>width</codeph> und <codeph>height</codeph> im Ereignisobjekt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_SHOW_FOCUS_INDICATOR_REQUEST"><apiName>SET_SHOW_FOCUS_INDICATOR_REQUEST</apiName><shortdesc> 
      Legt den Wert der showFocusIndicator-Eigenschaft im FocusManager jeder Anwendung fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setShowFocusIndicatorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Legt den Wert der showFocusIndicator-Eigenschaft im FocusManager jeder Anwendung fest. Die data-Eigenschaft ist ein boolescher Wert und übernimmt den Wert der showFocusIndicator-Eigenschaft. Diese Anforderung wird zu Beginn von dem FocusManager gesendet, für den die showFocusIndicator-Eigenschaft eingestellt ist. Sie wird an jeden FocusManager im System übertragen.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MODAL_WINDOW_REQUEST"><apiName>SHOW_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Zeigt ein modales Fenster an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Zeigt ein modales Fenster an. Die <codeph>skip</codeph>-Eigenschaft wird mit dieser Anforderung verwendet. Beim Wert <codeph>true</codeph> leitet der Empfänger die Anforderung an die übergeordnete Kette weiter, ohne sie zu verarbeiten. Die <codeph>data</codeph>-Eigenschaft kann ein Rechteck definieren, das den auszuschließenden Bereich auf der Basis des aktuell übergeordneten Elements beschreibt. Die Koordinaten sind Bildschirmkoordinaten. Der Parameter ist nur vorhanden, wenn der Anfordernde dem Empfänger der Meldung vertraut.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MOUSE_CURSOR_REQUEST"><apiName>SHOW_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Fragt beim Element der obersten Ebene an, ob der Mauszeiger an der aktuellen Position verborgen werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Fragt beim Element der obersten Ebene an, ob der Mauszeiger an der aktuellen Position verborgen werden soll. Wird an die Brücke gesendet, die mit der übergeordneten Anwendung gemeinsam genutzt wird, und bis zur obersten Ebene übertragen. Die Daten werden auf „true“ gesetzt, wenn der Mauscursor an dieser Position angezeigt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:data"><apiName>data</apiName><shortdesc>
	  Daten, die sich auf das Ereignis beziehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Daten, die sich auf das Ereignis beziehen. Informationen zur Verwendung des Objekts finden Sie in den Abschnitten zu den einzelnen Ereignistypen.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:requestor"><apiName>requestor</apiName><shortdesc>
	  Die Brücke, von der die Meldung gesendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
	  Die Brücke, von der die Meldung gesendet wurde. Dies wird von der empfangenden SWF verwendet, um zu verfolgen, welcher SWFLoader die anfordernde SWF enthält.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:PropertyChangeEventKind"><apiName>PropertyChangeEventKind</apiName><shortdesc>
  Die PropertyChangeEventKind-Klasse definiert die Konstantenwerte für die Kind-Eigenschaft der PropertyChangeEvent-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die PropertyChangeEventKind-Klasse definiert die Konstantenwerte für die <codeph>Kind</codeph>-Eigenschaft der PropertyChangeEvent-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>mx.events.PropertyChangeEvent</linktext></link></related-links><apiValue id="mx.events:PropertyChangeEventKind:DELETE"><apiName>DELETE</apiName><shortdesc>
	  Gibt an, dass die Eigenschaft aus dem Objekt gelöscht wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>delete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Gibt an, dass die Eigenschaft aus dem Objekt gelöscht wurde.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
	  Gibt an, dass der Wert der Eigenschaft geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Gibt an, dass der Wert der Eigenschaft geändert wurde.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TouchInteractionReason"><apiName>TouchInteractionReason</apiName><shortdesc>
  Die TouchInteractionReason-Klasse definiert die Konstantenwerte für die reason-Eigenschaft der TouchInteractionEvent-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die TouchInteractionReason-Klasse definiert die Konstantenwerte für die <codeph>reason</codeph>-Eigenschaft der TouchInteractionEvent-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#TouchInteractionEvent"><linktext>mx.events.TouchInteractionEvent</linktext></link></related-links><apiValue id="mx.events:TouchInteractionReason:SCROLL"><apiName>SCROLL</apiName><shortdesc>
      Gibt an, dass die Berührungsinteraktion ein Bildlauf ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass die Berührungsinteraktion ein Bildlauf ist.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
  Die BrowserChangeEvent-Klasse stellt Ereignisobjekte dar, die sich auf den BrowserManager beziehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die BrowserChangeEvent-Klasse stellt Ereignisobjekte dar, die sich auf den BrowserManager beziehen.
 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE_applicationURLChange"><apiName>applicationURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE_browserURLChange"><apiName>browserURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:URL_CHANGE_urlChange"><apiName>urlChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:BrowserChangeEvent:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Aktuelle URL im Browser.
      
      </apiDesc></apiParam><apiParam><apiItemName>lastURL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Vorherige URL im Browser.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE"><apiName>APPLICATION_URL_CHANGE</apiName><shortdesc>
      Die BrowserChangeEvent.APPLICATION_URL_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein applicationURLChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>BrowserChangeEvent.APPLICATION_URL_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>applicationURLChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Der vorherige Wert der Eigenschaft <codeph>url</codeph> des BrowserManagers.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>url</codeph></entry><entry>Der neue Wert der Eigenschaft <codeph>url</codeph> des BrowserManagers.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE"><apiName>BROWSER_URL_CHANGE</apiName><shortdesc>
      Die BrowserChangeEvent.BROWSER_URL_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein browserURLChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>browserURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>BrowserChangeEvent.BROWSER_URL_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>browserURLChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Der vorherige Wert der Eigenschaft <codeph>url</codeph> des BrowserManagers.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>url</codeph></entry><entry>Der neue Wert der Eigenschaft <codeph>url</codeph> des BrowserManagers.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:URL_CHANGE"><apiName>URL_CHANGE</apiName><shortdesc>
      Die BrowserChangeEvent.URL_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein urlChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>BrowserChangeEvent.URL_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>urlChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Der vorherige Wert der Eigenschaft <codeph>url</codeph> des BrowserManagers.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>url</codeph></entry><entry>Der neue Wert der Eigenschaft <codeph>url</codeph> des BrowserManagers.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:lastURL"><apiName>lastURL</apiName><shortdesc>
      Der vorherige Wert der Eigenschaft „URL“ im BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Der vorherige Wert der Eigenschaft <codeph>URL</codeph> im BrowserManager.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:url"><apiName>url</apiName><shortdesc>
      Der neue Wert der Eigenschaft „URL“ im BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Der neue Wert der Eigenschaft <codeph>URL</codeph> im BrowserManager.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc>
  Dies ist ein Ereignis, das zwischen Anwendungen in unterschiedlichen Sicherheitssandboxes verwendet wird, um Listenern die Mausaktivität in einer anderen Sicherheitssandbox mitzuteilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Dies ist ein Ereignis, das zwischen Anwendungen in unterschiedlichen Sicherheitssandboxes verwendet wird, um Listenern die Mausaktivität in einer anderen Sicherheitssandbox mitzuteilen. Aus Sicherheitsgründen werden einige Felder eines MouseEvent nicht an ein SandboxMouseEvent gesendet.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SandboxMouseEvent:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc> 
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Strg</codeph>-Taste gedrückt wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Alt</codeph>-Taste gedrückt wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Umschalttaste</codeph> gedrückt wurde.	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die primäre Maustaste gedrückt (true) ist oder nicht (false).
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SandboxMouseEvent:marshal"><apiName>marshal</apiName><shortdesc>
      Marshalling einer SWFBridgeRequest von einer Remote-ApplicationDomain in die aktuelle ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Ein SandboxMouseEvent, das in der ApplicationDomain des Aufrufers erstellt wurde.
      
      </apiDesc><apiOperationClassifier>mx.events:SandboxMouseEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Eine SWFBridgeRequest, die möglicherweise in einer anderen ApplicationDomain erstellt wurde.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Marshalling einer SWFBridgeRequest von einer Remote-ApplicationDomain in die aktuelle ApplicationDomain.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SandboxMouseEvent:CLICK_SOMEWHERE"><apiName>CLICK_SOMEWHERE</apiName><shortdesc>
	  Es wurde außerhalb der Sandbox geklickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Es wurde außerhalb der Sandbox geklickt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:DOUBLE_CLICK_SOMEWHERE"><apiName>DOUBLE_CLICK_SOMEWHERE</apiName><shortdesc>
	  Es wurde außerhalb der Sandbox doppelgeklickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>doubleClickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Es wurde außerhalb der Sandbox doppelgeklickt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_DOWN_SOMEWHERE"><apiName>MOUSE_DOWN_SOMEWHERE</apiName><shortdesc>
	  Die Maustaste wurde außerhalb der Sandbox gedrückt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die Maustaste wurde außerhalb der Sandbox gedrückt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_MOVE_SOMEWHERE"><apiName>MOUSE_MOVE_SOMEWHERE</apiName><shortdesc>
	  Die Maus wurde an eine Stelle außerhalb der Sandbox verschoben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseMoveSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die Maus wurde an eine Stelle außerhalb der Sandbox verschoben.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_UP_SOMEWHERE"><apiName>MOUSE_UP_SOMEWHERE</apiName><shortdesc>
	  Die Maustaste wurde außerhalb der Sandbox losgelassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseUpSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die Maustaste wurde außerhalb der Sandbox losgelassen.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_WHEEL_SOMEWHERE"><apiName>MOUSE_WHEEL_SOMEWHERE</apiName><shortdesc>
	  Das Mausrad wurde außerhalb der Sandbox gedreht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Das Mausrad wurde außerhalb der Sandbox gedreht.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:altKey"><apiName>altKey</apiName><shortdesc>
	  Gibt an, ob die Alt-Taste gedrückt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Gibt an, ob die <codeph>Alt</codeph>-Taste gedrückt wurde.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/altkey"><linktext>flash.events.MouseEvent.altkey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:buttonDown"><apiName>buttonDown</apiName><shortdesc>
	  Gibt an, ob die primäre Maustaste gedrückt (true) ist oder nicht (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Gibt an, ob die primäre Maustaste gedrückt (true) ist oder nicht (false).
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/buttonDown"><linktext>flash.events.MouseEvent.buttonDown</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:ctrlKey"><apiName>ctrlKey</apiName><shortdesc>
	  Gibt an, ob die Strg-Taste gedrückt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Gibt an, ob die <codeph>Strg</codeph>-Taste gedrückt wurde.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/ctrlKey"><linktext>flash.events.MouseEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:shiftKey"><apiName>shiftKey</apiName><shortdesc>
	  Gibt an, ob die Umschalttaste gedrückt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Gibt an, ob die <codeph>Umschalttaste</codeph> gedrückt wurde.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/shiftKey"><linktext>flash.events.MouseEvent.shiftKey</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:TouchInteractionEvent"><apiName>TouchInteractionEvent</apiName><shortdesc>
  Mit TouchInteractionEvents werden Berührungsinteraktionen und Reaktionen für verschiedene Komponenten koordiniert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mit TouchInteractionEvents werden Berührungsinteraktionen und Reaktionen für verschiedene Komponenten koordiniert.  
 
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_END_touchInteractionEnd"><apiName>touchInteractionEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TouchInteractionEvent:TOUCH_INTERACTION_END</apiEventType><adobeApiEventClassifier>mx.events:TouchInteractionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_STARTING_touchInteractionStarting"><apiName>touchInteractionStarting</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TouchInteractionEvent:TOUCH_INTERACTION_STARTING</apiEventType><adobeApiEventClassifier>mx.events:TouchInteractionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_START_touchInteractionStart"><apiName>touchInteractionStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TouchInteractionEvent:TOUCH_INTERACTION_START</apiEventType><adobeApiEventClassifier>mx.events:TouchInteractionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.events:TouchInteractionEvent:TouchInteractionEvent"><apiName>TouchInteractionEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_END"><apiName>TOUCH_INTERACTION_END</apiName><shortdesc>
      Die TouchInteractionEvent.TOUCH_INTERACTION_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein touchInteractionEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>touchInteractionEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TouchInteractionEvent.TOUCH_INTERACTION_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>touchInteractionEnd</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>reason</codeph></entry><entry>Der Grund für das Berührungsinteraktionsereignis. Siehe <codeph>mx.events.TouchInteractionReason</codeph>.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Das mit diesem Berührungsinteraktionsereignis verknüpfte Objekt.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_STARTING"><apiName>TOUCH_INTERACTION_STARTING</apiName><shortdesc>
      Die TouchInteractionEvent.TOUCH_INTERACTION_STARTING-Konstante definiert den Wert der type-Eigenschaft eines Ereignisobjekts für ein touchInteractionStarting-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>touchInteractionStarting</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TouchInteractionEvent.TOUCH_INTERACTION_STARTING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>touchInteractionStarting</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>true</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>reason</codeph></entry><entry>Der Grund für das Berührungsinteraktionsereignis. Siehe <codeph>mx.events.TouchInteractionReason</codeph>.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Das mit diesem Berührungsinteraktionsereignis verknüpfte Objekt.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_START"><apiName>TOUCH_INTERACTION_START</apiName><shortdesc>
      Die TouchInteractionEvent.TOUCH_INTERACTION_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein touchInteractionStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>touchInteractionStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TouchInteractionEvent.TOUCH_INTERACTION_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>touchInteractionStart</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>true</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>reason</codeph></entry><entry>Der Grund für das Berührungsinteraktionsereignis. Siehe <codeph>mx.events.TouchInteractionReason</codeph>.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Das mit diesem Berührungsinteraktionsereignis verknüpfte Objekt.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:reason"><apiName>reason</apiName><shortdesc>
      Der Grund für dieses Aktionserfassungsereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Der Grund für dieses Aktionserfassungsereignis.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
      Das Objekt, das versucht, diese Berührungsinteraktion zu erfassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Objekt, das versucht, diese Berührungsinteraktion zu erfassen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
  Die RSLEvent-Klasse stellt ein Ereignisobjekt dar, das von der DownloadProgressBar-Klasse verwendet wird, wenn die Preloader-Klasse eine RSL herunterlädt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die RSLEvent-Klasse stellt ein Ereignisobjekt dar, das von der DownloadProgressBar-Klasse verwendet wird, wenn die Preloader-Klasse eine RSL herunterlädt. 
   </apiDesc></apiClassifierDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link><link href="mx.preloaders.xml#Preloader"><linktext>mx.preloaders.Preloader</linktext></link></related-links><adobeApiEvent id="mx.events:RSLEvent:RSL_ADD_PRELOADED_rslAddPreloaded"><apiName>rslAddPreloaded</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_ADD_PRELOADED</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_COMPLETE_rslComplete"><apiName>rslComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_ERROR_rslError"><apiName>rslError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_ERROR</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_PROGRESS_rslProgress"><apiName>rslProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:RSLEvent:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Folgende Werte sind möglich:
      <ul>
         <li>„rslProgress“ (<codeph>RSLEvent.RSL_PROGRESS</codeph>);</li>
         <li>„rslComplete“ (<codeph>RSLEvent.RSL_COMPLETE</codeph>);</li>
         <li>„rslError“ (<codeph>RSLEvent.RSL_ERROR</codeph>);</li>
      </ul>
           </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
           </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann.
           </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Anzahl der geladenen Bytes während der Verarbeitung durch den Listener.
           </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Gesamtzahl der Bytes, die bei einem erfolgreichen Ladevorgang geladen werden.
           </apiDesc></apiParam><apiParam><apiItemName>rslIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Indexpositionsnummer des ausgewählten Elements in Relation zur Gesamtzahl. Dieser Wert sollt zwischen 0 und <codeph>total - 1</codeph> liegen.
           </apiDesc></apiParam><apiParam><apiItemName>rslTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Zahl der insgesamt geladenen RSLs.
           </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData><apiDesc>Die Position der RSL.
           </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Fehlermeldung, wenn der Typ RSLEvent.RSL_ERROR entspricht.
           </apiDesc></apiParam><apiParam><apiItemName>isResourceModule</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Wert „true“, wenn das Ereignis beim Laden eines ResourceModule auftrat.
           </apiDesc></apiParam><apiParam><apiItemName>loaderInfo</apiItemName><apiType value="flash.display:LoaderInfo"/><apiData>null</apiData><apiDesc>
           </apiDesc></apiParam><apiTipTexts><apiTipText>Konstruktor für <codeph>RSLEvent</codeph>-Objekte.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:RSLEvent:RSL_ADD_PRELOADED"><apiName>RSL_ADD_PRELOADED</apiName><shortdesc>
      Die RSLEvent.RSL_ADD_PRELOADED-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein rslAddPreloaded-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslAddPreloaded</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>RSLEvent.RSL_ADD_PRELOADED</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>rslAddPreloaded</codeph>-Ereignis. Dieses Ereignis wird aus einer IFlexModuleFactory ausgelöst, nachdem eine untergeordnete IFlexModuleFactory eine RSL in ihre Anwendungsdomäne vorab geladen hat. 
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>loaderInfo</codeph></entry><entry>Die mit dieser RSL verknüpfte LoaderInfo-Instanz.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_COMPLETE"><apiName>RSL_COMPLETE</apiName><shortdesc>
      Wird nach dem Herunterladen der RSL ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird nach dem Herunterladen der RSL ausgelöst. Die <codeph>RSLEvent.RSL_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>rslComplete</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Bytes.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtzahl der zu ladenden Bytes.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Leer</entry></row><row><entry><codeph>isResourceModule</codeph></entry><entry>Wert „true“, wenn ein resourceModule anstatt einer RSL geladen wurde.</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Die Indexpositionsnummer der derzeit heruntergeladenen RSL. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Die Zahl der insgesamt heruntergeladenen RSLs. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>url</codeph></entry><entry>Das URLRequest-Objekt, das die Position der heruntergeladenen RSL darstellt.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_ERROR"><apiName>RSL_ERROR</apiName><shortdesc>
      Wird ausgelöst, wenn beim Herunterladen der RSL ein Fehler auftritt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslError</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn beim Herunterladen der RSL ein Fehler auftritt. Die <codeph>RSLEvent.RSL_ERROR</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>rslError</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Leer</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Leer</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry>Eine Fehlermeldung<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>Wert „true“, wenn ein resourceModule anstatt einer RSL geladen wurde.</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Die Indexpositionsnummer der derzeit heruntergeladenen RSL. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Die Zahl der insgesamt heruntergeladenen RSLs. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>url</codeph></entry><entry>Das URLRequest-Objekt, das die Position der heruntergeladenen RSL darstellt.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_PROGRESS"><apiName>RSL_PROGRESS</apiName><shortdesc>
      Wird beim Herunterladen der RSL ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird beim Herunterladen der RSL ausgelöst. Die <codeph>RSLEvent.RSL_PROGRESS</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>rslProgress</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Bytes.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtzahl der zu ladenden Bytes.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry>Leer<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>Wert „true“, wenn ein resourceModule anstatt einer RSL geladen wurde.</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Die Indexpositionsnummer der derzeit heruntergeladenen RSL. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Die Zahl der insgesamt heruntergeladenen RSLs. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>url</codeph></entry><entry>Das URLRequest-Objekt, das die Position der heruntergeladenen RSL darstellt.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Die Fehlermeldung, wenn der Typ RSL_ERROR entspricht; andernfalls null.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die Fehlermeldung, wenn der Typ RSL_ERROR entspricht; andernfalls null.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:isResourceModule"><apiName>isResourceModule</apiName><shortdesc>
      Wert „true“, wenn das Ereignis zum Laden eines resourceModule anstatt einer RSL dient.
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Wert „true“, wenn das Ereignis zum Laden eines resourceModule anstatt einer RSL dient.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:loaderInfo"><apiName>loaderInfo</apiName><shortdesc>
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:LoaderInfo"/></apiValueDef><apiDesc>
       Dies wird nur im RSLEvent.RSL_COMPLETE-Ereignis festgelegt. Andernfalls entspricht loaderInfo „null“.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslIndex"><apiName>rslIndex</apiName><shortdesc>
      Die Indexpositionsnummer der derzeit heruntergeladenen RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexpositionsnummer der derzeit heruntergeladenen RSL. Dies ist eine Zahl zwischen 0 und <codeph>rslTotal - 1</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslTotal"><apiName>rslTotal</apiName><shortdesc>
      Die Zahl der insgesamt vom Preloader heruntergeladenen RSLs.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Zahl der insgesamt vom Preloader heruntergeladenen RSLs.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:url"><apiName>url</apiName><shortdesc>
      Das URLRequest-Objekt, das die Position der heruntergeladenen RSL darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.net:URLRequest"/></apiValueDef><apiDesc>
      Das URLRequest-Objekt, das die Position der heruntergeladenen RSL darstellt.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
  Die ToolTipEvent-Klasse stellt ToolTip-Ereignisse dar, die durch die ToolTipManager-Klasse generiert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ToolTipEvent-Klasse stellt ToolTip-Ereignisse dar, die durch die ToolTipManager-Klasse generiert werden. Die ToolTipManager-Klasse ruft die <codeph>dispatchEvent()</codeph>-Methode des Objekts auf, auf die sich die QuickInfo bezieht, um das Ereignis auszulösen.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_CREATE_toolTipCreate"><apiName>toolTipCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_CREATE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_END_toolTipEnd"><apiName>toolTipEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_END</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_HIDE_toolTipHide"><apiName>toolTipHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_HIDE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN_toolTipShown"><apiName>toolTipShown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOWN</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOW_toolTipShow"><apiName>toolTipShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOW</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_START_toolTipStart"><apiName>toolTipStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_START</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ToolTipEvent:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>toolTip</apiItemName><apiOperationClassifier>mx.core:IToolTip</apiOperationClassifier><apiData>null</apiData><apiDesc>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_CREATE"><apiName>TOOL_TIP_CREATE</apiName><shortdesc>
	  Die ToolTipEvent.TOOL_TIP_CREATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein toolTipCreate-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ToolTipEvent.TOOL_TIP_CREATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>toolTipCreate</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>QuickInfo</codeph></entry><entry>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_END"><apiName>TOOL_TIP_END</apiName><shortdesc>
	  Die ToolTipEvent.TOOL_TIP_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein toolTipEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ToolTipEvent.TOOL_TIP_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>toolTipEnd</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>QuickInfo</codeph></entry><entry>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_HIDE"><apiName>TOOL_TIP_HIDE</apiName><shortdesc>
	  Die ToolTipEvent.TOOL_TIP_HIDE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein toolTipHide-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ToolTipEvent.TOOL_TIP_HIDE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>toolTipHide</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>QuickInfo</codeph></entry><entry>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN"><apiName>TOOL_TIP_SHOWN</apiName><shortdesc>
	  Die ToolTipEvent.TOOL_TIP_SHOWN-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein toolTipShown-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ToolTipEvent.TOOL_TIP_SHOWN</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>toolTipShown</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>QuickInfo</codeph></entry><entry>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOW"><apiName>TOOL_TIP_SHOW</apiName><shortdesc>
	  Die ToolTipEvent.TOOL_TIP_SHOW-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein toolTipShow-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ToolTipEvent.TOOL_TIP_SHOW</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>toolTipShow</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>QuickInfo</codeph></entry><entry>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_START"><apiName>TOOL_TIP_START</apiName><shortdesc>
	  Die ToolTipEvent.TOOL_TIP_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein toolTipStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ToolTipEvent.TOOL_TIP_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>toolTipStart</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>QuickInfo</codeph></entry><entry>Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:toolTip"><apiName>toolTip</apiName><shortdesc>
	  Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IToolTip</apiValueClassifier></apiValueDef><apiDesc>
	  Das ToolTip-Objekt, auf das sich dieses Ereignis bezieht. Diese Objekt ist normalerweise eine Instanz des ToolTip-Objekts, kann jedoch ein beliebiges UIComponent-Objekt sein.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
  Stellt Ereignisobjekte dar, die beim Verschieben einer Flex-Komponente ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt Ereignisobjekte dar, die beim Verschieben einer Flex-Komponente ausgelöst werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:MoveEvent:MOVE_move"><apiName>move</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MoveEvent:MOVE</apiEventType><adobeApiEventClassifier>mx.events:MoveEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MoveEvent:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die vorherige x-Koordinate des Objekts in Pixeln.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die vorherige y-Koordinate des Objekts in Pixeln.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MoveEvent:MOVE"><apiName>MOVE</apiName><shortdesc>
	  Die MoveEvent.MOVE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein move-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>MoveEvent.MOVE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>move</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>oldX</codeph></entry><entry>Die vorherige x-Koordinate des Objekts in Pixeln.</entry></row><row><entry><codeph>oldY</codeph></entry><entry>Die vorherige y-Koordinate des Objekts in Pixeln.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldX"><apiName>oldX</apiName><shortdesc>
	  Die vorherige x-Koordinate des Objekts in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Die vorherige <codeph>x</codeph>-Koordinate des Objekts in Pixeln.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldY"><apiName>oldY</apiName><shortdesc>
	  Die vorherige y-Koordinate des Objekts in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Die vorherige <codeph>y</codeph>-Koordinate des Objekts in Pixeln.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEventKind"><apiName>CollectionEventKind</apiName><shortdesc>
  Die CollectionEventKind-Klasse enthält Konstanten für gültige Werte der Kind-Eigenschaft der mx.events.CollectionEvent-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die CollectionEventKind-Klasse enthält Konstanten für gültige Werte der <codeph>Kind</codeph>-Eigenschaft der mx.events.CollectionEvent-Klasse. Diese Konstanten geben die Art der Änderung an, die an der Sammlung vorgenommen wurde.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links><apiValue id="mx.events:CollectionEventKind:ADD"><apiName>ADD</apiName><shortdesc>
      Gibt an, dass die Sammlung mindestens ein Element hinzugefügt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass die Sammlung mindestens ein Element hinzugefügt hat.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:MOVE"><apiName>MOVE</apiName><shortdesc>
      Gibt an, dass das Element von der durch die CollectionEvent oldLocation-Eigenschaft angegebenen Position an die durch die Location-Eigenschaft angegebene Position verschoben wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass das Element von der durch die CollectionEvent <codeph>oldLocation</codeph>-Eigenschaft angegebenen Position an die durch die <codeph>Location</codeph>-Eigenschaft angegebene Position verschoben wurde.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REFRESH"><apiName>REFRESH</apiName><shortdesc>
      Gibt an, dass die Sammlung eine Sortierung, einen Filter oder beides angewendet hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>refresh</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass die Sammlung eine Sortierung, einen Filter oder beides angewendet hat. Diese Änderung ist möglicherweise einfacher zu verarbeiten als ein RESET.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      Gibt an, dass die Sammlung mindestens ein Element entfernt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass die Sammlung mindestens ein Element entfernt hat.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REPLACE"><apiName>REPLACE</apiName><shortdesc>
      Gibt an, dass das Element an der durch die CollectionEvent-Eigenschaft angegebenen Position ersetzt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>replace</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass das Element an der durch die CollectionEvent <codeph>Location</codeph>-Eigenschaft angegebenen Position ersetzt wurde.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:RESET"><apiName>RESET</apiName><shortdesc>
      Gibt an, dass die Sammlung grundlegend geändert wurde, sodass ein Zurücksetzen notwendig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass die Sammlung grundlegend geändert wurde, sodass ein Zurücksetzen notwendig ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
      Gibt an, dass mindestens ein Element in der Sammlung aktualisiert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Gibt an, dass mindestens ein Element in der Sammlung aktualisiert wurde. Die betroffenen Elemente werden in der <codeph>items</codeph>-Eigenschaft gespeichert.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
  Anforderung, die von einem SystemManager an einen SystemManager in einer anderen Anwendung über eine Brücke gesendet wird, um einen Listener einem bestimmten Ereignis in Ihrem Namen hinzuzufügen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:SWFBridgeRequest</apiBaseClassifier></apiClassifierDef><apiDesc>
  Anforderung, die von einem SystemManager an einen SystemManager in einer anderen Anwendung über eine Brücke gesendet wird, um einen Listener einem bestimmten Ereignis in Ihrem Namen hinzuzufügen. Die <codeph>data</codeph>-Eigenschaft wird nicht verwendet. Nur bestimmte Ereignisse können angefordert werden. Nachdem das Ereignis in der anderen Anwendung ausgelöst wurde, wird es über die Brücke erneut gesendet. Dort empfängt es der anfordernde SystemManager und löst es noch mal auf sich selbst aus. Im Allgemeinen wird diese Anforderung generiert, weil die <codeph>addEventListener()</codeph>-Methode für eines der genehmigten Ereignisse von anderem Code auf dessen SystemManager aufgerufen wurde. Diese Anforderung wird ebenfalls vom SystemManager ausgelöst, damit die Marshalling-Implementierung das Hinzufügen oder Entfernen von Listenern unterschiedlich verarbeiten kann. Bei der Auslösung durch den SystemManager entspricht die Listener-Eigenschaft nicht null;
  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:EventListenerRequest:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
      Erstellt eine neue Anforderung zum Hinzufügen oder Entfernen eines Ereignis-Listeners.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde. Entweder <codeph>EventListenerRequest.ADD</codeph> oder <codeph>EventListenerRequest.REMOVE</codeph>.
           </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
           </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
           </apiDesc></apiParam><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Der Meldungstyp, den Sie normalerweise an die <codeph>addEventListener()</codeph>-Methode übergeben.
           </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Bestimmt, ob der Listener in der Erfassungsphase oder in der Ziel- und Bubbling-Phase arbeitet.
           </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die Prioritätsstufe des Ereignis-Listeners. Prioritäten werden über eine 32-Bit-Ganzzahl zugewiesen.
           </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Bestimmt, ob der Verweis auf den Listener stark oder schwach ist.
     
      </apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef><apiDesc>
      Erstellt eine neue Anforderung zum Hinzufügen oder Entfernen eines Ereignis-Listeners.
     
      </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiConstructor><apiOperation id="mx.events:EventListenerRequest:marshal"><apiName>marshal</apiName><shortdesc>
      Marshalling eines Ereignisses durch Kopieren der relevanten Parameter aus dem Ereignis in ein neues Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Eine EventListenerRequest, die das neue Ereignis definiert.
      
      </apiDesc><apiOperationClassifier>mx.events:EventListenerRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das Ereignis für den Marshalling-Vorgang.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
      Marshalling eines Ereignisses durch Kopieren der relevanten Parameter aus dem Ereignis in ein neues Ereignis.
         
         </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:EventListenerRequest:ADD_EVENT_LISTENER_REQUEST"><apiName>ADD_EVENT_LISTENER_REQUEST</apiName><shortdesc>
      Anforderung zum Hinzufügen eines Ereignis-Listeners.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung zum Hinzufügen eines Ereignis-Listeners.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:REMOVE_EVENT_LISTENER_REQUEST"><apiName>REMOVE_EVENT_LISTENER_REQUEST</apiName><shortdesc>
      Anforderung zum Entfernen eines Ereignis-Listeners.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung zum Entfernen eines Ereignis-Listeners.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:eventType:get"><apiName>eventType</apiName><shortdesc>
      Der Ereignistyp, auf den der Listener wartet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Der Ereignistyp, auf den der Listener wartet.
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#Event/type"><linktext>flash.events.Event.type</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:listener:get"><apiName>listener</apiName><shortdesc>
      Die aufzurufende Methode oder Funktion
           </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Function"/></apiValueDef><apiDesc>
      Die aufzurufende Methode oder Funktion
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:priority:get"><apiName>priority</apiName><shortdesc>
      Der Priority-Parameter von addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Der <codeph>Priority</codeph>-Parameter von <codeph>addEventListener()</codeph>.
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useCapture:get"><apiName>useCapture</apiName><shortdesc>
      Der useCapture-Parameter von addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Der <codeph>useCapture</codeph>-Parameter von <codeph>addEventListener()</codeph>.
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useWeakReference:get"><apiName>useWeakReference</apiName><shortdesc>
      Der useWeakReference-Parameter von addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Der <codeph>useWeakReference</codeph>-Parameter von <codeph>addEventListener()</codeph>.
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
 Die PropertyChangeEvent-Klasse stellt das Ereignisobjekt dar, das an den Ereignis-Listener übergeben wird, wenn eine Objekteigenschaft geändert wurde und enthält Informationen über die Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
 Die PropertyChangeEvent-Klasse stellt das Ereignisobjekt dar, das an den Ereignis-Listener übergeben wird, wenn eine Objekteigenschaft geändert wurde und enthält Informationen über die Änderung. Dieses Ereignis wird von Sammelklassen verwendet. Nur daran können Sammlungen erkennen, dass die Daten, die sie darstellen, geändert wurden. Dieses Ereignis wird ebenfalls vom Flex-Datenbindungsmechanismus verwendet.
 
 </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEventKind"><linktext>PropertyChangeEventKind</linktext></link></related-links><adobeApiEvent id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE_propertyChange"><apiName>propertyChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:PropertyChangeEvent:PROPERTY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:PropertyChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:PropertyChangeEvent:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp; gibt die Aktion an, die das Ereignis ausgelöst hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Gibt die Art der Änderung an. Mögliche Werte sind <codeph>PropertyChangeEventKind.UPDATE</codeph>, <codeph>PropertyChangeEventKind.DELETE</codeph> und <codeph>null</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ein String, QName oder int zur Angabe der geänderten Eigenschaft.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Der Wert der Eigenschaft vor der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Der Wert der Eigenschaft nach der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Das Objekt, das geändert wurde.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:PropertyChangeEvent:createUpdateEvent"><apiName>createUpdateEvent</apiName><shortdesc>
      Gibt ein neues PropertyChangeEvent der Art PropertyChangeEventKind.UPDATE mit den angegebenen Eigenschaften zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Ein neu erstelltes PropertyChangeEvent mit den angegebenen Eigenschaften. 
      
      </apiDesc><apiOperationClassifier>mx.events:PropertyChangeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiDesc>Das Objekt, das geändert wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiDesc>Ein String, QName oder int zur Angabe der geänderten Eigenschaft.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiDesc>Der Wert der Eigenschaft vor der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiDesc>Der Wert der Eigenschaft nach der Änderung.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt ein neues PropertyChangeEvent der Art <codeph>PropertyChangeEventKind.UPDATE</codeph> mit den angegebenen Eigenschaften zurück. Dies ist eine bequeme Methode.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE"><apiName>PROPERTY_CHANGE</apiName><shortdesc>
      Die PropertyChangeEvent.PROPERTY_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein PropertyChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>propertyChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>PropertyChangeEvent.PROPERTY_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>PropertyChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>Wird vom Konstruktor bestimmt; standardmäßig „false“.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>Wird vom Konstruktor bestimmt; standardmäßig „false“.</entry></row><row><entry><codeph>kind</codeph></entry><entry>Art der Änderung; PropertyChangeEventKind.UPDATE oder PropertyChangeEventKind.DELETE.</entry></row><row><entry><codeph>oldValue</codeph></entry><entry>Der ursprüngliche Eigenschaftswert.</entry></row><row><entry><codeph>newValue</codeph></entry><entry>Der neue Eigenschaftswert, falls vorhanden.</entry></row><row><entry><codeph>property</codeph></entry><entry>Die geänderte Eigenschaft.</entry></row><row><entry><codeph>source</codeph></entry><entry>Das Objekt mit der geänderten Eigenschaft.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:kind"><apiName>kind</apiName><shortdesc>
      Gibt die Art der Änderung an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Gibt die Art der Änderung an. Mögliche Werte sind <codeph>PropertyChangeEventKind.UPDATE</codeph>, <codeph>PropertyChangeEventKind.DELETE</codeph> und <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:newValue"><apiName>newValue</apiName><shortdesc>
      Der Wert der Eigenschaft nach der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Wert der Eigenschaft nach der Änderung.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:oldValue"><apiName>oldValue</apiName><shortdesc>
      Der Wert der Eigenschaft vor der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Wert der Eigenschaft vor der Änderung.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:property"><apiName>property</apiName><shortdesc>
      Ein String, QName oder int zur Angabe der geänderten Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Ein String, QName oder int zur Angabe der geänderten Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:source"><apiName>source</apiName><shortdesc>
      Das Objekt, das geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Objekt, das geändert wurde.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
  Die StyleEvent-Klasse stellt ein Ereignisobjekt dar, das von der StyleManager-Klasse beim Herunterladen einer Stil-SWF verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die StyleEvent-Klasse stellt ein Ereignisobjekt dar, das von der StyleManager-Klasse beim Herunterladen einer Stil-SWF verwendet wird.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.styles.xml#StyleManager"><linktext>mx.styles.StyleManager</linktext></link></related-links><adobeApiEvent id="mx.events:StyleEvent:COMPLETE_styleComplete"><apiName>styleComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:ERROR_styleError"><apiName>styleError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:PROGRESS_styleProgress"><apiName>styleProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StyleEvent:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Folgende Werte sind möglich:
      <ul>
         <li>„progress“ (<codeph>StyleEvent.PROGRESS</codeph>);</li>
         <li>„complete“ (<codeph>StyleEvent.COMPLETE</codeph>);</li>
         <li>„error“ (<codeph>StyleEvent.ERROR</codeph>);</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Anzahl der geladenen Bytes während der Verarbeitung durch den Listener.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Gesamtzahl der Bytes, die bei einem erfolgreichen Ladevorgang geladen werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Fehlermeldung, wenn der Typ StyleEvent.ERROR entspricht.
     
      </apiDesc></apiParam><apiTipTexts><apiTipText>Konstruktor für <codeph>StyleEvent</codeph>-Objekte.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StyleEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      Wird nach dem erfolgreichen Herunterladen der Stil-SWF ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird nach dem erfolgreichen Herunterladen der Stil-SWF ausgelöst. Die <codeph>StyleEvent.COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>styleComplete</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Leer</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Wird ausgelöst, wenn beim Herunterladen der Stil-SWF ein Fehler auftritt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn beim Herunterladen der Stil-SWF ein Fehler auftritt. Die <codeph>StyleEvent.ERROR</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>styleError</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Leer</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Leer</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry>Eine Fehlermeldung<entry/></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Wird beim Herunterladen der Stil-SWF ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird beim Herunterladen der Stil-SWF ausgelöst. Die <codeph>StyleEvent.PROGRESS</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>styleProgress</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Bytes.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtzahl der zu ladenden Bytes.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry>Leer<entry/></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Die Fehlermeldung, wenn der Typ ERROR entspricht; andernfalls null.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die Fehlermeldung, wenn der <codeph>Typ</codeph> <codeph>ERROR</codeph> entspricht; andernfalls <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
  Stellt Ereignisobjekte dar, die beim Ändern der Größe einer Flex-Komponente ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt Ereignisobjekte dar, die beim Ändern der Größe einer Flex-Komponente ausgelöst werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ResizeEvent:RESIZE_resize"><apiName>resize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResizeEvent:RESIZE</apiEventType><adobeApiEventClassifier>mx.events:ResizeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResizeEvent:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldWidth</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die vorherige Breite des Objekts in Pixeln.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldHeight</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die vorherige Höhe des Objekts in Pixeln.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResizeEvent:RESIZE"><apiName>RESIZE</apiName><shortdesc>
	  Die ResizeEvent.RESIZE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein resize-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resize</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ResizeEvent.RESIZE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>resize</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>oldHeight</codeph></entry><entry>Die vorherige Höhe des Objekts in Pixeln.</entry></row><row><entry><codeph>oldWidth</codeph></entry><entry>Die vorherige Breite des Objekts in Pixeln.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldHeight"><apiName>oldHeight</apiName><shortdesc>
	  Die vorherige Höhe des Objekts in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Die vorherige <codeph>Höhe</codeph> des Objekts in Pixeln.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldWidth"><apiName>oldWidth</apiName><shortdesc>
	  Die vorherige Breite des Objekts in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Die vorherige <codeph>Breite</codeph> des Objekts in Pixeln.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
  Diese Event-Unterklasse ist dynamisch. Das bedeutet, dass Sie beliebige Ereigniseigenschaften für die Instanzen zur Laufzeit festlegen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Diese Event-Unterklasse ist dynamisch. Das bedeutet, dass Sie beliebige Ereigniseigenschaften für die Instanzen zur Laufzeit festlegen können.
 
  <p>Im Vergleich dazu sind Event und deren andere Unterklassen nicht dynamisch. Sie können also nur Eigenschaften festlegen, die in diesen Klassen deklariert wurden. Bei einem Anwendungsprototyp kann die Verwendung eines DynamicEvent einfacher sein, da Sie so zuvor keine Event-Unterklasse zum Deklarieren der Eigenschaften erstellen müssen. Letztendlich sollten Sie jedoch alle DynamicEvents entfernen und Event-Unterklassen erstellen, da diese schneller und sicherer sind. Ein DynamicEvent ist so flexibel, dass der Compiler den Fehler sofort findet, wenn Sie eine falsche Eigenschaft festlegen oder einen falschen Wertetyp zuweisen.</p>
 
  <p>Beispiel:</p>
 
  <pre>
  var event:DynamicEvent = new DynamicEvent("credentialsChanged");
  event.name = name;
  event.passsword = password; // misspelling won't be caught!
  dispatchEvent(event);
  </pre>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:DynamicEvent:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.events:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
  Die DropdownEvent-Klasse stellt das Ereignisobjekt dar, das für open- und close-Ereignisse an den Ereignis-Listener übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DropdownEvent-Klasse stellt das Ereignisobjekt dar, das für <codeph>open</codeph>- und <codeph>close</codeph>-Ereignisse an den Ereignis-Listener übergeben wird.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:DropdownEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DropdownEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:OPEN</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DropdownEvent:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Ein Wert, der den Typ der Eingabeaktion angibt, durch die das Ereignis ausgelöst wurde.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DropdownEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
	  Die DropdownEvent.CLOSE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein close-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DropdownEvent.CLOSE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>close</codeph>-Ereignis.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Ein Wert, der den Typ der Eingabeaktion angibt, durch die das Ereignis ausgelöst wurde.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
	  Die DropdownEvent.OPEN-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein open-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DropdownEvent.OPEN</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>open</codeph>-Ereignis.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Ein Wert, der den Typ der Eingabeaktion angibt, durch die das Ereignis ausgelöst wurde.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Wenn das Steuerelement durch eine Benutzeraktion geöffnet oder geschlossen wird, enthält diese Eigenschaft einen Wert, der den Typ der Eingabeaktion angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Wenn das Steuerelement durch eine Benutzeraktion geöffnet oder geschlossen wird, enthält diese Eigenschaft einen Wert, der den Typ der Eingabeaktion angibt. Der Wert lautet entweder <codeph>InteractionInputType.MOUSE</codeph> oder <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DragEvent"><apiName>DragEvent</apiName><shortdesc>
  Die DragEvent-Klasse stellt Ereignisobjekte dar, die beim Drag &amp; Drop-Vorgang ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DragEvent-Klasse stellt Ereignisobjekte dar, die beim Drag &amp; Drop-Vorgang ausgelöst werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#DragManager"><linktext>mx.managers.DragManager</linktext></link><link href="mx.core.xml#DragSource"><linktext>mx.core.DragSource</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:DragEvent:DRAG_COMPLETE_dragComplete"><apiName>dragComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_DROP_dragDrop"><apiName>dragDrop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_DROP</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_ENTER_dragEnter"><apiName>dragEnter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_ENTER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_EXIT_dragExit"><apiName>dragExit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_EXIT</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_OVER_dragOver"><apiName>dragOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_OVER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_START_dragStart"><apiName>dragStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_START</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DragEvent:DragEvent"><apiName>DragEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>IUIComponent zur Angabe der Komponente, von der der Ziehvorgang eingeleitet wird.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>Ein DragSource-Objekt, das die gezogenen Daten enthält.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Angegebene Dropaktion wie z. B.<codeph>DragManager.MOVE</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Strg</codeph>-Taste gedrückt wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Alt</codeph>-Taste gedrückt wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Umschalttaste</codeph> gedrückt wurde.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor. Wird normalerweise durch das Flex-Steuerelement aufgerufen und nicht im Anwendungscode verwendet.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DragEvent:DRAG_COMPLETE"><apiName>DRAG_COMPLETE</apiName><shortdesc>
	  Die DragEvent.DRAG_COMPLETE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dragComplete-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DragEvent.DRAG_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dragComplete</codeph>-Ereignis.
     
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Die Aktion, durch die das Ereignis ausgelöst wurde: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> oder <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Das DragSource-Objekt, das die gezogenen Daten enthält.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_DROP"><apiName>DRAG_DROP</apiName><shortdesc>
	  Die DragEvent.DRAG_DROP-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dragDrop-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragDrop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DragEvent.DRAG_DROP</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dragDrop</codeph>-Ereignis.
     
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Die Aktion, durch die das Ereignis ausgelöst wurde: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> oder <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Das DragSource-Objekt, das die gezogenen Daten enthält.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_ENTER"><apiName>DRAG_ENTER</apiName><shortdesc>
	  Die DragEvent.DRAG_ENTER-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dragEnter-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragEnter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DragEvent.DRAG_ENTER</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dragEnter</codeph>-Ereignis.
     
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Die Aktion, durch die das Ereignis ausgelöst wurde (immer <codeph>DragManager.MOVE</codeph>).</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Das DragSource-Objekt, das die gezogenen Daten enthält.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_EXIT"><apiName>DRAG_EXIT</apiName><shortdesc>
	  Die DragEvent.DRAG_EXIT-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dragExit-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragExit</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DragEvent.DRAG_EXIT</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dragExit</codeph>-Ereignis.
     
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Die Aktion, durch die das Ereignis ausgelöst wurde: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> oder <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Das DragSource-Objekt, das die gezogenen Daten enthält.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_OVER"><apiName>DRAG_OVER</apiName><shortdesc>
	  Die DragEvent.DRAG_OVER-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dragOver-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>DragEvent.DRAG_OVER</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dragOver</codeph>-Ereignis.
     
	 <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	 <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Die Aktion, durch die das Ereignis ausgelöst wurde: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> oder <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Das DragSource-Objekt, das die gezogenen Daten enthält.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_START"><apiName>DRAG_START</apiName><shortdesc>
	  Die DragEvent.DRAG_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dragStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die DragEvent.DRAG_START-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dragStart</codeph>-Ereignis.
     
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Die Aktion, durch die das Ereignis ausgelöst wurde: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> oder <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Das DragSource-Objekt, das die gezogenen Daten enthält.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:action"><apiName>action</apiName><shortdesc>
	  Die angeforderte Aktion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Die angeforderte Aktion. Entweder <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> oder <codeph>DragManager.NONE</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragInitiator"><apiName>dragInitiator</apiName><shortdesc>
	  Die Komponente, durch die der Ziehvorgang eingeleitet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
	  Die Komponente, durch die der Ziehvorgang eingeleitet wurde.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragSource"><apiName>dragSource</apiName><shortdesc>
	  Das DragSource-Objekt, das die gezogenen Daten enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:DragSource</apiValueClassifier></apiValueDef><apiDesc>
	  Das DragSource-Objekt, das die gezogenen Daten enthält.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:draggedItem"><apiName>draggedItem</apiName><shortdesc>
	  Wenn die dragInitiator-Eigenschaft ein IAutomationObject enthält, enthält diese Eigenschaft ein untergeordnetes IAutomationObject in der Nähe des Mauszeigers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Wenn die <codeph>dragInitiator</codeph>-Eigenschaft ein IAutomationObject enthält, enthält diese Eigenschaft ein untergeordnetes IAutomationObject in der Nähe des Mauszeigers. Wenn die <codeph>dragInitiator</codeph>-Eigenschaft kein IAutomationObject enthält, entspricht diese Eigenschaft <codeph>null</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
  Stellt Ereignisobjekte dar, die sich auf Flex-Tween-Effekte beziehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt Ereignisobjekte dar, die sich auf Flex-Tween-Effekte beziehen. Flex-Effekte lösen zwei Typen von tween-Ereignissen aus:
  <ul>
    <li><codeph>tweenUpdate</codeph></li>
    <li><codeph>tweenEnd</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link></related-links><adobeApiEvent id="mx.events:TweenEvent:TWEEN_END_tweenEnd"><apiName>tweenEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_END</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_START_tweenStart"><apiName>tweenStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_START</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_UPDATE_tweenUpdate"><apiName>tweenUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TweenEvent:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Für ein <codeph>tweenStart</codeph>- oder <codeph>tweenUpdate</codeph>-Ereignis wird der Wert an eine <codeph>onTweenUpdate()</codeph>-Methode übergeben; für ein <codeph>tweenEnd</codeph>-Ereignis wird der Wert an die <codeph>onTweenEnd()</codeph>-Methode übergeben.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TweenEvent:TWEEN_END"><apiName>TWEEN_END</apiName><shortdesc>
	  Die TweenEvent.TWEEN_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein tweenEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>TweenEvent.TWEEN_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>tweenEnd</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>value</codeph></entry><entry>Der an die <codeph>onTweenEnd()</codeph>-Methode übergebene Wert.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_START"><apiName>TWEEN_START</apiName><shortdesc>
	  Die TweenEvent.TWEEN_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein tweenStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>TweenEvent.TWEEN_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>tweenStart</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>value</codeph></entry><entry>Der an die <codeph>onTweenEnd()</codeph>-Methode übergebene Wert.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_UPDATE"><apiName>TWEEN_UPDATE</apiName><shortdesc>
	  Die TweenEvent.TWEEN_UPDATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein tweenUpdate-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>TweenEvent.TWEEN_UPDATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>tweenUpdate</codeph>-Ereignis. 
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>value</codeph></entry><entry>Der an die <codeph>onTweenEnd()</codeph>-Methode übergebene Wert.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:value"><apiName>value</apiName><shortdesc>
	  Für ein tweenStart- oder tweenUpdate-Ereignis wird der Wert an eine onTweenUpdate()-Methode übergeben; für ein tweenEnd-Ereignis wird der Wert an die onTweenEnd()-Methode übergeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Für ein <codeph>tweenStart</codeph>- oder <codeph>tweenUpdate</codeph>-Ereignis wird der Wert an eine <codeph>onTweenUpdate()</codeph>-Methode übergeben; für ein <codeph>tweenEnd</codeph>-Ereignis wird der Wert an die <codeph>onTweenEnd()</codeph>-Methode übergeben.
	 
	  <p>Den exakten Wert dieser Eigenschaft finden Sie in der Instanzklasse für jeden tween-Effekt.</p>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.effectClasses.xml#ActionEffectInstance"><linktext>mx.effects.effectClasses.ActionEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#BlurInstance"><linktext>mx.effects.effectClasses.BlurInstance</linktext></link><link href="mx.effects.effectClasses.xml#DissolveInstance"><linktext>mx.effects.effectClasses.DissolveInstance</linktext></link><link href="mx.effects.effectClasses.xml#FadeInstance"><linktext>mx.effects.effectClasses.FadeInstance</linktext></link><link href="" invalidHref="mx.effects.effectClasses.GlowInstance.xml"><linktext>mx.effects.effectClasses.GlowInstance</linktext></link><link href="mx.effects.effectClasses.xml#MaskEffectInstance"><linktext>mx.effects.effectClasses.MaskEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#MoveInstance"><linktext>mx.effects.effectClasses.MoveInstance</linktext></link><link href="" invalidHref="mx.effects.effectClasses.ResizeInstance.xml"><linktext>mx.effects.effectClasses.ResizeInstance</linktext></link><link href="mx.effects.effectClasses.xml#RotateInstance"><linktext>mx.effects.effectClasses.RotateInstance</linktext></link><link href="mx.effects.effectClasses.xml#ZoomInstance"><linktext>mx.effects.effectClasses.ZoomInstance</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
  Die FlexEvent-Klasse stellt das Ereignisobjekt dar, das für viele Flex-Ereignisse an den Ereignis-Listener übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die FlexEvent-Klasse stellt das Ereignisobjekt dar, das für viele Flex-Ereignisse an den Ereignis-Listener übergeben wird.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexEvent:ADD_FOCUS_MANAGER_addFocusManager"><apiName>addFocusManager</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD_FOCUS_MANAGER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ADD_add"><apiName>add</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:APPLICATION_COMPLETE_applicationComplete"><apiName>applicationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:APPLICATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:BACK_KEY_PRESSED_backKeyPressed"><apiName>backKeyPressed</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:BACK_KEY_PRESSED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGE_END_changeEnd"><apiName>changeEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGE_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGE_START_changeStart"><apiName>changeStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGE_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE_contentCreationComplete"><apiName>contentCreationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CONTENT_CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CREATION_COMPLETE_creationComplete"><apiName>creationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CURSOR_UPDATE_cursorUpdate"><apiName>cursorUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CURSOR_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:DATA_CHANGE_dataChange"><apiName>dataChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_FRAME_flexEventEnterFrame"><apiName>flexEventEnterFrame</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_FRAME</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_STATE_enterState"><apiName>enterState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:EXIT_STATE_exitState"><apiName>exitState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:EXIT_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE_flexWindowActivate"><apiName>flexWindowActivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE_flexWindowDeactivate"><apiName>flexWindowDeactivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:HIDE_hide"><apiName>hide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:HIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:IDLE_idle"><apiName>idle</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:IDLE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INITIALIZE_initialize"><apiName>initialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_COMPLETE_initComplete"><apiName>initComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_PROGRESS_initProgress"><apiName>initProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:LOADING_loading"><apiName>loading</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:LOADING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:MENU_KEY_PRESSED_menuKeyPressed"><apiName>menuKeyPressed</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:MENU_KEY_PRESSED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:MUTED_CHANGE_mutedChange"><apiName>mutedChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:MUTED_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:NAVIGATOR_STATE_LOADING_applicationRestoring"><apiName>applicationRestoring</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:NAVIGATOR_STATE_LOADING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:NAVIGATOR_STATE_SAVING_navigatorStateSaving"><apiName>navigatorStateSaving</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:NAVIGATOR_STATE_SAVING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:PREINITIALIZE_preinitialize"><apiName>preinitialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:PREINITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REMOVE_remove"><apiName>remove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REMOVE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:RENDER_flexEventRender"><apiName>flexEventRender</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:RENDER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_END_repeatEnd"><apiName>repeatEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_START_repeatStart"><apiName>repeatStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_repeat"><apiName>repeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SELECTION_CHANGE_deferredContentCreate"><apiName>deferredContentCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SELECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SHOW_show"><apiName>show</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SHOW</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:STATE_CHANGE_COMPLETE_stateChangeComplete"><apiName>stateChangeComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:STATE_CHANGE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:STATE_CHANGE_INTERRUPTED_stateChangeInterrupted"><apiName>stateChangeInterrupted</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:STATE_CHANGE_INTERRUPTED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSFORM_CHANGE_transformChange"><apiName>transformChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSFORM_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSITION_END_transitionEnd"><apiName>transitionEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSITION_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSITION_START_transitionStart"><apiName>transitionStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSITION_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:UPDATE_COMPLETE_updateComplete"><apiName>updateComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:UPDATE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:URL_CHANGED_urlChanged"><apiName>urlChanged</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:URL_CHANGED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALUE_COMMIT_valueCommit"><apiName>valueCommit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALUE_COMMIT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexEvent:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexEvent:ADD_FOCUS_MANAGER"><apiName>ADD_FOCUS_MANAGER</apiName><shortdesc>
      Die FlexEvent.ADD_FOCUS_MANAGER-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein addFocusManager-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addFocusManager</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.ADD_FOCUS_MANAGER</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>addFocusManager</codeph>-Ereignis. Dieses Ereignis wird von einem IFocusManagerContainer ausgelöst, wenn der focusManager zugewiesen wird.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ADD"><apiName>ADD</apiName><shortdesc>
      Die FlexEvent.ADD-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein add-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.ADD</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>add</codeph>-Ereignis.
     
     <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:APPLICATION_COMPLETE"><apiName>APPLICATION_COMPLETE</apiName><shortdesc>
      Die FlexEvent.APPLICATION_COMPLETE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein applicationComplete-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.APPLICATION_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>applicationComplete</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:BACK_KEY_PRESSED"><apiName>BACK_KEY_PRESSED</apiName><shortdesc>
      Die FlexEvent.BACK_KEY_PRESSED-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein backKeyPressed-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>backKeyPressed</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.BACK_KEY_PRESSED</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>backKeyPressed</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:BUTTON_DOWN"><apiName>BUTTON_DOWN</apiName><shortdesc>
      Die FlexEvent.BUTTON_DOWN-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein buttonDown-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buttonDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.BUTTON_DOWN</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>buttonDown</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGE_END"><apiName>CHANGE_END</apiName><shortdesc>
      Die FlexEvent.CHANGE_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein changeEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changeEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.CHANGE_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>changeEnd</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGE_START"><apiName>CHANGE_START</apiName><shortdesc>
      Die FlexEvent.CHANGE_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein changeStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changeStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.CHANGE_START-</codeph>Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>changeStart</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      Die FlexEvent.CHANGING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein changing-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.CHANGING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>changing</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE"><apiName>CONTENT_CREATION_COMPLETE</apiName><shortdesc>
      Die FlexEvent.CONTENT_CREATION_COMPLETE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein contentCreationComplete-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>contentCreationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.CONTENT_CREATION_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>contentCreationComplete</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CREATION_COMPLETE"><apiName>CREATION_COMPLETE</apiName><shortdesc>
      Die FlexEvent.CREATION_COMPLETE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein creationComplete-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>creationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.CREATION_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>creationComplete</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CURSOR_UPDATE"><apiName>CURSOR_UPDATE</apiName><shortdesc>
      Die FlexEvent.CURSOR_UPDATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein cursorUpdate-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.CURSOR_UPDATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>cursorUpdate</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:DATA_CHANGE"><apiName>DATA_CHANGE</apiName><shortdesc>
      Die FlexEvent.DATA_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein dataChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dataChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.DATA_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>dataChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_FRAME"><apiName>ENTER_FRAME</apiName><shortdesc>
      Die FlexEvent.ENTER_FRAME-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein Event.ENTER_FRAMER-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventEnterFrame</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.ENTER_FRAME</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>Event.ENTER_FRAMER</codeph>-Ereignis. Wenn Sie einen Listener zu ENTER_FRAME auf dem <codeph>SystemManager</codeph> hinzufügen, wird ein Listener für das Event.ENTER_FRAME-Ereignis auf der <codeph>Bühne</codeph> (falls Zugriff besteht) oder auf dem <codeph>SystemManager</codeph> (falls kein Zugriff auf die <codeph>Bühne</codeph> möglich ist) hinzugefügt. Der Listener sollte Event.ENTER_FRAME-Ereignisse erwarten.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_STATE"><apiName>ENTER_STATE</apiName><shortdesc>
      Die FlexEvent.ENTER_STATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein enterState-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enterState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.ENTER_STATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>enterState</codeph>-Ereignis.
     
     <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
      Die FlexEvent.ENTER-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein enter-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die ￼<codeph>FlexEvent.ENTER</codeph>￼-Konstante definiert den Wert der ￼<codeph>type</codeph>￼-Eigenschaft des Ereignisobjekts für ein <codeph>enter</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:EXIT_STATE"><apiName>EXIT_STATE</apiName><shortdesc>
      Die FlexEvent.EXIT_STATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein exitState-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>exitState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.EXIT_STATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>exitState</codeph>-Ereignis.
     
     <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE"><apiName>FLEX_WINDOW_ACTIVATE</apiName><shortdesc>
      Die FlexEvent.FLEX_WINDOW_ACTIVATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein flexWindowActivate-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.FLEX_WINDOW_ACTIVATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>flexWindowActivate</codeph>-Ereignis. Ähnlich wie flash.events.AIREvent.WINDOW_ACTIVATE, mit dem Unterschied, dass dies in Flash und AIR ausgelöst wird, wenn ein Flex-Fenster oder Popup aktiviert wird. Dieses Ereignis wird vom focusManager ausgelöst, der den Fokus in diesem Container verwaltet.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE"><apiName>FLEX_WINDOW_DEACTIVATE</apiName><shortdesc>
      Die FlexEvent.FLEX_WINDOW_DEACTIVATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein flexWindowDeactivate-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.FLEX_WINDOW_DEACTIVATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>flexWindowDeactivate</codeph>-Ereignis. Ähnlich wie flash.events.AIREvent.FLEX_WINDOW_DEACTIVATE, mit dem Unterschied, dass dies in Flash und AIR ausgelöst wird, wenn ein Flex-Fenster oder Popup deaktiviert wird. Dieses Ereignis wird vom focusManager ausgelöst, der den Fokus in diesem Container verwaltet.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:HIDE"><apiName>HIDE</apiName><shortdesc>
      Die FlexEvent.HIDE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein hide-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.HIDE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>hide</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:IDLE"><apiName>IDLE</apiName><shortdesc>
      Die FlexEvent.IDLE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein idle-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>idle</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.IDLE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>idle</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INITIALIZE"><apiName>INITIALIZE</apiName><shortdesc>
      Die FlexEvent.INITIALIZE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein initialize-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.INITIALIZE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>initialize</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INIT_COMPLETE"><apiName>INIT_COMPLETE</apiName><shortdesc>
      Wird nach Initialisierung einer Flex-Anwendung ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird nach Initialisierung einer Flex-Anwendung ausgelöst. Sie verwenden dieses Ereignis bei der Erstellung einer angepassten Downloadfortschrittsleiste.
     
      <p>Die Preloader-Klasse löst dieses Ereignis immer nur einmal, und zwar als letztes Ereignis aus. Bei Auslösung dieses Ereignisses sollte der Ereignis-Listener ein Event.COMPLETE-Ereignis auslösen.</p>
     
      <p>Eine Downloadfortschrittsleiste muss nach dem Empfang eines <codeph>init_complete</codeph>-Ereignisses ein <codeph>complete</codeph>-Ereignis auslösen. Das <codeph>complete</codeph>-Ereignis informiert den Preloader, dass die Downloadfortschrittsleiste alle Vorgänge durchgeführt hat und geschlossen werden kann.</p>
      
      <p>Eine Downloadfortschrittsleiste kann nach dem Empfang eines <codeph>init_complete</codeph>-Ereignisses und vor dem Auslösen eines <codeph>complete</codeph>-Ereignisses zusätzliche Aufgaben wie die Wiedergabe einer Animation durchführen. Das Auslösen des <codeph>complete</codeph>-Ereignisses sollte die letzte Aktion der Downloadfortschrittsleiste sein.</p>
     
      <p>Die FlexEvent.INIT_COMPLETE-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>initComplete</codeph>-Ereignis.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INIT_PROGRESS"><apiName>INIT_PROGRESS</apiName><shortdesc>
      Wird ausgelöst, wenn die Flex-Anwendung eine Initialisierungsphase abschließt, wie durch Aufrufe der measure()-, commitProperties()- oder updateDisplayList()-Methoden angegeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn die Flex-Anwendung eine Initialisierungsphase abschließt, wie durch Aufrufe der <codeph>measure()</codeph>-, <codeph>commitProperties()</codeph>- oder <codeph>updateDisplayList()</codeph>-Methoden angegeben. Dieses Ereignis beschreibt den Fortschritt der Anwendung in der Initialisierungsphase. Sie verwenden dieses Ereignis bei der Erstellung einer angepassten Downloadfortschrittsleiste.
     
      <p>Die FlexEvent.INIT_PROGRESS-Konstante definiert den Wert der ￼<codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>initProgress</codeph>-Ereignis.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
      Die FlexEvent.INVALID-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein invalid-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.INVALID</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>invalid</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      Die FlexEvent.LOADING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein loading-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.LOADING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>loading</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:MENU_KEY_PRESSED"><apiName>MENU_KEY_PRESSED</apiName><shortdesc>
      Die FlexEvent.MENU_KEY_PRESSED-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein menuKeyPressed-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuKeyPressed</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.MENU_KEY_PRESSED</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>menuKeyPressed</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:MUTED_CHANGE"><apiName>MUTED_CHANGE</apiName><shortdesc>
      Die FlexEvent.MUTED_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein mutedChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mutedChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.MUTED_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>mutedChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:NAVIGATOR_STATE_LOADING"><apiName>NAVIGATOR_STATE_LOADING</apiName><shortdesc>
      Die FlexEvent.NAVIGATOR_STATE_LOADING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein navigatorStateLoading-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>navigatorStateLoading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.NAVIGATOR_STATE_LOADING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>navigatorStateLoading</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:NAVIGATOR_STATE_SAVING"><apiName>NAVIGATOR_STATE_SAVING</apiName><shortdesc>
      Die FlexEvent.NAVIGATOR_STATE_SAVING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein navigatorStateSaving-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>navigatorStateSaving</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.NAVIGATOR_STATE_SAVING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>navigatorStateSaving</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:PREINITIALIZE"><apiName>PREINITIALIZE</apiName><shortdesc>
      Die FlexEvent.PREINITIALIZE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein preinitialize-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>preinitialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.PREINITIALIZE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>preinitialize</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:READY"><apiName>READY</apiName><shortdesc>
      Die FlexEvent.READY-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein ready-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.READY</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>ready</codeph>-Ereignis. Dieses Ereignis wird durch die BitmapImage- und Spark-Image-Klassen ausgelöst, um zu kennzeichnen, dass die zugewiesene Bildquelle vollständig geladen wurde.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>returnValue</codeph></entry><entry>null</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myImage.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myImage“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>FlexEvent.READY</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      Die FlexEvent.REMOVE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein remove-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.REMOVE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>remove</codeph>-Ereignis.
     
     <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:RENDER"><apiName>RENDER</apiName><shortdesc>
      Die FlexEvent.RENDER-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein Event.RENDER-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventRender</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.RENDER</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>Event.RENDER</codeph>-Ereignis. Wenn Sie einen Listener auf dem <codeph>SystemManager</codeph> hinzufügen, wird ein Listener für FlexEvent.RENDER-Ereignisse auf der <codeph>Bühne</codeph> oder auf dem <codeph>SystemManager</codeph> (falls kein Zugriff auf die <codeph>Bühne</codeph> möglich ist) hinzugefügt. Der Listener generiert außerdem ein Event.RENDER-Ereignis. Die Listener-Funktion sollte Event.RENDER-Ereignisse erwarten.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_END"><apiName>REPEAT_END</apiName><shortdesc>
      Die FlexEvent.REPEAT_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein repeatEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.REPEAT_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>repeatEnd</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_START"><apiName>REPEAT_START</apiName><shortdesc>
      Die FlexEvent.REPEAT_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein repeatStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.REPEAT_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>repeatStart</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT"><apiName>REPEAT</apiName><shortdesc>
      Die FlexEvent.REPEAT-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein repeat-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.REPEAT</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>repeat</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc>
      Die FlexEvent.SELECTION_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein selectionChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.SELECTION_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>selectionChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SHOW"><apiName>SHOW</apiName><shortdesc>
      Die FlexEvent.SHOW-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein show-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>show</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.SHOW</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>show</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:STATE_CHANGE_COMPLETE"><apiName>STATE_CHANGE_COMPLETE</apiName><shortdesc>
      Die FlexEvent.STATE_CHANGE_COMPLETE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein stateChangeComplete-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChangeComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.STATE_CHANGE_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>stateChangeComplete</codeph>-Ereignis.
     
     <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:STATE_CHANGE_INTERRUPTED"><apiName>STATE_CHANGE_INTERRUPTED</apiName><shortdesc>
      Die FlexEvent.STATE_CHANGE_INTERRUPTED-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein stateChangeInterrupted-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChangeInterrupted</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.STATE_CHANGE_INTERRUPTED</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>stateChangeInterrupted</codeph>-Ereignis.
     
     <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSFORM_CHANGE"><apiName>TRANSFORM_CHANGE</apiName><shortdesc>
      Die FlexEvent.TRANSFORM_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein transformChange-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transformChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.TRANSFORM_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>transformChange</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSITION_END"><apiName>TRANSITION_END</apiName><shortdesc>
      Die FlexEvent.TRANSITION_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein transitionEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transitionEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.TRANSITION_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>transitionEnd</codeph>-Ereignis.
     
      <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>  
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSITION_START"><apiName>TRANSITION_START</apiName><shortdesc>
      Die FlexEvent.TRANSITION_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein transitionStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transitionStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.TRANSITION_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>transitionStart</codeph>-Ereignis.
     
      <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:UPDATE_COMPLETE"><apiName>UPDATE_COMPLETE</apiName><shortdesc>
      Die FlexEvent.UPDATE_COMPLETE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein updateComplete-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>updateComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.UPDATE_COMPLETE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>updateComplete</codeph>-Ereignis.
     
      <p>Dieses Ereignis wird nur ausgelöst, wenn an das auslösende Objekt ein oder mehr entsprechende Listener angehängt sind.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:URL_CHANGED"><apiName>URL_CHANGED</apiName><shortdesc>
      Die FlexEvent.URL_CHANGED-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein urlChanged-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.URL_CHANGED</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>urlChanged</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:VALID"><apiName>VALID</apiName><shortdesc>
      Die FlexEvent.VALID-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein valid-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.VALID</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>valid</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:VALUE_COMMIT"><apiName>VALUE_COMMIT</apiName><shortdesc>
      Die FlexEvent.VALUE_COMMIT-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein valueCommit-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valueCommit</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexEvent.VALUE_COMMIT</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>valueCommit</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
  Ein Ereignis, das zwischen DragManagern versendet wird, die sich in verschiedenen, vertauenswürdigen ApplicationDomains befinden, um das Auslösen von DragEvents an den entsprechenden Zielen zu verarbeiten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:DragEvent</apiBaseClassifier></apiClassifierDef><apiDesc> 
  Ein Ereignis, das zwischen DragManagern versendet wird, die sich in verschiedenen, jedoch vertrauenswürdigen ApplicationDomains befinden, um das Auslösen von DragEvents an die entsprechenden Ziele zu verarbeiten. Ein DragManager verfügt über einen DragProxy, der mit der Maus verschoben wird und nach dropTarget-Änderungen sucht. Er kann kein DragEvent in einer anderen ApplicationDomain direkt auslösen, da der Code in dieser ApplicationDomain nicht dem Typ des DragEvent entsprechen würde. Stattdessen löst der DragManager ein InterDragManagerEvent aus, auf das der DragManager der anderen ApplicationDomain wartet. Dieser führt dann ein DragEvent-Marshalling durch und löst das Ereignis an der möglichen dropTarget aus.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterDragManagerEvent:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Strg</codeph>-Taste gedrückt wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Alt</codeph>-Taste gedrückt wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die <codeph>Umschalttaste</codeph> gedrückt wurde.	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die primäre Maustaste gedrückt (true) ist oder nicht (false).
	  
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Gibt an, wie viele Zeilen pro Raststellung des Mausrads durchlaufen werden sollen.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dropTarget</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Das mögliche Ablageziel in der anderen Anwendungsdomäne (deshalb ist es ein DisplayObject und keine andere Klasse).
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragEventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Der DragEvent-Ereignistyp, der vom empfangenden DragManager zur DragEvent-Erstellung verwendet werden soll.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>IUIComponent zur Angabe der Komponente, von der der Ziehvorgang eingeleitet wird.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>Ein DragSource-Objekt, das die gezogenen Daten enthält.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Angegebene Dropaktion wie z. B.<codeph>DragManager.MOVE</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>draggedItem</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ein Objekt, das das gezogene Element darstellt.
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterDragManagerEvent:DISPATCH_DRAG_EVENT"><apiName>DISPATCH_DRAG_EVENT</apiName><shortdesc>
	 Löst ein DragEvent-Ereignis zu einem Ziel in einer anderen ApplicationDomain aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dispatchDragEvent</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Löst ein DragEvent-Ereignis zu einem Ziel in einer anderen ApplicationDomain aus. Der empfangende DragManager führt das DragEvent-Mashalling durch und löst das Ereignis an der Zielposition aus, die in der <codeph>dropTarget</codeph>-Eigenschaft angegeben ist.
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterDragManagerEvent:dragEventType"><apiName>dragEventType</apiName><shortdesc>
	  Der DragEvent-Ereignistyp, der vom empfangenden DragManager zur DragEvent-Erstellung verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der DragEvent-Ereignistyp, der vom empfangenden DragManager zur DragEvent-Erstellung verwendet werden soll.
	  
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DragEvent"><linktext>mx.events.DragEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:InterDragManagerEvent:dropTarget"><apiName>dropTarget</apiName><shortdesc>
	  Das mögliche Ablageziel in der anderen ApplicationDomain (deshalb ist es ein DisplayObject und keine andere Klasse).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  Das mögliche Ablageziel in der anderen ApplicationDomain (deshalb ist es ein DisplayObject und keine andere Klasse).
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InvalidateRequestData"><apiName>InvalidateRequestData</apiName><shortdesc>
  Die InvalidateRequestData-Klasse definiert die Konstanten für die Werte der data-Eigenschaft eines SWFBridgeRequest-Objekts, wenn dieses für eine SWFBridgeRequest.INVALIDATE_REQUEST-Anforderung verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die InvalidateRequestData-Klasse definiert die Konstanten für die Werte der <codeph>data</codeph>-Eigenschaft eines SWFBridgeRequest-Objekts, wenn dieses für eine <codeph>SWFBridgeRequest.INVALIDATE_REQUEST</codeph>-Anforderung verwendet wird.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:InvalidateRequestData:DISPLAY_LIST"><apiName>DISPLAY_LIST</apiName><shortdesc>
      Bit zur Angabe, dass die Anforderungsprozedur die Anzeigeliste für ungültig erklären soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Bit zur Angabe, dass die Anforderungsprozedur die Anzeigeliste für ungültig erklären soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:PROPERTIES"><apiName>PROPERTIES</apiName><shortdesc>
      Bit zur Angabe, dass die Anforderungsprozedur die Eigenschaften für ungültig erklären soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Bit zur Angabe, dass die Anforderungsprozedur die Eigenschaften für ungültig erklären soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:SIZE"><apiName>SIZE</apiName><shortdesc>
      Bit zur Angabe, dass die Anforderungsprozedur die Größe für ungültig erklären soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Bit zur Angabe, dass die Anforderungsprozedur die Größe für ungültig erklären soll.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
  Stellt Ereignisse dar, die ausgelöst werden, wenn in der Navigationsleiste auf ein Navigationsobjekt wie ein ButtonBar-, LinkBar- oder TabBar-Steuerelement geklickt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt Ereignisse dar, die ausgelöst werden, wenn in der Navigationsleiste auf ein Navigationsobjekt wie ein ButtonBar-, LinkBar- oder TabBar-Steuerelement geklickt wurde.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.controls.NavBar.xml"><linktext>mx.controls.NavBar</linktext></link><link href="" invalidHref="mx.controls.Button.xml"><linktext>mx.controls.Button</linktext></link><link href="" invalidHref="mx.controls.List.xml"><linktext>mx.controls.List</linktext></link></related-links><adobeApiEvent id="mx.events:ItemClickEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ItemClickEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ItemClickEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ItemClickEvent:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Beschriftung des verknüpften Navigationselement. 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Indexposition des verknüpften Navigationselements.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Das untergeordnete Objekt, durch das das Ereignis generiert wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Das Element im Datenprovider für das verknüpfte Navigationselement.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ItemClickEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
	  Die ItemClickEvent.ITEM_CLICK-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein itemClick-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ItemClickEvent.ITEM_CLICK</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>itemClick</codeph>-Ereignis.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>index</codeph></entry><entry>Die Indexposition des Navigationselements, auf das geklickt wurde.</entry></row><row><entry><codeph>item</codeph></entry><entry>Das Objekt im Datenprovider des Navigationselements, auf das geklickt wurde.</entry></row><row><entry><codeph>label</codeph></entry><entry>Die Beschriftung des Navigationselements, auf das geklickt wurde.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Das untergeordnete Objekt, durch das das Ereignis generiert wurde.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:index"><apiName>index</apiName><shortdesc>
	  Die Indexposition des verknüpften Navigationselements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Die Indexposition des verknüpften Navigationselements.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:item"><apiName>item</apiName><shortdesc>
	  Das Objekt im Datenprovider des verknüpften Navigationselements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Das Objekt im Datenprovider des verknüpften Navigationselements.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:label"><apiName>label</apiName><shortdesc>
	  Die Beschriftung des verknüpften Navigationselement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Die Beschriftung des verknüpften Navigationselement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  Das untergeordnete Objekt, durch das das Ereignis generiert wurde, beispielsweise die Schaltfläche des ButtonBar-Steuerelements, auf die ein Benutzer geklickt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:InteractiveObject"/></apiValueDef><apiDesc>
	  Das untergeordnete Objekt, durch das das Ereignis generiert wurde, beispielsweise die Schaltfläche des ButtonBar-Steuerelements, auf die ein Benutzer geklickt hat.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
  Die IndexChangedEvent stellt Ereignisse dar, die bei Indexänderungen ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die IndexChangedEvent stellt Ereignisse dar, die bei Indexänderungen ausgelöst werden. Dieses Ereignis kann eine Änderung folgender Komponenten angeben: der Wert der Indexposition eines untergeordneten Elements in einem Container, ein angezeigtes untergeordnetes Element in einem Navigator-Container wie Accordion oder ViewStack oder die Reihenfolge der Spaltenüberschriften in einem DataGrid-Steuerelement können sich geändert haben.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.core.Container.xml"><linktext>mx.core.Container</linktext></link></related-links><adobeApiEvent id="mx.events:IndexChangedEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE_childIndexChange"><apiName>childIndexChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:IndexChangedEvent:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Das mit der Indexänderung verknüpfte untergeordnete Objekt.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Die auf null basierende Indexposition vor der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Die auf null basierende Indexposition nach der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Das Ereignis, durch das dieses Ereignis ausgelöst wurde.
      
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor. Wird normalerweise durch ein Flex-Steuerelement aufgerufen und nicht im Anwendungscode verwendet.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:IndexChangedEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Die IndexChangedEvent.CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein change-Ereignis. Mit diesem Ereignis wird angegeben, dass eine Indexposition geändert wurde, beispielsweise können durch ein Accordion das angezeigte Bedienfeld oder durch ein ViewStack die Ansichten geändert worden sein.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die IndexChangedEvent.CHANGE-Konstante definiert den Wert <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>change</codeph>-Ereignis. Mit diesem Ereignis wird angegeben, dass eine Indexposition geändert wurde, beispielsweise können durch ein Accordion-Steuerelement das angezeigte Bedienfeld oder durch ein ViewStack die Ansichten geändert worden sein. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Gibt an, ob dieses Ereignis aufgrund einer Maus- oder einer Tastaturinteraktionen geändert wurde. </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Die auf null basierende Indexposition nach der Änderung.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Die auf null basierende Indexposition vor der Änderung.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Enthält einen Verweis auf das untergeordnete Objekt, das der neuen Indexposition entspricht.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>Das Ereignis, durch das dieses Ereignis ausgelöst wurde.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>IndexChangedEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE"><apiName>CHILD_INDEX_CHANGE</apiName><shortdesc>
      Die IndexChangedEvent.CHILD_INDEX_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein childIndexChange-Ereignis. Mit diesem Ereignis wird angegeben, dass sich die Indexposition einer Komponente innerhalb der untergeordneten Elemente eines Containers geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childIndexChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die IndexChangedEvent.CHILD_INDEX_CHANGE-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein childIndexChange-Ereignis. Mit diesem Ereignis wird angegeben, dass sich die Indexposition einer Komponente innerhalb der untergeordneten Elemente eines Containers geändert hat.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Gibt an, ob dieses Ereignis aufgrund einer Maus- oder einer Tastaturinteraktionen geändert wurde. </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Die auf null basierende Indexposition des untergeordneten Elements nach der Änderung.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Die auf null basierende Indexposition des untergeordneten Elements vor der Änderung.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Enthält einen Verweis auf das untergeordnete Objekt, dessen Indexposition geändert wurde.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>null</entry></row><row><entry><codeph>Typ</codeph></entry><entry>IndexChangedEvent.CHILD_INDEX_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:HEADER_SHIFT"><apiName>HEADER_SHIFT</apiName><shortdesc>
      Die IndexChangedEvent.HEADER_SHIFT-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein headerShift-Ereignis. Mit diesem Ereignis wird angegeben, dass die Indexposition einer Überschrift geändert wurde, wenn ein Benutzer beispielsweise eine DataGrid-Spalte an eine neue Position verschiebt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerShift</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die IndexChangedEvent.HEADER_SHIFT-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>headerShift</codeph>-Ereignis. Mit diesem Ereignis wird angegeben, dass die Indexposition einer Überschrift geändert wurde, wenn ein Benutzer beispielsweise eine DataGrid-Spalte an eine neue Position verschiebt.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Gibt an, ob dieses Ereignis aufgrund einer Maus- oder einer Tastaturinteraktionen geändert wurde. </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Die auf null basierende Indexposition der Überschrift nach der Änderung.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Die auf null basierende Indexposition der Überschrift vor der Änderung.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>Das Ereignis, durch das dieses Ereignis ausgelöst wurde.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>IndexChangedEvent.HEADER_SHIFT</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:newIndex"><apiName>newIndex</apiName><shortdesc>
      Die auf null basierende Indexposition nach der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die auf null basierende Indexposition nach der Änderung. Bei <codeph>change</codeph>-Ereignissen handelt es sich um die Indexposition des aktuellen, untergeordneten Elements. Bei <codeph>childIndexChange</codeph>-Ereignissen handelt es sich um die neue Indexposition des untergeordneten Elements. Bei <codeph>headerShift</codeph>-Ereignissen handelt es sich um die neue Indexposition der Überschrift.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:oldIndex"><apiName>oldIndex</apiName><shortdesc>
      Die auf null basierende Indexposition vor der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die auf null basierende Indexposition vor der Änderung. Bei <codeph>change</codeph>-Ereignissen handelt es sich um die Indexposition des vorherigen untergeordneten Elements. Bei <codeph>childIndexChange</codeph>-Ereignissen handelt es sich um die vorherige Indexposition des untergeordneten Elements. Bei <codeph>headerShift</codeph>-Ereignissen handelt es sich um die vorherige Indexposition der Überschrift.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
      Das untergeordnete Objekt, dessen Indexposition sich geändert hat, oder das mit der neuen Indexposition verknüpfte Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      Das untergeordnete Objekt, dessen Indexposition sich geändert hat, oder das mit der neuen Indexposition verknüpfte Objekt. Diese Eigenschaft wird nicht bei Überschriftenänderungen festgelegt. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Das Ereignis, durch das dieses Ereignis ausgelöst wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Das Ereignis, durch das dieses Ereignis ausgelöst wurde. Gibt an, ob dieses Ereignis aufgrund einer Maus- oder einer Tastaturinteraktionen geändert wurde. Der Wert ist <codeph>null</codeph>, wenn ein Container ein <codeph>childIndexChanged</codeph>-Ereignis auslöst.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
  Die mx.events.CollectionEvent-Klasse stellt ein Ereignis dar, das ausgelöst wird, wenn die verknüpfte Sammlung geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die mx.events.CollectionEvent-Klasse stellt ein Ereignis dar, das ausgelöst wird, wenn die verknüpfte Sammlung geändert wird.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#FlexEvent/CURSOR_UPDATE"><linktext>FlexEvent.CURSOR_UPDATE</linktext></link></related-links><adobeApiEvent id="mx.events:CollectionEvent:COLLECTION_CHANGE_collectionChange"><apiName>collectionChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CollectionEvent:COLLECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CollectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CollectionEvent:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp; gibt die Aktion an, die das Ereignis ausgelöst hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Gibt die Art des aufgetretenen Ereignisses an. Der Parameterwert kann ein Wert der CollectionEventKind-Klasse oder <codeph>null</codeph> sein (zeigt an, dass die Art unbekannt ist).
     
      </apiDesc></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Wenn für <codeph>kind</codeph> die Einstellungen <codeph>CollectionEventKind.ADD</codeph>, <codeph>CollectionEventKind.MOVE</codeph>, <codeph>CollectionEventKind.REMOVE</codeph> oder <codeph>CollectionEventKind.REPLACE</codeph> verwendet werden, gibt dieser Wert die Position der in der <codeph>items</codeph>-Eigenschaft angegebenen Elemente in der Zielsammlung an.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldLocation</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Wenn für <codeph>kind</codeph> die Einstellung <codeph>CollectionEventKind.MOVE</codeph> verwendet wird, gibt dieser Wert die alte Position in der Zielsammlung der in der <codeph>items</codeph>-Eigenschaft angegebenen Elemente an.
      
      </apiDesc></apiParam><apiParam><apiItemName>items</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Array von Objekten mit Informationen zu den Elementen, die von dem Ereignis betroffen sind, wie in der <codeph>items</codeph>-Eigenschaft beschrieben. Wenn für <codeph>kind</codeph> die Einstellungen <codeph>CollectionEventKind.REFRESH</codeph> oder <codeph>CollectionEventKind.RESET</codeph> verwendet werden, hat dieses Array eine Länge von null.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CollectionEvent:COLLECTION_CHANGE"><apiName>COLLECTION_CHANGE</apiName><shortdesc>
      Die CollectionEvent.COLLECTION_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein Ereignis, das ausgelöst wird, wenn eine Sammlung geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die CollectionEvent.COLLECTION_CHANGE-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein Ereignis, das ausgelöst wird, wenn eine Sammlung geändert wird.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte. Nicht alle Eigenschaften sind für alle Ereignistypen sinnvoll. Weitere Informationen finden Sie in den ausführlichen Eigenschaftsbeschreibungen.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>items</codeph></entry><entry>Ein Array von Objekten mit Informationen zu den Elementen, die von dem Ereignis betroffen sind. Die Inhalte in diesem Feld hängen von der Art des Ereignisses ab; weitere Informationen finden Sie im Abschnitt zur <codeph>items</codeph>-Eigenschaft.</entry></row><row><entry><codeph>kind</codeph></entry><entry>Die Art des Ereignisses. Die gültigen Werte werden in der CollectionEventKind-Klasse als Konstanten definiert.</entry></row><row><entry><codeph>location</codeph></entry><entry>Position in der Zielsammlung der Elemente, die in der <codeph>items</codeph>-Eigenschaft angegebenen sind.</entry></row><row><entry><codeph>oldLocation</codeph></entry><entry>Die vorherige Position in der Sammlung des Elements, das in der <codeph>items</codeph>-Eigenschaft angegebenen ist.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>CollectionEvent.COLLECTION_CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEvent:items"><apiName>items</apiName><shortdesc>
	  Wenn die Art CollectionEventKind.ADD oder CollectionEventKind.REMOVE entspricht, ist die items-Eigenschaft ein Array hinzugefügter/entfernter Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
	  Wenn für <codeph>kind</codeph> die Einstellungen <codeph>CollectionEventKind.ADD</codeph> oder <codeph>CollectionEventKind.REMOVE</codeph> verwendet werden, ist die <codeph>items</codeph>-Eigenschaft ein Array hinzugefügter/entfernter Elemente. Wenn für <codeph>kind</codeph> die Einstellungen <codeph>CollectionEventKind.REPLACE</codeph> oder <codeph>CollectionEventKind.UPDATE</codeph> verwendet werden, ist die <codeph>items</codeph>-Eigenschaft ein Array von PropertyChangeEvent-Objekten mit Informationen zu den Elementen, die von diesem Ereignis betroffen sind. Wenn sich ein Wert ändert, fragen Sie die Felder <codeph>newValue</codeph> und <codeph>oldValue</codeph> des PropertyChangeEvent-Objekts ab, um die neuen und alten Werte festzustellen. Wenn für <codeph>kind</codeph> die Einstellungen <codeph>CollectionEventKind.REFRESH</codeph> oder <codeph>CollectionEventKind.RESET</codeph> verwendet werden, hat dieses Array eine Länge von null.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>PropertyChangeEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:kind"><apiName>kind</apiName><shortdesc>
      Gibt die Art des aufgetretenen Ereignisses an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>null
	 
	  </apiDefaultValue></apiValueDef><apiDesc>
      Gibt die Art des aufgetretenen Ereignisses an. Der Eigenschaftswert kann ein Wert der CollectionEventKind-Klasse oder <codeph>null</codeph> sein (zeigt an, dass die Art unbekannt ist).
	 
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:location"><apiName>location</apiName><shortdesc>
      Wenn für „kind“ die Einstellungen CollectionEventKind.ADD, CollectionEventKind.MOVE, CollectionEventKind.REMOVE oder CollectionEventKind.REPLACE verwendet werden, entspricht diese Eigenschaft der auf null basierenden Indexposition in der Sammlung der Elemente, die in der items-Eigenschaft angegeben sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn für <codeph>kind</codeph> die Einstellungen <codeph>CollectionEventKind.ADD</codeph>, <codeph>CollectionEventKind.MOVE</codeph>, <codeph>CollectionEventKind.REMOVE</codeph> oder <codeph>CollectionEventKind.REPLACE</codeph> verwendet werden, entspricht diese Eigenschaft der auf null basierenden Indexposition in der Sammlung der Elemente, die in der <codeph>items</codeph>-Eigenschaft angegeben sind.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:oldLocation"><apiName>oldLocation</apiName><shortdesc>
      Wenn für „kind“ die Einstellung CollectionEventKind.MOVE verwendet wird, entspricht diese Eigenschaft der auf null basierenden Indexposition in der Zielsammlung der vorhergehenden Position der Elemente, die in der items-Eigenschaft angegeben sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn für <codeph>kind</codeph> die Einstellung <codeph>CollectionEventKind.MOVE</codeph> verwendet wird, entspricht diese Eigenschaft der auf null basierenden Indexposition in der Zielsammlung der vorherigen Position der Elemente, die in der <codeph>items</codeph>-Eigenschaft angegeben sind.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
  Dies ist ein Ereignis, das zwischen Anwendungen in verschiedenen Sicherheitssandboxes versendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Dies ist ein Ereignis, das zwischen Anwendungen in verschiedenen Sicherheitssandboxes versendet wird. Dieses Ereignis informiert Objekte in anderen Sandboxes über die Vorgänge in dieser Sandbox. Dies ist ein Informationsereignis im Gegensatz zu einer SWFBridgeRequest, mit der ein Objekt zur Durchführung eines Vorgangs aufgefordert wird.
  
  <p>Diese Klasse definiert Ereigniskonstanten, die auf „Aktivierung“ verweisen. In diesem Fall heißt „Aktivierung“, dass eine der Anwendungskomponenten den Fokus für Tastatureingaben erhalten kann. Wenn eine Anwendung aktiviert wird, erhält die Komponente, die zuletzt den Fokus hatte, diesen wieder.</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SWFBridgeEvent:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ein Objekt, das standardmäßig null ist, jedoch abhängig vom Ereignistyp auch Informationen zu dem Ereignis enthalten kann.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeEvent:marshal"><apiName>marshal</apiName><shortdesc>
      Marshalling einer SWFBridgeRequest von einer Remote-ApplicationDomain in die aktuelle ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Ein SWFBridgeEvent, das in der ApplicationDomain des Aufrufers erstellt wurde.
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Eine SWFBridgeRequest, die möglicherweise in einer anderen ApplicationDomain erstellt wurde.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Marshalling einer SWFBridgeRequest von einer Remote-ApplicationDomain in die aktuelle ApplicationDomain.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_ACTIVATE"><apiName>BRIDGE_AIR_WINDOW_ACTIVATE</apiName><shortdesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Aktivierung des AIR-Fensters mitzuteilen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Aktivierung des AIR-Fensters mitzuteilen. 
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_DEACTIVATE"><apiName>BRIDGE_AIR_WINDOW_DEACTIVATE</apiName><shortdesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Deaktivierung des AIR-Fensters mitzuteilen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Deaktivierung des AIR-Fensters mitzuteilen. 
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_ACTIVATE"><apiName>BRIDGE_APPLICATION_ACTIVATE</apiName><shortdesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Aktivierung einer anderen Anwendung mitzuteilen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Aktivierung einer anderen Anwendung mitzuteilen. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_UNLOADING"><apiName>BRIDGE_APPLICATION_UNLOADING</apiName><shortdesc>
      Wird über eine Brücke an den SystemManager einer untergeordneten Anwendung gesendet, um diesen die Entladung einer SWF mitzuteilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationUnloading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird über eine Brücke an den SystemManager einer untergeordneten Anwendung gesendet, um diesen die Entladung einer SWF mitzuteilen. Der SystemManager führt das Marshalling des Ereignisses durch und löst es erneut aus, sodass der Anwendungscode Verweise entfernen kann, die das Entladen der SWF-Datei verhindern würden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_FOCUS_MANAGER_ACTIVATE"><apiName>BRIDGE_FOCUS_MANAGER_ACTIVATE</apiName><shortdesc>
	  Wird über Brücken an alle anderen FocusManager gesendet, um diesen mitzuteilen, dass jetzt ein anderer FocusManager aktiv ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeFocusManagerActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Wird über Brücken an alle anderen FocusManager gesendet, um diesen mitzuteilen, dass jetzt ein anderer FocusManager aktiv ist.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_NEW_APPLICATION"><apiName>BRIDGE_NEW_APPLICATION</apiName><shortdesc>
	  Wird über eine übergeordnete Brücke an den SWFLoader gesendet, um diesem mitzuteilen, dass ein neuer SystemManager initialisiert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeNewApplication</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Wird über eine übergeordnete Brücke an den SWFLoader gesendet, um diesem mitzuteilen, dass ein neuer SystemManager initialisiert wurde. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_ACTIVATE"><apiName>BRIDGE_WINDOW_ACTIVATE</apiName><shortdesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Aktivierung eines Fensters mitzuteilen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Aktivierung eines Fensters mitzuteilen. Bei einer kompatiblen Anwendung ist die <codeph>data</codeph>-Eigenschaft ein Objekt mit zwei Eigenschaften, einer <codeph>window</codeph>- und einer <codeph>notifier</codeph>-Eigenschaft. Die <codeph>data.window</codeph>-Eigenschaft entspricht dem aktivierten SystemManager-Proxy. Bei einer nicht vertrauenswürdigen Anwendung enthält die <codeph>data.window</codeph>-Eigenschaft die String-ID des Fensters. Die <codeph>data.notifier</codeph>-Eigenschaft ist die Brücke der Anwendung, die das Ereignis sendet. Ein Ereignis kann direkt an einen Sandboxstamm statt über eine Brücke gesendet werden, sodass <codeph>event.target</codeph> möglicherweise nicht der Brücke der Anwendung entspricht, die das Ereignis auslöst.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_DEACTIVATE"><apiName>BRIDGE_WINDOW_DEACTIVATE</apiName><shortdesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Deaktivierung des Proxy-SystemManagers mitzuteilen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>brdigeWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Wird an eine übergeordnete Brücke oder einen Sandboxstamm gesendet, um die Deaktivierung des Proxy-SystemManagers mitzuteilen. Bei einer kompatiblen Anwendung ist die <codeph>data</codeph>-Eigenschaft ein Objekt mit zwei Eigenschaften, einer <codeph>window</codeph>- und einer <codeph>notifier</codeph>-Eigenschaft. Die <codeph>data.window</codeph>-Eigenschaft entspricht dem aktivierten SystemManager-Proxy. Bei einer nicht vertrauenswürdigen Anwendung enthält die <codeph>data.window</codeph>-Eigenschaft die String-ID des Fensters. Die <codeph>data.notifier</codeph>-Eigenschaft ist die Brücke der Anwendung, die das Ereignis sendet. Ein Ereignis kann direkt an einen Sandboxstamm statt über eine Brücke gesendet werden, sodass <codeph>event.target</codeph> möglicherweise nicht der Brücke der Anwendung entspricht, die das Ereignis auslöst.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:data"><apiName>data</apiName><shortdesc>
	  Informationen zum Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Informationen zum Ereignis.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FocusRequestDirection"><apiName>FocusRequestDirection</apiName><shortdesc>
  Die FocusDirection-Klasse definiert die Konstantenwerte für die Richtung des Fokus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die FocusDirection-Klasse definiert die Konstantenwerte für die Richtung des Fokus. Der Wert wird für die SWFBridgeRequest.MOVE_FOCUS_REQUEST-Anforderung und die <codeph>moveFocus()</codeph>-Methode des FocusManagers verwendet.
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SWFBridgeRequest"><linktext>SWFBridgeRequest</linktext></link></related-links><apiValue id="mx.events:FocusRequestDirection:BACKWARD"><apiName>BACKWARD</apiName><shortdesc>
      Verschiebt den Fokus zurück zum vorhergehenden Steuerelement in der Tabulatorschleife, wie beim Drücken von Umschalt-+Tabulatortaste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>backward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Verschiebt den Fokus zurück zum vorhergehenden Steuerelement in der Tabulatorschleife, wie beim Drücken von Umschalt-+Tabulatortaste.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
      Verschiebt den Fokus zum untersten/letzten Steuerelement in der Tabulatorschleife, als würden die Umschalt-+Tabulatortaste gedrückt, wenn kein Objekt in der Tabulatorschleife einen Fokus aufweist.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Verschiebt den Fokus zum untersten/letzten Steuerelement in der Tabulatorschleife, als würden die Umschalt-+Tabulatortaste gedrückt, wenn kein Objekt in der Tabulatorschleife einen Fokus aufweist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:FORWARD"><apiName>FORWARD</apiName><shortdesc>
      Verschiebt den Fokus zum nächsten Steuerelement in der Tabulatorschleife, wie beim Drücken der Tabulatortaste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>forward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Verschiebt den Fokus zum nächsten Steuerelement in der Tabulatorschleife, wie beim Drücken der Tabulatortaste.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:TOP"><apiName>TOP</apiName><shortdesc>
      Verschiebt den Fokus zum obersten/ersten Steuerelement in der Tabulatorschleife, als würde die Tabulatortaste gedrückt, wenn kein Objekt in der Tabulatorschleife einen Fokus aufweist.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Verschiebt den Fokus zum obersten/ersten Steuerelement in der Tabulatorschleife, als würde die Tabulatortaste gedrückt, wenn kein Objekt in der Tabulatorschleife einen Fokus aufweist.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
  Die ResourceEvent-Klasse stellt ein Ereignisobjekt dar, das ausgelöst wird, wenn der ResourceManager durch Aufruf der loadResourceModule()-Methode die Ressourcenbundles in ein Ressourcenmodul lädt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ResourceEvent-Klasse stellt ein Ereignisobjekt dar, das ausgelöst wird, wenn der ResourceManager durch Aufruf der <codeph>loadResourceModule()</codeph>-Methode die Ressourcenbundles in ein Ressourcenmodul lädt.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.resources.xml#ResourceManager"><linktext>mx.resources.ResourceManager</linktext></link></related-links><adobeApiEvent id="mx.events:ResourceEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResourceEvent:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts. Folgende Werte sind möglich:
      <ul>
         <li><codeph>"progress"</codeph> (<codeph>ResourceEvent.PROGRESS</codeph>)</li>
         <li><codeph>"complete"</codeph> (<codeph>ResourceEvent.COMPLETE</codeph>)</li>
         <li><codeph>"error"</codeph> (<codeph>ResourceEvent.ERROR</codeph>)</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Anzahl der geladenen Bytes während der Verarbeitung durch den Listener.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Gesamtzahl der Bytes, die bei einem erfolgreichen Ladevorgang geladen werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Fehlermeldung, wenn <codeph>type</codeph> der Einstellung <codeph>ResourceEvent.ERROR</codeph> entspricht.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResourceEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      Wird ausgelöst, nachdem die SWF-Datei des Ressourcenmoduls geladen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, nachdem die SWF-Datei des Ressourcenmoduls geladen wurde. Die ResourceEvent.COMPLETE-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>complete</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, ist <codeph>myButton</codeph>der Wert von <codeph>currentTarget</codeph>. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Leer</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Wird ausgelöst, wenn beim Laden der SWF-Datei des Ressourcenmoduls ein Fehler auftritt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn beim Laden der SWF-Datei des Ressourcenmoduls ein Fehler auftritt. Die ResourceEvent.ERROR-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>error</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Leer</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Leer</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise die <codeph>myButton.addEventListener()</codeph>-Methode zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert <codeph>myButton</codeph> auf. </entry></row><row><entry><codeph>errorText</codeph></entry>Eine Fehlermeldung<entry/></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Wird ausgelöst, wenn die SWF-Datei des Ressourcenmoduls geladen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn die SWF-Datei des Ressourcenmoduls geladen wird. Die ResourceEvent.PROGRESS-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>progress</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Bytes.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtzahl der zu ladenden Bytes.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise die <codeph>myButton.addEventListener()</codeph>-Methode zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert <codeph>myButton</codeph> auf.</entry></row><row><entry><codeph>errorText</codeph></entry>Leer<entry/></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, um immer auf das Objekt zuzugreifen, das auf das Ereignis wartet.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Die Fehlermeldung, wenn der Typ ERROR entspricht; andernfalls null.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die Fehlermeldung, wenn der <codeph>Typ</codeph> <codeph>ERROR</codeph> entspricht; andernfalls <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
  Die FlexMouseEvent-Klasse stellt das Ereignisobjekt dar, das für Flex-bezogene Mausvorgänge an den Ereignis-Listener übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die FlexMouseEvent-Klasse stellt das Ereignisobjekt dar, das für Flex-bezogene Mausvorgänge an den Ereignis-Listener übergeben wird.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE_mouseDownOutside"><apiName>mouseDownOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_WHEEL_CHANGING_mouseWheelChanging"><apiName>mouseWheelChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_WHEEL_CHANGING</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE_mouseWheelOutside"><apiName>mouseWheelOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexMouseEvent:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Die horizontale Position, an der das Ereignis auftrat.
	 
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Die vertikale Position, an der das Ereignis auftrat.
	 
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Das Anzeigelistenobjekt, das mit dem Ereignis verbunden ist.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die Strg-Taste gedrückt wird.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die Alt-Taste gedrückt wird.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die Umschalttaste gedrückt wird.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die Strg-Taste gedrückt wird.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Gibt die Anzahl der Bildlaufzeilen an, die dem Drehen des Mausrads zur nächsten Rasterstellung entsprechen.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE"><apiName>MOUSE_DOWN_OUTSIDE</apiName><shortdesc>
	  Die FlexMouseEvent.MOUSE_DOWN_OUTSIDE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein mouseDownOutside-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>FlexMouseEvent.MOUSE_DOWN_OUTSIDE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>mouseDownOutside</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Gibt an, ob die Alt-Taste aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>Gibt an, ob die primäre Maustaste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Gibt an, ob die Strg-Taste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. Das Objekt von PopUpManager-Ereignissen ist das Popup-Fenster.</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>Gibt die Anzahl der Bildlaufzeilen an, die dem Drehen des Mausrads zur nächsten Rasterstellung entsprechen. Für PopUpManager-Ereignisse entspricht dieser Wert 0.</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>Die horizontale Position, an der das Ereignis auftrat. Für PopUpManager-Ereignisse bezieht sich dieser Wert auf das Popup-Steuerelement.</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>Die vertikale Position, an der das Ereignis auftrat. Für PopUpManager-Ereignisse bezieht sich dieser Wert auf das Popup-Steuerelement.</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. Das Objekt von PopUpManager-Ereignissen ist der Container, über dem sich der Mauszeiger befindet.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Gibt an, ob die Umschalttaste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird. Das Objekt von PopUpManager-Ereignissen ist das Popup-Fenster.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexMouseEvent:MOUSE_WHEEL_CHANGING"><apiName>MOUSE_WHEEL_CHANGING</apiName><shortdesc>
      Die FlexMouseEvent.MOUSE_WHEEL_CHANGING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein mouseWheelChanging-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>FlexMouseEvent.MOUSE_WHEEL_CHANGING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>mouseWheelChanging</codeph>-Ereignis.
     
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
             <entry>Gibt an, ob die Alt-Taste aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
             <entry>Gibt an, ob die primäre Maustaste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
             <entry>Gibt an, ob die Strg-Taste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>currentTarget</codeph></entry>
             <entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. 
           </entry></row><row><entry><codeph>delta</codeph></entry>
             <entry>Gibt die Anzahl der Bildlaufzeilen an, die dem Drehen des Mausrads zur nächsten Rasterstellung entsprechen. 
                 </entry></row><row><entry><codeph>localX</codeph></entry>
             <entry>Die horizontale Position, an der das Ereignis auftrat. 
                 </entry></row><row><entry><codeph>localY</codeph></entry>
             <entry>Die vertikale Position, an der das Ereignis auftrat. 
                 </entry></row><row><entry><codeph>relatedObject</codeph></entry>
             <entry>Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. Für dieses Ereignis ist das Objekt die Komponente, die das Ziel des mouseWheel-Ereignisses ist.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
             <entry>Gibt an, ob die Umschalttaste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.
           </entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE"><apiName>MOUSE_WHEEL_OUTSIDE</apiName><shortdesc>
	  Die FlexMouseEvent.MOUSE_WHEEL_OUTSIDE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein mouseWheelOutside-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>FlexMouseEvent.MOUSE_WHEEL_OUTSIDE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>mouseWheelOutside</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Gibt an, ob die Alt-Taste aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>Gibt an, ob die primäre Maustaste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Gibt an, ob die Strg-Taste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>currentTarget</codeph></entry>
	         <entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. Das Objekt von PopUpManager-Ereignissen ist das Popup-Fenster.</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>Gibt die Anzahl der Bildlaufzeilen an, die dem Drehen des Mausrads zur nächsten Rasterstellung entsprechen. Für PopUpManager-Ereignisse entspricht dieser Wert 0.</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>Die horizontale Position, an der das Ereignis auftrat. Für PopUpManager-Ereignisse bezieht sich dieser Wert auf das Popup-Steuerelement.</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>Die vertikale Position, an der das Ereignis auftrat. Für PopUpManager-Ereignisse bezieht sich dieser Wert auf das Popup-Steuerelement.</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. Das Objekt von PopUpManager-Ereignissen ist der Container, über dem sich der Mauszeiger befindet.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Gibt an, ob die Umschalttaste gedrückt (<codeph>true</codeph>) oder nicht gedrückt (<codeph>false</codeph>) ist.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird. Das Objekt von PopUpManager-Ereignissen ist das Popup-Fenster.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
  Stellt Ereignisobjekte dar, die sich auf Flex-Effekte beziehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt Ereignisobjekte dar, die sich auf Flex-Effekte beziehen. Flex-Effekte lösen die folgenden Ereignistypen aus:
  <ul>
    <li><codeph>effectStart</codeph></li>
    <li><codeph>effectStop</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
    <li><codeph>effectEnd</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links><adobeApiEvent id="mx.events:EffectEvent:EFFECT_END_effectEnd"><apiName>effectEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_END</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_REPEAT_effectRepeat"><apiName>effectRepeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_REPEAT</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_START_effectStart"><apiName>effectStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_START</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_STOP_effectStop"><apiName>effectStop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_STOP</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_UPDATE_effectUpdate"><apiName>effectUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.events:EffectEvent:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>effectInstance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiData>null</apiData><apiDesc>Die Effektinstanz, durch die das Ereignis ausgelöst wurde.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:EffectEvent:EFFECT_END"><apiName>EFFECT_END</apiName><shortdesc>
      Die EffectEvent.EFFECT_END-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein effectEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>EffectEvent.EFFECT_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>effectEnd</codeph>-Ereignis. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Das Effektinstanz-Objekt für das Ereignis.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_REPEAT"><apiName>EFFECT_REPEAT</apiName><shortdesc>
      Die EffectEvent.EFFECT_REPEAT-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein effectRepeat-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectRepeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>EffectEvent.EFFECT_REPEAT</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>effectRepeat</codeph>-Ereignis. 
      
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Das Effektinstanz-Objekt für das Ereignis.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_START"><apiName>EFFECT_START</apiName><shortdesc>
      Die EffectEvent.EFFECT_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein effectStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>EffectEvent.EFFECT_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>effectStart</codeph>-Ereignis. 
      
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Das Effektinstanz-Objekt für das Ereignis.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_STOP"><apiName>EFFECT_STOP</apiName><shortdesc>
      Die EffectEvent.EFFECT_STOP-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein effectStop-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStop</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>EffectEvent.EFFECT_STOP</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>effectStop</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Das Effektinstanz-Objekt für das Ereignis.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_UPDATE"><apiName>EFFECT_UPDATE</apiName><shortdesc>
      Die EffectEvent.EFFECT_UPDATE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein effectUpdate-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>EffectEvent.EFFECT_UPDATE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>effectUpdate</codeph>-Ereignis. 
      
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Das Effektinstanz-Objekt für das Ereignis.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:effectInstance"><apiName>effectInstance</apiName><shortdesc>
	  Das Effektinstanz-Objekt für das Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.effects:IEffectInstance</apiValueClassifier></apiValueDef><apiDesc>
	  Das Effektinstanz-Objekt für das Ereignis. Verwenden Sie diese Eigenschaft, um im Ereignis-Listener auf die Eigenschaften des Effektinstanz-Objekts zuzugreifen. 
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
  Die ValidationResultEvent-Klasse stellt das Ereignisobjekt dar, das an den Listener für ein gültiges oder ungültiges Validator-Ereignis übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ValidationResultEvent-Klasse stellt das Ereignisobjekt dar, das an den Listener für ein <codeph>gültiges</codeph> oder <codeph>ungültiges</codeph> Validator-Ereignis übergeben wird. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.validators.xml#Validator"><linktext>mx.validators.Validator</linktext></link><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link><link href="mx.validators.xml#RegExpValidationResult"><linktext>mx.validators.RegExpValidationResult</linktext></link></related-links><adobeApiEvent id="mx.events:ValidationResultEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ValidationResultEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ValidationResultEvent:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Der Name des Felds, bei dem die Überprüfung fehlschlug und das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>results</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Ein Array von ValidationResult-Objekten, ein Objekt pro validiertes Feld. 
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ValidationResultEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
	  Die ValidationResultEvent.INVALID-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein invalid-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ValidationResultEvent.INVALID</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>invalid</codeph>-Ereignis. Der Wert dieser Konstante ist „invalid“.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>field</codeph></entry><entry>Der Name des Felds, bei dem die Überprüfung fehlschlug.</entry></row><row><entry><codeph>message</codeph></entry><entry>Ein einzelner String, der alle Fehlermeldungen der ValidationResult-Objekte im Ergebnisarray enthält.</entry></row><row><entry><codeph>results</codeph></entry><entry>Ein Array von ValidationResult-Objekten, ein Objekt pro validiertes Feld.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:VALID"><apiName>VALID</apiName><shortdesc>
	  Die ValidationResultEvent.VALID-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein valid-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ValidationResultEvent.VALID</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>valid</codeph>-Ereignis. Der Wert dieser Konstante ist „valid“.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>field</codeph></entry><entry>Ein leerer String.</entry></row><row><entry><codeph>message</codeph></entry><entry>Ein leerer String.</entry></row><row><entry><codeph>results</codeph></entry><entry>Ein leeres Array.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:field"><apiName>field</apiName><shortdesc>
	  Der Name des Felds, bei dem die Überprüfung fehlschlug und das Ereignis ausgelöst wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der Name des Felds, bei dem die Überprüfung fehlschlug und das Ereignis ausgelöst wurde.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:results"><apiName>results</apiName><shortdesc>
	  Ein Array von ValidationResult-Objekten, ein Objekt pro validiertes Feld.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
	  Ein Array von ValidationResult-Objekten, ein Objekt pro validiertes Feld. 
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link></related-links></apiValue><apiValue id="mx.events:ValidationResultEvent:message:get"><apiName>message</apiName><shortdesc>
	  Ein einzelner String, der alle Fehlermeldungen der ValidationResult-Objekte im Ergebnisarray enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  Ein einzelner String, der alle Fehlermeldungen der ValidationResult-Objekte im Ergebnisarray enthält.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
  Stellt die Ereignisse dar, die ausgelöst werden, wenn ein Element eines Steuerelements erstellt oder gelöscht wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt die Ereignisse dar, die ausgelöst werden, wenn ein Element eines Steuerelements erstellt oder gelöscht wird. 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_ADD_childAdd"><apiName>childAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_ADD</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE_childRemove"><apiName>childRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_REMOVE</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED_overlayCreated"><apiName>overlayCreated</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ChildExistenceChangedEvent:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Ein Verweis auf das untergeordnete Objekt, das erstellt oder gelöscht wurde.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_ADD"><apiName>CHILD_ADD</apiName><shortdesc>
	  Die ChildExistenceChangedEvent.CHILD_ADD-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein childAdd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ChildExistenceChangedEvent.CHILD_ADD</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>childAdd</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Enthält einen Verweis auf das untergeordnete Objekt, das erstellt wurde.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE"><apiName>CHILD_REMOVE</apiName><shortdesc>
	  Die ChildExistenceChangedEvent.CHILD_REMOVE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein childRemove-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ChildExistenceChangedEvent.CHILD_REMOVE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>childRemove</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Enthält einen Verweis auf ein untergeordnetes Objekt, das entfernt wird.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED"><apiName>OVERLAY_CREATED</apiName><shortdesc>
	  Die ChildExistenceChangedEvent.OVERLAY_CREATED-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein overlayCreated-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>overlayCreated</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>ChildExistenceChangedEvent.OVERLAY_CREATED</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>overlayCreated</codeph>-Ereignis.
	 
     <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Enthält einen Verweis auf das untergeordnete Objekt, dessen Überlagerung erstellt wurde.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  Ein Verweis auf das untergeordnete Objekt, das erstellt oder gelöscht wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  Ein Verweis auf das untergeordnete Objekt, das erstellt oder gelöscht wurde.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
  Die StateChangeEvent-Klasse stellt ein Ereignis dar, das ausgelöst wird, wenn die currentState-Eigenschaft einer Komponente geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die StateChangeEvent-Klasse stellt ein Ereignis dar, das ausgelöst wird, wenn die <codeph>currentState</codeph>-Eigenschaft einer Komponente geändert wird.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link><link href="mx.states.xml#State"><linktext>mx.states.State</linktext></link></related-links><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE_currentStateChange"><apiName>currentStateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING_currentStateChanging"><apiName>currentStateChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGING</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StateChangeEvent:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Der Name des Ansichtsstatus, den die Komponente verlässt. 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Der Name des Ansichtsstatus, den die Komponente erhält.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor. Wird normalerweise durch ein Flex-Steuerelement aufgerufen und nicht im Anwendungscode verwendet.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE"><apiName>CURRENT_STATE_CHANGE</apiName><shortdesc>
	  Die StateChangeEvent.CURRENT_STATE_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisses, das nach einer Änderung des Ansichtsstatus ausgelöst wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die StateChangeEvent.CURRENT_STATE_CHANGE-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisses, das nach einer Änderung des Ansichtsstatus ausgelöst wird. Diese Konstante hat den Wert „currentStateChange“.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>newState</codeph></entry><entry>Der Name des neuen Ansichtsstatus.</entry></row><row><entry><codeph>oldState</codeph></entry><entry>Der Name des früheren Ansichtsstatus.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent.CURRENT_STATE_CHANGE</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING"><apiName>CURRENT_STATE_CHANGING</apiName><shortdesc>
	  Die StateChangeEvent.CURRENT_STATE_CHANGING-Konstante definiert den Wert der type-Eigenschaft des Ereignisses, das kurz vor der Änderung des Ansichtsstatus ausgelöst wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die StateChangeEvent.CURRENT_STATE_CHANGING-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisses, das kurz vor der Änderung des Ansichtsstatus ausgelöst wird. Diese Konstante hat den Wert „currentStateChanging“.
	 
	  <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>newState</codeph></entry><entry>Der Name des neuen Ansichtsstatus.</entry></row><row><entry><codeph>oldState</codeph></entry><entry>Der Name des früheren Ansichtsstatus.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent.CURRENT_STATE_CHANGING</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:newState"><apiName>newState</apiName><shortdesc>
	  Der Name des Ansichtsstatus, den die Komponente erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der Name des Ansichtsstatus, den die Komponente erhält.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:oldState"><apiName>oldState</apiName><shortdesc>
	  Der Name des Ansichtsstatus, den die Komponente verlässt. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der Name des Ansichtsstatus, den die Komponente verlässt. 
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
  Die CubeEvent-Klasse stellt Ereignisobjekte dar, die sich auf Popup-Fenster wie das Alert-Steuerelement beziehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die CubeEvent-Klasse stellt Ereignisobjekte dar, die sich auf Popup-Fenster wie das Alert-Steuerelement beziehen.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.controls.Alert.xml"><linktext>mx.controls.Alert</linktext></link></related-links><adobeApiEvent id="mx.events:CloseEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CloseEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:CloseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CloseEvent:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Wert der Detaileigenschaft; gibt die Schaltfläche im Popup-Steuerelement an, auf die geklickt wurde.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CloseEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      Die CloseEvent.CLOSE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein close-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>CloseEvent.CLOSE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>close</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>detail</codeph></entry><entry>Für Steuerelemente mit mehreren Schaltflächen gibt <codeph>Detail</codeph> die Schaltfläche des Popup-Steuerelements an, auf die geklickt wurde.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CloseEvent:detail"><apiName>detail</apiName><shortdesc>
      Gibt die Schaltfläche im Popup-Steuerelement an, auf die geklickt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Gibt die Schaltfläche im Popup-Steuerelement an, auf die geklickt wurde. Diese Eigenschaft wird für Steuerelemente mit mehreren Schaltflächen zur Verfügung gestellt. Das Alert-Steuerelement legt für diese Eigenschaft eine der folgenden Konstanten fest:
      <ul>
        <li><codeph>Alert.YES</codeph></li>
        <li><codeph>Alert.NO</codeph></li>
        <li><codeph>Alert.OK</codeph></li>
        <li><codeph>Alert.CANCEL</codeph></li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
  Die ModuleEvent-Klasse stellt das Ereignisobjekt dar, das an den Ereignis-Listener für dynamisch geladene Module übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ModuleEvent-Klasse stellt das Ereignisobjekt dar, das an den Ereignis-Listener für dynamisch geladene Module übergeben wird. 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ModuleEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:SETUP_setup"><apiName>setup</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:SETUP</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:UNLOAD_unload"><apiName>unload</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:UNLOAD</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ModuleEvent:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Folgende Werte sind möglich:
      <ul>
         <li>„progress“ (<codeph>ModuleEvent.PROGRESS</codeph>);</li>
         <li>„ready“ (<codeph>ModuleEvent.READY</codeph>);</li>
         <li>„setup“ (<codeph>ModuleEvent.SETUP</codeph>);</li>
         <li>„error“ (<codeph>ModuleEvent.ERROR</codeph>);</li>
         <li>„unload“ (<codeph>ModuleEvent.UNLOAD</codeph>);</li>
      </ul>
           </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
           </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Bestimmt, ob das Ereignisobjekt während der Übertragung des Ereignisses abgebrochen werden kann.
           </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Anzahl der geladenen Bytes während der Verarbeitung durch den Listener.
           </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Gesamtzahl der Bytes, die bei einem erfolgreichen Ladevorgang geladen werden.
           </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Fehlermeldung, wenn der Ereignistyp <codeph>ResourceEvent.ERROR</codeph> entspricht.
           </apiDesc></apiParam><apiParam><apiItemName>module</apiItemName><apiOperationClassifier>mx.modules:IModuleInfo</apiOperationClassifier><apiData>null</apiData><apiDesc>
           </apiDesc></apiParam><apiTipTexts><apiTipText>Konstruktor für <codeph>ModuleEvent</codeph>-Objekte.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ModuleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Wird ausgelöst, wenn beim Herunterladen des Moduls ein Fehler auftritt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn beim Herunterladen des Moduls ein Fehler auftritt. Die <codeph>ModuleEvent.ERROR</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>error</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Leer</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Leer</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Die Fehlermeldung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Wird ausgelöst, während das Modul heruntergeladen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, während das Modul heruntergeladen wird. Dieses Modul wird in regelmäßigen Abständen während des Downloadvorgangs ausgelöst. Die <codeph>ModuleEvent.PROGRESS</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>progress</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Bytes.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtzahl der zu ladenden Bytes.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Leer</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:READY"><apiName>READY</apiName><shortdesc>
      Wird nach dem erfolgreichen Herunterladen des Moduls ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird nach dem erfolgreichen Herunterladen des Moduls ausgelöst. Die <codeph>ModuleEvent.READY</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>complete</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Bytes.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtzahl der zu ladenden Bytes.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Leer</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:SETUP"><apiName>SETUP</apiName><shortdesc>
      Wird ausgelöst, wenn genügend Moduldaten heruntergeladen wurden, um Informationen zum Modul zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setup</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn genügend Moduldaten heruntergeladen wurden, um Informationen zum Modul zu erhalten. Rufen Sie dazu die <codeph>IFlexModuleFactory.info()</codeph>-Methode für das Modul auf. Die <codeph>ModuleEvent.SETUP</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>setup</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Leer</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Leer</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Eine Fehlermeldung</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:UNLOAD"><apiName>UNLOAD</apiName><shortdesc>
      Wird ausgelöst, wenn das Modul entladen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird ausgelöst, wenn das Modul entladen wird. Die <codeph>ModuleEvent.UNLOAD</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>unload</codeph>-Ereignis.
           <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Leer</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Leer</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Eine Fehlermeldung</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Die Fehlermeldung, wenn der Typ ModuleEvent.ERROR entspricht; andernfalls null.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die Fehlermeldung, wenn der Typ <codeph>ModuleEvent.ERROR</codeph> entspricht; andernfalls <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:module:get"><apiName>module</apiName><shortdesc>
      Das Ziel, eine Schnittstellen-Instanz für ein bestimmtes Modul.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.modules:IModuleInfo</apiValueClassifier></apiValueDef><apiDesc>
      Das <codeph>Ziel</codeph>, eine Schnittstellen-Instanz für ein bestimmtes Modul.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
  Dies ist ein Ereignis, das zwischen ApplicationDomains verwendet wird, um vertrauenswürdigen Listenern Aktivitäten in einem bestimmten Manager mitzuteilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Dies ist ein Ereignis, das zwischen ApplicationDomains verwendet wird, um vertrauenswürdigen Listenern Aktivitäten in einem bestimmten Manager mitzuteilen.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterManagerRequest:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Der Name einer Eigenschaft oder Methode oder der Name eines zu instanziierenden Managers.
     	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Der Wert einer Eigenschaft oder ein Array von Parametern für eine Methode (wenn nicht null).
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor. Gibt keine Daten wieder, die <codeph>value</codeph>-Eigenschaft kann jedoch geändert werden, um einen Rückgabewert für eine Methode darzustellen.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterManagerRequest:CURSOR_MANAGER_REQUEST"><apiName>CURSOR_MANAGER_REQUEST</apiName><shortdesc>
      Dieser Anforderungstyp wird zur Kommunikation zwischen CursorManagern verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Dieser Anforderungstyp wird zur Kommunikation zwischen CursorManagern verwendet. Die <codeph>name</codeph>-Eigenschaft ist der Name einer beliebigen CursorManager-Eigenschaft. Die <codeph>value</codeph>-Eigenschaft ist der Wert dieser Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:DRAG_MANAGER_REQUEST"><apiName>DRAG_MANAGER_REQUEST</apiName><shortdesc>
      Dieser Anforderungstyp wird zur Kommunikation zwischen DragManagern verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Dieser Anforderungstyp wird zur Kommunikation zwischen DragManagern verwendet. Die <codeph>name</codeph>-Eigenschaft ist der Name einer beliebigen DragManager-Eigenschaft. Die <codeph>value</codeph>-Eigenschaft ist der Wert dieser Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:INIT_MANAGER_REQUEST"><apiName>INIT_MANAGER_REQUEST</apiName><shortdesc>
      Fordern Sie eine andere ApplicationDomain auf, einen Manager für diese ApplicationDomain zu instanziieren (falls noch nicht geschehen), sodass dieser verfügbar ist und auf nachfolgende InterManagerRequests wartet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Fordern Sie eine andere ApplicationDomain auf, einen Manager für diese ApplicationDomain zu instanziieren (falls noch nicht geschehen), sodass dieser verfügbar ist und auf nachfolgende InterManagerRequests wartet. Die <codeph>name</codeph>-Eigenschaft ist der Name des zu instanziierenden Managers.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:SYSTEM_MANAGER_REQUEST"><apiName>SYSTEM_MANAGER_REQUEST</apiName><shortdesc>
      Anforderung an den SystemManager zum Durchführen einer Aktion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>systemManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Anforderung an den SystemManager zum Durchführen einer Aktion. Die <codeph>name</codeph>-Eigenschaft ist der Name der durchzuführenden Aktion. Die <codeph>value</codeph>-Eigenschaft ist der zur Durchführung dieser Aktion benötigte Wert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:TOOLTIP_MANAGER_REQUEST"><apiName>TOOLTIP_MANAGER_REQUEST</apiName><shortdesc>
      Dieser Anfordertungstyp wird zur Kommunikation zwischen ToolTipManagern verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tooltipManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Dieser Anfordertungstyp wird zur Kommunikation zwischen ToolTipManagern verwendet. Die <codeph>name</codeph>-Eigenschaft ist der Name einer beliebigen ToolTipManager-Eigenschaft. Die <codeph>value</codeph>-Eigenschaft ist der Wert dieser Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:name"><apiName>name</apiName><shortdesc>
      Der Name der Eigenschaft oder Methode oder der zu instanziierende Manager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Der Name der Eigenschaft oder Methode oder der zu instanziierende Manager.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:value"><apiName>value</apiName><shortdesc>
      Wert der Eigenschaft oder Array von Parametern für die Methode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Wert der Eigenschaft oder Array von Parametern für die Methode.		
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:Request"><apiName>Request</apiName><shortdesc>
  Dies ist ein Ereignis, bei dem die zugehörige Dateneigenschaft von einem reagierenden Listener festgelegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Dies ist ein Ereignis, bei dem die zugehörige Dateneigenschaft von einem reagierenden Listener festgelegt wird.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:Request:Request"><apiName>Request</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Der Name einer Eigenschaft oder Methode oder der Name eines zu instanziierenden Managers.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor. Gibt keine Daten wieder, die <codeph>value</codeph>-Eigenschaft kann jedoch geändert werden, um einen Rückgabewert für eine Methode darzustellen.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:Request:GET_PARENT_FLEX_MODULE_FACTORY_REQUEST"><apiName>GET_PARENT_FLEX_MODULE_FACTORY_REQUEST</apiName><shortdesc>
      Wird von einer Unteranwendung oder einem Modul ausgelöst, um die Modul-Factory oder die übergeordnete Anwendung bzw. das Modul zu suchen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getParentFlexModuleFactoryRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Wird von einer Unteranwendung oder einem Modul ausgelöst, um die Modul-Factory oder die übergeordnete Anwendung bzw. das Modul zu suchen. Der Empfänger dieser Anforderung sollte als Dateneigenschaft die entsprechende Modul-Factory festlegen. Die Meldung wird aus dem Inhalt eines geladenen Moduls oder einer Anwendung gesendet.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:Request:value"><apiName>value</apiName><shortdesc>
      Wert der Eigenschaft oder Array von Parametern für die Methode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Wert der Eigenschaft oder Array von Parametern für die Methode.       
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>