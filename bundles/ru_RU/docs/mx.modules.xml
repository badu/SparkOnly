<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.modules"><apiName>mx.modules</apiName><apiDetail/><apiClassifier id="mx.modules:ModuleManager"><apiName>ModuleManager</apiName><shortdesc>
  Класс ModuleManager осуществляет централизованное управление динамически загруженными модулями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ModuleManager осуществляет централизованное управление динамически загруженными модулями. Он обеспечивает отображение URL-адресов для модулей. Модуль может существовать в состоянии полной загрузки (и готовности к использованию) или в состоянии «не загружен». ModuleManager передает события, которые указывают статус модуля. Клиенты могут зарегистрировать обработчиков событий, а затем выполнить вызов метода <codeph>load()</codeph>, который передает события в случае готовности фабрики (или незамедлительно, если он уже загружен).
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.modules:ModuleManager:getAssociatedFactory"><apiName>getAssociatedFactory</apiName><shortdesc>
      Проверьте, связан ли вызванный объект с управляемым ApplicationDomain (или внутри него) реализации известной IFlexModuleFactory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Возвращает реализацию IFlexModuleFactory или <codeph>null</codeph>, если невозможно создать тип объекта из фабрики.
      
      </apiDesc><apiOperationClassifier>mx.core:IFlexModuleFactory</apiOperationClassifier></apiReturn><apiParam><apiItemName>object</apiItemName><apiType value="Object"/><apiDesc>Объект, который пытается создать ModuleManager.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Проверьте, связан ли вызванный объект с управляемым ApplicationDomain (или внутри него) реализации известной IFlexModuleFactory.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.modules:ModuleManager:getModule"><apiName>getModule</apiName><shortdesc>
      Получение интерфейса IModuleInfo, связанного с определенным URL-адресом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Интерфейс IModuleInfo, связанный с определенным URL-адресом.
      
      </apiDesc><apiOperationClassifier>mx.modules:IModuleInfo</apiOperationClassifier></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>URL-адрес, представляющий местоположение модуля.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получение интерфейса IModuleInfo, связанного с определенным URL-адресом. Требование успешной загрузки данного URL-адреса отсутствует, но ModuleManager возвращает уникальную обработку IModuleInfo для каждого уникального URL-адреса.
      
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.modules:IModule"><apiName>IModule</apiName><shortdesc>
      Интерфейс, который отмечает класс в качестве модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
      Интерфейс, который отмечает класс в качестве модуля.
     
      </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.modules.Module.xml"><linktext>mx.modules.Module</linktext></link></related-links></apiClassifier><apiClassifier id="mx.modules:ModuleBase"><apiName>ModuleBase</apiName><shortdesc>
  Базовый класс для модулей на основе ActionScript с динамической загрузкой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.modules:IModule</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Базовый класс для модулей на основе ActionScript с динамической загрузкой. При записи модуля, имеющего только ActionScript, необходимо выполнить расширение этого класса. При записи модуля на основе MXML с использованием тега <codeph>&lt;mx:Module></codeph> в MXML-файле вместо этого расширяется класс Module.
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.modules.Module.xml"><linktext>mx.modules.Module</linktext></link></related-links></apiClassifier><apiClassifier id="mx.modules:IModuleInfo"><apiName>IModuleInfo</apiName><shortdesc>
  Интерфейс, который функционирует в качестве обработчика для определенного модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Интерфейс, который функционирует в качестве обработчика для определенного модуля. Из этого интерфейса можно запросить информацию о статусе модуля, получить внутреннюю фабрику, а также загрузить или выгрузить модуль.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.modules:IModuleInfo_mx.events.ModuleEvent.UNLOAD_unload"><apiName>unload</apiName><shortdesc>
  Передается свободным ModuleInfo при выгрузке данных модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events. ModuleEvent.UNLOAD</apiEventType><adobeApiEventClassifier>mx.events.ModuleEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается свободным ModuleInfo при выгрузке данных модуля.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.modules:IModuleInfo_mx.events.ModuleEvent.SETUP_setup"><apiName>setup</apiName><shortdesc>
  Передается свободным ModuleInfo при достаточной загрузке модуля для вызова методов IModuleInfo.factory() и IFlexModuleFactory.info().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ModuleEvent.SETUP</apiEventType><adobeApiEventClassifier>mx.events.ModuleEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается свободным ModuleInfo при достаточной загрузке модуля для вызова методов <codeph>IModuleInfo.factory()</codeph> и <codeph>IFlexModuleFactory.info()</codeph>.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.modules:IModuleInfo_mx.events.ModuleEvent.READY_ready"><apiName>ready</apiName><shortdesc>
  Передается свободным ModuleInfo при достаточной загрузке модуля для вызова методов IModuleInfo.factory() и IFlexModuleFactory.create().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events. ModuleEvent.READY</apiEventType><adobeApiEventClassifier>mx.events.ModuleEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается свободным ModuleInfo при достаточной загрузке модуля для вызова методов <codeph>IModuleInfo.factory()</codeph> и <codeph>IFlexModuleFactory.create()</codeph>.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.modules:IModuleInfo_mx.events.ModuleEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Передается свободным ModuleInfo через равные интервалы во время загрузки модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events. ModuleEvent.PROGRESS</apiEventType><adobeApiEventClassifier>mx.events.ModuleEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается свободным ModuleInfo через равные интервалы во время загрузки модуля.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.modules:IModuleInfo_mx.events.ModuleEvent.ERROR_error"><apiName>error</apiName><shortdesc>
  Передается свободным ModuleInfo в случае появления ошибки в течение загрузки модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events. ModuleEvent.ERROR</apiEventType><adobeApiEventClassifier>mx.events.ModuleEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается свободным ModuleInfo в случае появления ошибки в течение загрузки модуля.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:load"><apiName>load</apiName><shortdesc>
      Запрашивает загрузку модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>applicationDomain</apiItemName><apiType value="flash.system:ApplicationDomain"/><apiData>null</apiData><apiDesc>Текущий домен приложения, в котором выполняется код.
      
      </apiDesc></apiParam><apiParam><apiItemName>securityDomain</apiItemName><apiType value="flash.system:SecurityDomain"/><apiData>null</apiData><apiDesc>Текущая защищенная среда.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytes</apiItemName><apiType value="flash.utils:ByteArray"/><apiData>null</apiData><apiDesc>Объект ByteArray. Предполагается, что ByteArray содержит байты файла SWF, который представляет скомпилированный модуль. Объект ByteArray можно получить с помощью класса URLLoader. Если этот параметр указан, модуль будет загружен из ByteArray. Если значение для этого параметра равно null, модуль будет загружен с URL-адреса, определенного в свойстве url.
     
      </apiDesc></apiParam><apiParam><apiItemName>moduleFactory</apiItemName><apiOperationClassifier>mx.core:IFlexModuleFactory</apiOperationClassifier><apiData>null</apiData><apiDesc>moduleFactory вызывающего модуля. Использование moduleFactory необходимо для определения вышестоящего менеджера стилей загружаемого модуля.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Запрашивает загрузку модуля. Если модуль уже загружен, то при вызове какие-либо действия не выполняются. В противном случае модуль начинает загружаться и по мере загрузки передает события <codeph>progress</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:publish"><apiName>publish</apiName><shortdesc>
      Публикует интерфейс с ModuleManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>factory</apiItemName><apiOperationClassifier>mx.core:IFlexModuleFactory</apiOperationClassifier><apiDesc>Класс, который реализует интерфейс IFlexModuleFactory для модуля.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Публикует интерфейс с ModuleManager. Обеспечивает возможность подписки на фабрики на позднем этапе (или с развязкой) с помощью обработки строк. Для создания ссылок на фабрики, опубликованные таким способом, используйте URL-адрес, который начинается с <codeph>publish://</codeph>.
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.modules.xml#ModuleManager"><linktext>mx.modules.ModuleManager</linktext></link></related-links></apiOperation><apiOperation id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:release"><apiName>release</apiName><shortdesc>
      Публикует текущую ссылку на модуль.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Публикует текущую ссылку на модуль. Выгрузка модуля выполняется только при наличии других открытых ссылок на него и при условии, что настройка ModuleManager позволяет иметь только ограниченное количество загруженных модулей.
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.modules.xml#ModuleManager"><linktext>mx.modules.ModuleManager</linktext></link></related-links></apiOperation><apiOperation id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:unload"><apiName>unload</apiName><shortdesc>
      Выгружает модуль.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Выгружает модуль. При наличии любых ожидающих обработки ссылок на определения в модуле Flash Player и AIR не могут полностью выполнить выгрузку и сбор мусора.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:data:get"><apiName>data</apiName><shortdesc>
      Пользовательские данные, которые можно связать с одним экземпляром IModuleInfo для данного URL-адреса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Пользовательские данные, которые можно связать с одним экземпляром IModuleInfo для данного URL-адреса.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:error:get"><apiName>error</apiName><shortdesc>
      Флаг со значением true в случае ошибки при загрузке модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг со значением <codeph>true</codeph> в случае ошибки при загрузке модуля.
      
      <p>Этот флаг имеет значение <codeph>true</codeph> в случае, если ModuleManager передает событие <codeph>ModuleEvent.ERROR</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:factory:get"><apiName>factory</apiName><shortdesc>
      Реализация IFlexModuleFactory, определенная в модуле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      Реализация IFlexModuleFactory, определенная в модуле. Значение будет являться ненулевым (не <codeph>null</codeph>) только после передачи события <codeph>ModuleEvent.SETUP</codeph> (или если метод <codeph>IModuleInfo.setup()</codeph> возвращает значение <codeph>true</codeph>). На этом этапе можно вызвать метод <codeph>IFlexModuleFactory.info()</codeph>. После передачи события <codeph>ModuleEvent.READY</codeph> (или после возврата методом <codeph>IModuleInfo.ready()</codeph> значения <codeph>true</codeph>) можно вызвать метод <codeph>IFlexModuleFactory.create()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:loaded:get"><apiName>loaded</apiName><shortdesc>
      Флаг, который имеет значение true в случае вызова метода load() для этого модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, который имеет значение <codeph>true</codeph> в случае вызова метода <codeph>load()</codeph> для этого модуля.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:ready:get"><apiName>ready</apiName><shortdesc>
      Флаг, который имеет значение true в случае достаточной загрузки модуля для получения обработки связанной реализации IFlexModuleFactory и вызова соответствующего метода create().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, который имеет значение <codeph>true</codeph> в случае достаточной загрузки модуля для получения обработки связанной реализации IFlexModuleFactory и вызова соответствующего метода <codeph>create()</codeph>.
      
      <p>Этот флаг имеет значение <codeph>true</codeph> при передаче ModuleManager события <codeph>ModuleEvent.READY</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:setup:get"><apiName>setup</apiName><shortdesc>
      Флаг, который имеет значение true в случае достаточной загрузки модуля для получения обработки связанной реализации IFlexModuleFactory и вызова соответствующего метода info().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, который имеет значение <codeph>true</codeph> в случае достаточной загрузки модуля для получения обработки связанной реализации IFlexModuleFactory и вызова соответствующего метода <codeph>info()</codeph>.
      
      <p>Этот флаг имеет значение <codeph>true</codeph> при передаче ModuleManager события <codeph>ModuleEvent.SETUP</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.modules:IModuleInfo:mx.modules:IModuleInfo:url:get"><apiName>url</apiName><shortdesc>
      URL-адрес, связанный с этим модулем (например, MyImageModule.swf или http://somedomain.com/modules/MyImageModule.swf).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      URL-адрес, связанный с этим модулем (например, MyImageModule.swf или http://somedomain.com/modules/MyImageModule.swf). URL-адрес может являться локальным или удаленным; для удаленного URL-адреса необходимо установить между доменом модуля и приложением, которое его загружает, доверенный канал.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>