<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.containers"><apiName>mx.containers</apiName><apiDetail/><apiClassifier id="mx.containers:Canvas"><apiName>Canvas</apiName><shortdesc>
  Контейнер макетов Halo Canvas определяет прямоугольную область, в которой размещаются нижестоящие контейнеры и элементы управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="paddingTop"/><Exclude kind="style" name="paddingRight"/><Exclude kind="style" name="paddingLeft"/><Exclude kind="style" name="paddingBottom"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Alternative owner="mx.containers:Canvas" replacement="spark.components.BorderContainer" since="4.0">
	</Alternative><Alternative owner="mx.containers:Canvas" replacement="spark.components.Group" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Canvas&gt;</code> tag inherits all the tag attributes
  of its superclass. Use the following syntax:</p>
 
  <p>
  <pre>
  &lt;mx:Canvas&gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:Canvas&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.containers.utilityClasses:IConstraintLayout</apiBaseInterface><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер макетов Halo Canvas определяет прямоугольную область, в которой размещаются нижестоящие контейнеры и элементы управления. Это единственный контейнер, который позволяет явно указать местоположение нижестоящих элементов внутри контейнера с помощью свойств <codeph>x</codeph> и <codeph>y</codeph> каждого нижестоящего элемента.
 
  <p><b>Примечание.</b> Adobe рекомендует вместо контейнеров Halo Canvas использовать по возможности контейнеры Spark с BasicLayout.</p>
 
  <p>Flex устанавливает нижестоящие элементы контейнера макетов Canvas с предпочтительной шириной и предпочтительной высотой. Значение для предпочтительной ширины нижестоящего элемента можно отменить путем установки для свойства <codeph>width</codeph> фиксированного значения в пикселях или процентной доли от размера контейнера. Аналогичным образом можно установить предпочтительную высоту.</p>
 
  <p>При использовании в контейнере Canvas процентного значения некоторые компоненты могут перекрываться. Если необходимо этого избежать, тщательно планируйте позиции и размеры компонентов.</p>
 
  <p>Контейнер Canvas имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Достаточно большой для включения всех нижестоящих элементов с размерами по умолчанию</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений нижнего, верхнего, левого и правого края</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleCanvasExample.mxml"><swfblock conref="examples/SimpleCanvasExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.Container.xml"><linktext>mx.components.Container</linktext></link></related-links><apiConstructor id="mx.containers:Canvas:Canvas"><apiName>Canvas</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Canvas:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет предпочтительный минимальный и предпочтительный максимальный размеры контейнера Canvas.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет предпочтительный минимальный и предпочтительный максимальный размеры контейнера Canvas.
     
      <p>Значение <codeph>measuredWidth</codeph> контейнера Canvas является достаточно большим для отображения всех нижестоящих элементов с предпочтительной шириной без отсечения. Метод <codeph>measure()</codeph> вычисляет позицию самого правого нижестоящего элемента и расположение его правого края, а затем добавляет пространство в соответствии с толщиной границы контейнера Canvas и заполнения справа. Значение <codeph>measuredHeight</codeph> вычисляется аналогично.</p>
     
      <p>Значения свойств контейнера Canvas <codeph>minWidth</codeph> и <codeph>minHeight</codeph> не вычисляются. Таким образом, Flex использует значение по умолчанию, равное 0.</p>
     
      <p>Значения свойств контейнера Canvas <codeph>maxWidth</codeph> и <codeph>maxHeight</codeph> не вычисляются. Предполагается, что максимальная высота и ширина контейнера являются бесконечными величинами.</p>
     
      <p>Все описанные выше значения являются <i>измеренными</i> значениями ширины и высоты контейнера Canvas. Пользователь может отменить измеренные значения путем явного предоставления значений для следующих свойств:</p>
     
      <ul>
        <li><codeph>width</codeph></li>
        <li><codeph>высота</codeph></li>
        <li><codeph>minWidth</codeph></li>
        <li><codeph>minHeight</codeph></li>
        <li><codeph>maxWidth</codeph></li>
        <li><codeph>maxHeight</codeph></li>
      </ul>
     
      <p>Вызов этого метода напрямую не выполняется. Он вызывается в соответствующий момент посредством Flex LayoutManager. При запуске приложения Flex LayoutManager перед установкой окончательных размеров выполняет попытку измерить все компоненты от нижестоящих до вышестоящих.</p>
     
      <p>Этот расширенный метод рекомендуется использовать при обработке подклассов. При отмене этого метода реализация должна выполнить вызов метода <codeph>super.measure()</codeph> или установить значения для свойств <codeph>measuredHeight</codeph> и <codeph>measuredWidth</codeph>. Также можно дополнительно установить значения для следующих свойств:
      <ul>
        <li><codeph>measuredMinWidth</codeph></li>
        <li><codeph>measuredMinHeight</codeph></li>
      </ul>
      Эти свойства соответствуют описанным выше свойствам макетов, поэтому их отдельное описание не приводится.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Canvas:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Устанавливает размер каждого нижестоящего элемента для контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает размер каждого нижестоящего элемента для контейнера.
     
      <p>Контейнер Canvas не изменяет позиции своих нижестоящих элементов. Каждый нижестоящий элемент размещается в соответствии со значениями свойств <codeph>x</codeph> и <codeph>y</codeph>.</p>
     
      <p>Контейнер Canvas устанавливает ширину и высоту каждого нижестоящего элемента в соответствии со значениями свойств <codeph>measuredWidth</codeph> и <codeph>measuredHeight</codeph> этого элемента, если значения <codeph>width</codeph> и <codeph>height</codeph> не предоставляются. Нижестоящий элемент может также иметь изменяемый размер. Для этого значения свойств <codeph>width</codeph> и/или <codeph>height</codeph> устанавливаются в процентах. Нижестоящие элементы с изменяемым размером привязаны к правому нижнему краю контейнера Canvas. В этом случае значения свойств <codeph>minWidth</codeph>, <codeph>minHeight</codeph>, <codeph>maxWidth</codeph> и <codeph>maxHeight</codeph> не игнорируются.</p>
     
      <p>Вызов этого метода напрямую не выполняется. Он вызывается в соответствующий момент посредством Flex LayoutManager. При запуске приложения Flex LayoutManager выполняет вызов метода <codeph>updateDisplayList()</codeph> в каждом компоненте, начиная с объекта Application и далее в нисходящем направлении.</p>
     
      <p>Этот расширенный метод рекомендуется использовать при обработке подклассов. При отмене этого метода реализация должна выполнить вызов методов <codeph>super.updateDisplayList()</codeph>, <codeph>move()</codeph> и <codeph>setActualSize()</codeph> в каждом нижестоящем элементе. При создании макета необходимо получить размер этого контейнера на основе значений свойств <codeph>unscaledWidth</codeph> и <codeph>unscaledHeight</codeph>, а не свойств <codeph>width</codeph> и <codeph>height</codeph>. Свойства <codeph>width</codeph> и <codeph>height</codeph> не учитывают значения свойств <codeph>scaleX</codeph> и <codeph>scaleY</codeph> для этого контейнера.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:Canvas:constraintColumns:get"><apiName>constraintColumns</apiName><shortdesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintColumns">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintColumns">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Canvas:constraintRows:get"><apiName>constraintRows</apiName><shortdesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintRows">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintRows">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:FormItemDirection"><apiName>FormItemDirection</apiName><shortdesc>
  Класс FormItemDirection определяет значения констант для свойства direction класса FormItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс FormItemDirection определяет значения констант для свойства <codeph>direction</codeph> класса FormItem.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#FormItem"><linktext>mx.containers.FormItem</linktext></link></related-links><apiValue id="mx.containers:FormItemDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
      Указывает, что нижестоящие элементы контейнера FormItem располагаются горизонтально.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что нижестоящие элементы контейнера FormItem располагаются горизонтально.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:FormItemDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
      Указывает, что нижестоящие элементы контейнера FormItem располагаются вертикально.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что нижестоящие элементы контейнера FormItem располагаются вертикально.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:DividedBox"><apiName>DividedBox</apiName><shortdesc>
  Контейнер DividedBox измеряет и располагает свои нижестоящие элементы горизонтально или вертикально, аналогично контейнеру Box, но при этом вставляет в промежутки между нижестоящими элементами перетаскиваемые разделители.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><styles><style inherit="no" name="verticalDividerCursor" owner="mx.containers:DividedBox" playerVersion="Flash9" type="Class">
<description>
  Тема оформления курсора для вертикального DividedBox. Значением по умолчанию является символ mx.skins.cursor.VBoxDivider в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalDividerCursor" owner="mx.containers:DividedBox" playerVersion="Flash9" type="Class">
<description>
  Тема оформления курсора для горизонтального DividedBox. Значением по умолчанию является символ mx.skins.cursor. HBoxDivider в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="dividerThickness" owner="mx.containers:DividedBox" playerVersion="Flash9" type="Number">
<description>
  Толщина разделителей в пикселях при нажатии или перетаскивании разделителей пользователем, если для свойства <codeph>liveDragging</codeph> установлено значение <codeph>false</codeph>. (Если для свойства <codeph>liveDragging</codeph> установлено значение <codeph>true</codeph>, отображается только кнопка разделителя.) Видимая толщина не может иметь значение больше допустимого.
  
  </description>
<default>3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dividerSkin" owner="mx.containers:DividedBox" playerVersion="Flash9" type="Class">
<description>
  Тема оформления разделителя. Значением по умолчанию является символ mx.skin.BoxDividerSkin в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dividerColor" owner="mx.containers:DividedBox" playerVersion="Flash9" type="uint">
<description>
  Цвет разделителей при нажатии или перетаскивании разделителей пользователем, если для свойства <codeph>liveDragging</codeph> установлено значение <codeph>false</codeph>. Если для свойства <codeph>liveDragging</codeph> установлено значение <codeph>true</codeph>, отображается только кнопка разделителя.
 
  </description>
<default>0x6F7777
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dividerAlpha" owner="mx.containers:DividedBox" playerVersion="Flash9" type="Number">
<description>
  Альфа-значение, определяющее прозрачность разделителей. При значении <codeph>0,0</codeph> обеспечивается полная прозрачность, а при значении <codeph>1,0</codeph> – полная непрозрачность.
  
  </description>
<default>0.75
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="dividerAffordance" owner="mx.containers:DividedBox" playerVersion="Flash9" type="Number">
<description>
  Толщина области (в пикселях), в которой пользователь может щелкнуть для перетаскивания разделителя. Эта область располагается по центру в промежутках между нижестоящими элементами контейнера, которые определяются свойствами стиля <codeph>horizontalGap</codeph> или <codeph>verticalGap</codeph>. Допустимое значение не может превышать размер промежутка. При переводе курсора мыши в эту область отображается курсор изменения размера.
 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:DividedBox&gt;</code> tag inherits all of the tag 
  attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:DividedBox
    <strong>Properties</strong>
    liveDragging="false|true"
    resizeToContent="false|true"
  
    <strong>Styles</strong>
    dividerAffordance="6"
    dividerAlpha="0.75"
    dividerColor="0x6F7777"
    dividerSkin="<i>'mx.skins.BoxDividerSkin' symbol in Assets.swf</i>"
    dividerThickness="3"
    horizontalDividerCursor="<i>'mx.skins.cursor.HBoxDivider' symbol in Assets.swf</i>"
    verticalDividerCursor="<i>'mx.skins.cursor.VBoxDivider' symbol in Assets.swf</i>"
 
    <strong>Events</strong>
    dividerPress="<i>No default</i>"
    dividerDrag="<i>No default</i>"
    dividerRelease="<i>No default</i>"
    &gt;
      ...
      <i>child tags</i>
      ...
  &lt;/mx:DividedBox&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер DividedBox измеряет и располагает свои нижестоящие элементы горизонтально или вертикально, аналогично контейнеру Box, но при этом вставляет в промежутки между нижестоящими элементами перетаскиваемые разделители. Пользователи могут перетащить любой разделитель для изменения размеров нижестоящих элементов с каждой стороны.
  
  <p>Класс DividedBox является базовым классом для более часто используемых классов HDividedBox и VDividedBox.</p>
 
  <p>Свойство <codeph>direction</codeph> контейнера DividedBox, унаследованное от контейнера Box, определяет горизонтальный или вертикальный макет.</p>
  
  <p>Контейнеры DividedBox, HDividedBox или VDividedBox имеют следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry><b>Вертикальный DividedBox</b> Высота является достаточной для включения всех нижестоящих элементов с высотой по умолчанию или явной высотой, любых вертикальных промежутков между нижестоящими элементами, а также заполнения контейнера снизу и сверху. Ширина соответствует сумме ширины по умолчанию или явной ширины наиболее широкого нижестоящего элемента и заполнения контейнера слева и справа. <b>Горизонтальный DividedBox</b> Ширина является достаточной для включения всех нижестоящих элементов с шириной по умолчанию или явной шириной, любого горизонтального промежутка между нижестоящими элементами, а также заполнения контейнера слева и справа. Высота соответствует сумме высоты по умолчанию или явной высоты наиболее высокого нижестоящего элемента и заполнения контейнера сверху и снизу.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row><row>
           <entry>Промежуток по умолчанию</entry>
           <entry>10 пикселей для горизонтальных и вертикальных промежутков.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DividedBoxExample.mxml"><swfblock conref="examples/DividedBoxExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#HDividedBox"><linktext>mx.containers.HDividedBox</linktext></link><link href="mx.containers.xml#VDividedBox"><linktext>mx.containers.VDividedBox</linktext></link></related-links><adobeApiEvent id="mx.containers:DividedBox_mx.events.DividerEvent.DIVIDER_RELEASE_dividerRelease"><apiName>dividerRelease</apiName><shortdesc>
  Передается в момент, когда пользователь отпускает разделитель.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DividerEvent.DIVIDER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events.DividerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается в момент, когда пользователь отпускает разделитель. Событие <codeph>dividerRelease</codeph> передается после события <codeph>dividerDrag</codeph>, но до изменения нижестоящих элементов контейнера. Свойства разделителя x и y не обновляются до инициирования этого события. В результате при вызове <codeph>hDividerBox.getDividerAt(0).x</codeph> возвращается значение исходной позиции x для первого разделителя. Если требуется установить позицию разделителя после перемещения, можно получить доступ к этому значению после инициирования события updateComplete для DividerBox.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.containers:DividedBox_mx.events.DividerEvent.DIVIDER_PRESS_dividerPress"><apiName>dividerPress</apiName><shortdesc>
  Передается при нажатии пользователем любого разделителя в этом контейнере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DividerEvent.DIVIDER_PRESS</apiEventType><adobeApiEventClassifier>mx.events.DividerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при нажатии пользователем любого разделителя в этом контейнере. Событие <codeph>dividerPress</codeph> передается до любого события <codeph>dividerDrag</codeph>.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.containers:DividedBox_mx.events.DividerEvent.DIVIDER_DRAG_dividerDrag"><apiName>dividerDrag</apiName><shortdesc>
  Передается несколько раз при перетаскивании пользователем любого разделителя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DividerEvent.DIVIDER_DRAG</apiEventType><adobeApiEventClassifier>mx.events.DividerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается несколько раз при перетаскивании пользователем любого разделителя. Событие <codeph>dividerDrag</codeph> передается после события <codeph>dividerPress</codeph> и до события <codeph>dividerRelease</codeph>.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.containers:DividedBox:DividedBox"><apiName>DividedBox</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:DividedBox:getDividerAt"><apiName>getDividerAt</apiName><shortdesc>
	  Возвращает ссылку на указанный объект BoxDivider в данном контейнере DividedBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект BoxDivider.
	  
	  </apiDesc><apiOperationClassifier>mx.containers.dividedBoxClasses:BoxDivider</apiOperationClassifier></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Отсчитываемый от нуля индекс разделителя: слева направо для горизонтального DividedBox или сверху вниз для вертикального DividedBox.
	 
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Возвращает ссылку на указанный объект BoxDivider в данном контейнере DividedBox. 
	 
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:DividedBox:moveDivider"><apiName>moveDivider</apiName><shortdesc>
	  Перемещает определенный разделитель на указанное количество пикселей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Отсчитываемый от нуля индекс разделителя: слева направо для горизонтального DividedBox или сверху вниз для вертикального DividedBox.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>amt</apiItemName><apiType value="Number"/><apiDesc>Количество пикселей, на которое требуется переместить разделитель. Для перемещения разделителя вверх или влево можно указать отрицательное количество. При этом перемещение разделителя ограничено, как и при его перемещении пользователем.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Перемещает определенный разделитель на указанное количество пикселей.
	 
	  </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:DividedBox:protected:dividerClass"><apiName>dividerClass</apiName><shortdesc>
	  Класс для разделителя между нижестоящими элементами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Class"/><apiDefaultValue>mx.containers.dividedBoxClasses.BoxDivider
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Класс для разделителя между нижестоящими элементами.
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:DividedBox:liveDragging"><apiName>liveDragging</apiName><shortdesc>
	  Если значение равно true, смежные с разделителем нижестоящие элементы непрерывно изменяют свой размер при перетаскивании пользователем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Если значение равно <codeph>true</codeph>, смежные с разделителем нижестоящие элементы непрерывно изменяют свой размер при перетаскивании пользователем. Если значение равно <codeph>false</codeph>, они не изменяются до тех пор, пока пользователь не отпустит разделитель.
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:DividedBox:numDividers:get"><apiName>numDividers</apiName><shortdesc>
 	  Количество разделителей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
 	  Количество разделителей. Количество всегда соответствует значению <codeph>numChildren</codeph> -1.
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:DividedBox:resizeToContent:get"><apiName>resizeToContent</apiName><shortdesc>
	  Если значение равно true, DividedBox автоматически изменяет свой размер в соответствии с размером нижестоящих элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
	  Если значение равно <codeph>true</codeph>, DividedBox автоматически изменяет свой размер в соответствии с размером нижестоящих элементов.
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:ApplicationControlBar"><apiName>ApplicationControlBar</apiName><shortdesc>
  В контейнере ApplicationControlBar содержатся компоненты, которые обеспечивают глобальную навигацию и команды приложения для контейнера Halo Application.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="direction"/><Alternative owner="mx.containers:ApplicationControlBar" replacement="none" since="4.0">
<description>
  В Flex 4 компонент ApplicationControlBar больше не требуется. Используйте свойство <codeph>controlBarContent</codeph> класса Spark Application для определения набора компонентов, включаемых в область панели управления. Используйте свойство <codeph>controlBarLayout</codeph> класса Spark Application для определения шаблона области панели управления. 
 </description>
	</Alternative><styles><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.containers:ApplicationControlBar" playerVersion="Flash9" type="Array">
<description>
  Цвета, используемые для определения оттенка заливки фона контейнера. Для придания элементам управления «плоского» вида необходимо установить для обоих значений одинаковый цвет. Значением по умолчанию является <codeph>[0xFFFFFF,0xFFFFFF]</codeph>.
 
  <p>Необходимо также изменить значение по умолчанию для свойства <codeph>fillAlphas</codeph>, поскольку при использовании значения по умолчанию <codeph>[0,0]</codeph> цвета не будут отображаться.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.containers:ApplicationControlBar" playerVersion="Flash9" type="Array">
<description>
  Альфа-значения, используемые для заливки фона контейнера. Значением по умолчанию является <codeph>[0,0]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ApplicationControlBar&gt;</code> tag 
  inherits all of the tag attributes of its superclass, and adds the
  following tag attributes.
  Unlike the ControlBar container, it is possible to set the
  <code>backgroundColor</code> style for an ApplicationControlBar
  container.</p>
 
  <pre>
  &lt;mx:ApplicationControlBar
    <strong>Properties</strong>
    dock="false|true"
  
    <strong>Styles</strong>
    fillAlphas="[0, 0]"
    fillColors="[0xFFFFFF, 0xFFFFFF]"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:ApplicationControlBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:ControlBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  В контейнере ApplicationControlBar содержатся компоненты, которые обеспечивают глобальную навигацию и команды приложения для контейнера Halo Application. Например, ApplicationControlBar для редактора может включать элементы управления Button (для настройки плотности шрифта), ComboBox (для выбора шрифта) и MenuBar (для выбора режима редактирования). Как правило, контейнер ApplicationControlBar помещается в верхней области контейнера Halo Application.
 
  <p><b>Примечание.</b> Контейнер Spark Application не поддерживает контейнер ApplicationControlBar. Для добавления этой функции измените тему оформления контейнера Spark Application.</p>
 
  <p>Контейнер ApplicationControlBar может находиться в любом из следующих режимов:</p> 
  <ul>
    <li>Прикрепленный режим: панель всегда находится в верхней области рисования и становится частью стиля оформления приложения. Линейки прокрутки на уровне приложения для компонента не применяются, поэтому он всегда располагается в верхней части видимой области, а панель растягивается на ширину приложения. Для создания прикрепленной панели установите для свойства <codeph>dock</codeph> значение <codeph>true</codeph>.</li>
      
    <li>Обычный режим: панель можно поместить в любое место окна приложения, установив ее размеры и позиции аналогично любому другому компоненту. При этом при прокрутке панель будет прокручиваться вместе с окном приложения. Для создания стандартной панели установите для свойства <codeph>dock</codeph> значение <codeph>false</codeph> (по умолчанию).</li>
  </ul>
 
  <p>Для контейнера ApplicationControlBar по умолчанию установлены следующие характеристики размеров:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Высота соответствует сумме высоты по умолчанию или явной высоты наиболее высокого нижестоящего элемента и заполнения контейнера сверху и снизу. В обычном режиме ширина является достаточной для включения всех нижестоящих элементов с высотой по умолчанию или явной высотой нижестоящих элементов, любого горизонтального промежутка между нижестоящими элементами, а также для заполнения контейнера справа и слева. В прикрепленном режиме ширина равна ширине приложения. Если ширина приложения не позволяет вместить все элементы управления в контейнере ApplicationControlBar, панель отсекается.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>5 пикселей для значения верхнего края. 4 пикселей для значения нижнего края. 8 пикселей для значений левого и правого краев.
           </entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleApplicationControlBarExample.mxml"><swfblock conref="examples/SimpleApplicationControlBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.core.xml#Application"><linktext>mx.core.Application</linktext></link></related-links><apiConstructor id="mx.containers:ApplicationControlBar:ApplicationControlBar"><apiName>ApplicationControlBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.containers:ApplicationControlBar:dock:get"><apiName>dock</apiName><shortdesc>
      Если значение равно true, ApplicationControlBar должен быть прикреплен в верхней области приложения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dockChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, ApplicationControlBar должен быть прикреплен в верхней области приложения. Если значение равно <codeph>false</codeph>, размер и позиция ApplicationControlBar определяются так же, как и для любого другого компонента. Это свойство поддерживается в случае, если для приложения установлен тип <codeph>Application</codeph>. В противном случае значение <codeph>dock</codeph> какого-либо воздействия не имеет.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:HDividedBox"><apiName>HDividedBox</apiName><shortdesc>
  В контейнере HDividedBox нижестоящие элементы располагаются так же, как и в контейнере HBox, но при этом в промежуток между каждым нижестоящим элементом вставляется перетаскиваемый разделитель.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="direction"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HDividedBox&gt;</code> tag inherits all of the tag 
  attributes of its superclass except <code>direction</code> and adds 
  no new tag attributes.</p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:DividedBox</apiBaseClassifier></apiClassifierDef><apiDesc>
  В контейнере HDividedBox нижестоящие элементы располагаются так же, как и в контейнере HBox, но при этом в промежуток между каждым нижестоящим элементом вставляется перетаскиваемый разделитель. Пользователь может перетащить разделитель для изменения размеров области, выделенной для каждого нижестоящего элемента. Тег <codeph>&lt;mx:HDividedBox/></codeph> идентичен <codeph>&lt;mx:DividedBox direction="horizontal"/></codeph>.
  
  <p>Контейнер HDividedBox имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Ширина является достаточной для включения всех нижестоящих элементов с шириной по умолчанию или явной шириной, любого горизонтального промежутка между нижестоящими элементами, а также для заполнения контейнера слева и справа. Высота соответствует сумме высоты по умолчанию или явной высоты наиболее высокого нижестоящего элемента и заполнения контейнера сверху и снизу.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row><row>
           <entry>Промежуток по умолчанию</entry>
           <entry>10 пикселей для горизонтальных и вертикальных промежутков.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="HDividedBoxExample.mxml"><swfblock conref="examples/HDividedBoxExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#DividedBox"><linktext>mx.containers.DividedBox</linktext></link><link href="mx.containers.xml#VDividedBox"><linktext>mx.containers.VDividedBox</linktext></link></related-links><apiConstructor id="mx.containers:HDividedBox:HDividedBox"><apiName>HDividedBox</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.containers:Grid"><apiName>Grid</apiName><shortdesc>
  Контейнер Grid позволяет размещать нижестоящие элементы в виде строк и столбцов ячеек, аналогично таблице HTML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="direction"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:Grid" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:Grid" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Grid&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except the <code>Box.direction</code>
  property, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Grid
    <strong>Styles</strong>
    horizontalGap="8"
    verticalGap="6"
    &gt;
      ...
    <i>These child tags are examples only:</i>
       &lt;mx:GridRow id="row1"&gt;
        &lt;mx:GridItem
          rowSpan="1"
          colSpan="1">
            &lt;mx:Button label="Button 1"/&gt;
        &lt;/mx:GridItem&gt;
        ...
       &lt;/mx:GridRow&gt;
    ...
  &lt;/mx:Grid&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер Grid позволяет размещать нижестоящие элементы в виде строк и столбцов ячеек, аналогично таблице HTML. Контейнер Grid содержит одну или несколько строк. Каждая строка может содержать одну или несколько ячеек/элементов. Для определения элементов управления Grid используются следующие теги:
 
  <ul>
     <li>Тег <codeph>&lt;mx:Grid></codeph> определяет контейнер Grid.</li>
 
     <li>Тег <codeph>&lt;mx:GridRow></codeph> определяет строку сетки с одной или несколькими ячейками. Строка сетки должна являться нижестоящим элементом тега <codeph>&lt;Grid></codeph>.</li>
 
     <li>Тег <codeph>&lt;mx:GridItem></codeph> определяет ячейку сетки и должен являться нижестоящим элементом тега <codeph>&lt;GridRow></codeph>. Тег <codeph>&lt;mx:GridItem></codeph> может содержать любое количество нижестоящих элементов.</li>
  </ul>
 
  <p>Все ячейки в одной строке имеют одинаковую высоту, но высота каждой строки может быть различной. Все ячейки в одной строке имеют одинаковую ширину, но каждый столбец может иметь различную ширину. Для каждой строки или каждого столбца контейнера Grid можно определить разное количество ячеек. Кроме того, ячейка может включать несколько столбцов или строк контейнера.</p>
  
  <p>Контейнеры Grid, GridRow и GridItem имеют следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Высота сетки</entry>
           <entry>Сумма высот по умолчанию или явных высот всех строк и промежутков между строками.</entry>
        </row><row>
           <entry>Ширина сетки</entry>
           <entry>Сумма значений ширины по умолчанию или явной ширины всех столбцов и промежутков между столбцами.</entry>
        </row><row>
           <entry>Высота каждой строки и каждой ячейки.</entry>
           <entry>Высота по умолчанию или явная высота наиболее высокого элемента в строке. Если контейнер GridItem не имеет явного размера, его высота по умолчанию соответствует высоте по умолчанию или явной высоте нижестоящего элемента в ячейке.</entry>
        </row><row>
           <entry>Ширина каждого столбца и каждой ячейки.</entry>
           <entry>Ширина по умолчанию или явная ширина по умолчанию наиболее широкого элемента в столбце. Если контейнер GridItem не имеет явной ширины, ширина по умолчанию соответствует ширине по умолчанию или явной ширине нижестоящего элемента в ячейке.</entry>
        </row><row>
           <entry>Промежуток между строками и столбцами.</entry>
           <entry>Определяется свойствами horizontalGap и verticalGap класса Grid. Значением по умолчанию для обоих промежутков является 6 пикселей.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений верхнего, нижнего, правого и левого края всех трех контейнерных классов.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="GridLayoutExample.mxml"><swfblock conref="examples/GridLayoutExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#GridRow"><linktext>mx.containers.GridRow</linktext></link><link href="mx.containers.xml#GridItem"><linktext>mx.containers.GridItem</linktext></link></related-links><apiConstructor id="mx.containers:Grid:Grid"><apiName>Grid</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Grid:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет предпочтительный, минимальный и максимальный размеры контейнера Grid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет предпочтительный, минимальный и максимальный размеры контейнера Grid.

      <p>Этот метод не вызывается напрямую; он является расширенным методом для использования в подклассах. Вызов метода <codeph>measure()</codeph> выполняется в соответствующий момент посредством LayoutManger Flex. При запуске приложения Flex LayoutManager перед установкой окончательных размеров выполняет попытку измерить все компоненты от нижестоящих до вышестоящих.</p>
     
      <p>Для получения представления о вычислении измерений контейнером Grid предположим, что в каждом контейнере GridItem для свойств <codeph>rowSpan</codeph> и <codeph>colSpan</codeph> установлено значение 1. Измеренная ширина первого столбца контейнера Grid равна максимальному значению из измеренных значений ширины всех контейнеров GridItem в первом столбце. Аналогично, измеренная ширина второго столбца равна максимальному значению из значений ширины всех контейнеров GridItem во втором столбце и т. д. Значение <codeph>measuredWidth</codeph> для всего контейнера Grid представляет собой сумму значений измеренной ширины всех столбцов, толщины границы, заполнения слева и справа и горизонтального промежутка между смежными ячейками сетки.</p>
     
      <p>Значения свойств <codeph>measuredHeight</codeph>, <codeph>minWidth</codeph>, <codeph>minHeight</codeph>, <codeph>maxWidth</codeph> и <codeph>maxHeight</codeph> вычисляются аналогичным способом путем сложения значений свойств контейнеров GridItem <codeph>measuredHeight</codeph>, свойств <codeph>minWidth</codeph> и т. д.</p>
     
      <p>Если для контейнера GridItem свойство <codeph>colSpan</codeph> имеет значение 3, то контейнер GridItem <codeph>measuredWidth</codeph> будет поделен на 3 столбца. Если <codeph>measuredWidth</codeph> делится на равные части, каждый из трех столбцов вычисляет свою измеренную ширину так, как если бы контейнер GridItem находился только в этом столбце, а ширина <codeph>measuredWidth</codeph> для контейнера GridItem составляла одну треть от фактического значения.</p>
     
      <p>Однако свойство <codeph>measuredWidth</codeph> контейнера GridItem не всегда делится на равные части для всех включенных столбцов. Если для некоторых столбцов значение свойства <codeph>width</codeph> установлено в процентах, свойство<codeph>measuredWidth</codeph> контейнера GridItem делится соответственно для предоставления каждому столбцу запрашиваемого процента от объема контейнера Grid.</p>
     
      <p>Все описанные выше значения представляют собой <i>измеренные</i> значения ширины и высоты контейнера Grid. Пользователь может отменить измеренные значения путем явного ввода значений для следующих свойств:</p>
     
      <ul>
        <li><codeph>minHeight</codeph></li>
        <li><codeph>minWidth</codeph></li>
        <li><codeph>maxHeight</codeph></li>
        <li><codeph>maxWidth</codeph></li>
        <li><codeph>height</codeph></li>
        <li><codeph>width</codeph></li>
      </ul>
     
      <p>При отмене этого метода реализация должна выполнить вызов метода <codeph>super.measure()</codeph> или установить значения для свойств <codeph>measuredHeight</codeph> и <codeph>measuredWidth</codeph>. Также можно дополнительно установить значения для следующих свойств:</p>
     
      <ul>
        <li><codeph>measuredMinWidth</codeph></li>
        <li><codeph>measuredMinHeight</codeph></li>
      </ul>
     
      <p>Эти свойства соответствуют описанным выше свойствам макетов, поэтому их отдельное описание не приводится.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Grid:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Устанавливает размер и позицию каждого нижестоящего элемента для контейнера Grid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.   
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает размер и позицию каждого нижестоящего элемента для контейнера Grid.
     
      <p>Этот метод не вызывается напрямую; он является расширенным методом для использования в подклассах. Вызов метода <codeph>updateDisplayList</codeph> выполняется в соответствующий момент посредством Flex LayoutManager. При запуске приложения Flex LayoutManager выполняет вызов метода <codeph>updateDisplayList()</codeph> в каждом компоненте, начиная с корня и далее в нисходящем направлении.</p>
     
      <p>Для контейнера Grid выполняются те же правила создания макетов, что и для контейнера VBox. Позиции и размеры контейнеров GridRow определяются так же, как позиции и размеры нижестоящих элементов контейнера VBox. Аналогично, контейнер GridRow размещает свои контейнеры GridItem с использованием подобного алгоритма создания макетов контейнера HBox.</p>
     
      <p>Единственным различием является то, что контейнеры GridRow связаны друг с другом и, таким образом, они все выбирают одни и те же позиции и размеры для своих нижестоящих элементов (для выравнивания столбцов контейнера Grid). </p>
     
      <p>При отмене этого метода реализация должна выполнить вызов методов <codeph>super.updateDisplayList()</codeph>, <codeph>move()</codeph> и <codeph>setActualSize()</codeph> в каждом нижестоящем элементе. При создании макета необходимо получить размер этого контейнера на основе значений свойств <codeph>unscaledWidth</codeph> и <codeph>unscaledHeight</codeph>, а не свойств <codeph>width</codeph> и <codeph>height</codeph>. Свойства <codeph>width</codeph> и <codeph>height</codeph> не учитывают значения свойств <codeph>scaleX</codeph> и <codeph>scaleY</codeph> для этого контейнера.</p>
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.containers:TileDirection"><apiName>TileDirection</apiName><shortdesc>
  Класс TileDirection определяет значения констант для свойства direction контейнера Tile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс TileDirection определяет значения констант для свойства <codeph>direction</codeph> контейнера Tile.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#Tile"><linktext>mx.containers.Tile</linktext></link></related-links><apiValue id="mx.containers:TileDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  Указывает, что нижестоящие элементы контейнера Tile располагаются горизонтально; т. е. начиная с первой строки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что нижестоящие элементы контейнера Tile располагаются горизонтально; т. е. начиная с первой строки.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:TileDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  Указывает, что нижестоящие элементы контейнера Tile располагаются вертикально; т. е. начиная с первого столбца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что нижестоящие элементы контейнера Tile располагаются вертикально; т. е. начиная с первого столбца.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:TabNavigator"><apiName>TabNavigator</apiName><shortdesc>
  Контейнер MX TabNavigator расширяет контейнер MX ViewStack путем включения контейнера TabBar для перемещения между его нижестоящими элементами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="defaultButton"/><styles><style format="Length" inherit="no" name="tabOffset" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="Number">
<description>
  Горизонтальное смещение вкладки в пикселях от левого края контейнера TabNavigator. При положительном значении вкладка смещается вправо. При отрицательном значении вкладка смещается влево. 
 
  </description>
<default>0 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabWidth" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="Number">
<description>
  Ширина каждой вкладки в пикселях. По умолчанию используется значение <codeph>undefined</codeph>. Если для этого свойства установлено значение <codeph>undefined</codeph>, ширина каждой вкладки определяется шириной текста метки с использованием стилей шрифтов, применяемых для этого контейнера TabNavigator. Если общая ширина вкладок превышает ширину контейнера TabNavigator, вычисленная ширина вкладки сокращается, но только до минимального значения в 30 пикселей. Если значение для этого свойства установлено, указанное значение отменяет данное вычисление.
 
  <p>Если текст метки не соответствует размеру вкладки, он отсекается. Если метка вкладки была усечена, то при наведении курсора мыши на вкладку отображается всплывающая подсказка с полным текстом метки.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="tabStyleName" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для вкладок.
  
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabHeight" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="Number">
<description>
  Высота каждой вкладки в пикселях. По умолчанию используется значение <codeph>undefined</codeph>. Если для этого свойства установлено значение <codeph>undefined</codeph>, высота каждой вкладки определяется стилями шрифтов, применяемыми для этого контейнера TabNavigator. Если значение для этого свойства установлено, указанное значение отменяет данное вычисление.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedTabTextStyleName" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, указывающего стили для текста выбранной вкладки.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastTabStyleName" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для последней вкладки. Если имя не указано, то для свойства стиля <codeph>tabStyleName</codeph> используется значение по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="Number">
<description>
  Разделение между вкладками в пикселях. Значением по умолчанию является -1, при этом границы смежных вкладок перекрываются.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="String">
<description>
  Горизонтальное расположение вкладок в верхней области данного контейнера TabNavigator. Возможными значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>. Значение по умолчанию: <codeph>left</codeph>.
 
  <p>Если указано значение <codeph>left</codeph>, левый край первой вкладки выравнивается по левому краю контейнера TabNavigator. Если указано значение <codeph>right</codeph>, правый край последней вкладки выравнивается по правому краю контейнера TabNavigator. Если указано значение <codeph>center</codeph>, вкладка размещается по центру в верхней части контейнера TabNavigator.</p>
 
  <p>Для обеспечения видимого различия между вариантами выравнивания общая ширина всех вкладок должна быть меньше ширины контейнера TabNavigator.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstTabStyleName" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для первой вкладки. Если имя не указано, то для свойства стиля <codeph>tabStyleName</codeph> используется значение по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.containers:TabNavigator" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. Значением по умолчанию для темы Halo является <codeph>0,4</codeph>. Значение по умолчанию для темы Spark - <codeph>0,55</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.containers:TabNavigator" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Указывает цвета, используемые для определения оттенка заливки фона компонента. Данный параметр следует установить для массива из двух или четырех значений, определяющих цвета RGB. Элементы 0 и 1 указывают начальное и конечное значения для цветового градиента. Элементы 2 и 3, если они существуют, используются вместо элементов 0 и 1, когда компонент находится в состоянии наведения указателя мыши. В случае плоского элемента управления для элементов 0 и 1 и для элементов 2 и 3 устанавливается один и тот же цвет, значением по умолчанию является <codeph>[0xFFFFFF, 0xCCCCCC, 0xFFFFFF, 0xEEEEEE]</codeph>.
  <p>Некоторые компоненты, такие как контейнер ApplicationControlBar, имеют другое значение по умолчанию. Для контейнера ApplicationControlBar значением по умолчанию является <codeph>[0xFFFFFF, 0xFFFFFF]</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.containers:TabNavigator" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Определяет значения прозрачности альфа-канала, используемые для заливки фона компонентов. Следует установить массив из двух или четырех чисел. Элементы 0 и 1 определяют начальное и конечное значения для градиента альфа-канала. Элементы 2 и 3, если они существуют, используются вместо элементов 0 и 1, когда компонент находится в состоянии наведения указателя мыши. Глобальным значением по умолчанию является <codeph>[ 0.60, 0.40, 0.75, 0.65 ]</codeph>. Некоторые компоненты, такие как контейнер ApplicationControlBar, имеют другое значение по умолчанию. Для контейнера ApplicationControlBar значением по умолчанию является <codeph>[ 0.0, 0.0 ]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TabNavigator&gt;</code> tag inherits all of the
  tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:TabNavigator
    <b>Styles</b>
    fillAlphas="[0.60, 0.40, 0.75, 0.65]"
    fillColors="[0xFFFFFF, 0xCCCCCC, 0xFFFFFF, 0xEEEEEE]"
    firstTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    focusAlpha="0.4"
    focusRoundedCorners="tl tr bl br"
    horizontalAlign="left|center|right"
    horizontalGap="-1"
    lastTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    selectedTabTextStyleName="undefined"
    tabHeight="undefined"
    tabOffset="0"
    tabStyleName="<i>Name of CSS style declaration that specifies styles for the tabs</i>"
    tabWidth="undefined"
    &gt;
      ...
      <i>child tags</i>
      ...
  &lt;/mx:TabNavigator&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.containers:ViewStack</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер MX TabNavigator расширяет контейнер MX ViewStack путем включения контейнера TabBar для перемещения между его нижестоящими элементами.
 
  <p><b>Примечание.</b> Прямые нижестоящие элементы контейнера навигатора MX должны быть контейнерами MX (контейнерами макета MX или навигатора MX) или контейнером Spark NavigatorContent. В навигатор невозможно вложить элемент управления или контейнер Spark, не являющийся контейнером Spark NavigatorContent, напрямую. Вложения должны быть нижестоящими элементами нижестоящего контейнера MX.</p>
 
  <p>Аналогично контейнеру ViewStack, контейнер TabNavigator имеет коллекцию нижестоящих контейнеров, в которых в конкретный момент отображается только один нижестоящий элемент. Flex автоматически создает контейнер TabBar в верхней области контейнера TabNavigator, при этом каждому нижестоящему контейнеру соответствует своя вкладка. Каждая вкладка может иметь собственную метку и значок. При выборе вкладки пользователем соответствующий нижестоящий контейнер становится видимым и отображается как выбранный нижестоящий элемент из контейнера TabNavigator.</p>
 
  <p>При изменении видимого в данный момент нижестоящего контейнера можно использовать свойство <codeph>hideEffect</codeph> скрытого контейнера и свойство <codeph>showEffect</codeph> последнего отображенного нижестоящего контейнера для применения эффекта в нижестоящих контейнерах. Перед отображением нового нижестоящего контейнера контейнер TabNavigator ожидает завершения скрытия нижестоящего контейнера <codeph>hideEffect</codeph>. Применение эффекта можно остановить в процессе путем изменения свойства <codeph>selectedIndex</codeph> контейнера TabNavigator. </p>
  
  <p>Для определения внешнего вида вкладок в TabNavigator используются свойства стиля в селекторе типа вкладки Tab, как показано в примере:</p>
  <pre>
  &lt;fx:Style>
    @namespace mx "library://ns.adobe.com/flex/mx"
    mx|Tab {
       fillColors: #006699, #cccc66;
       upSkin: ClassReference("CustomSkinClass");
       overSkin: ClassReference("CustomSkinClass");
       downSkin: ClassReference("CustomSkinClass");
    }  
  &lt;/fx:Style>
  </pre>
 
  <p>Селектор типа Tab определяет значения в скрытом классе mx.controls.tabBarClasses.Tab. Значения по умолчанию для селектора типа Tab определены в файле defaults.css.</p>
 
  <p>С помощью свойства стиля <codeph>tabStyleName</codeph> можно также определить стили в селекторе класса, например:</p>
  <pre>
  &lt;fx:Style>
    @namespace mx "library://ns.adobe.com/flex/mx"
    mx|TabNavigator {
       tabStyleName:myTabStyle;
    }
 
    .myTabStyle {
       fillColors: #006699, #cccc66;
       upSkin: ClassReference("CustomSkinClass");
       overSkin: ClassReference("CustomSkinClass");
       downSkin: ClassReference("CustomSkinClass");
    }
  &lt;/fx:Style>
  </pre>
 
  <p>Контейнер TabNavigator имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Суммы ширины и высоты по умолчанию или явной ширины и высоты первого активного нижестоящего элемента, и высоты и ширины по умолчанию или явной высоты и ширины вкладки. Высота вкладок по умолчанию определяется шрифтом, стилем и темой оформления, применяемыми для контейнера TabNavigator.</entry>
        </row><row>
           <entry>Правила изменения размеров контейнеров</entry>
           <entry>По умолчанию размер контейнеров TabNavigator устанавливается только один раз в соответствии с размером первого нижестоящего контейнера. Он не изменяется при перемещении к другим нижестоящим контейнерам. Для принудительного изменения размеров контейнеров TabNavigator при переходе к другому нижестоящему контейнеру установите для свойства resizeToContent значение true.</entry>
        </row><row>
           <entry>Правила создания макетов для нижестоящих элементов</entry>
           <entry>Если размер нижестоящего элемента превышает размер контейнера TabNavigator, этот элемент отсекается. Если размер нижестоящего элемента меньше размера контейнера TabNavigator, то этот элемент выравнивается по верхнему левому углу контейнера TabNavigator.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TabNavigatorExample.mxml"><swfblock conref="examples/TabNavigatorExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#TabBar"><linktext>mx.controls.TabBar</linktext></link></related-links><apiConstructor id="mx.containers:TabNavigator:TabNavigator"><apiName>TabNavigator</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:TabNavigator:getTabAt"><apiName>getTabAt</apiName><shortdesc>
      Возвращает вкладку элемента управления TabBar навигатора с указанным индексом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Вкладка с указанным индексом.
      
      </apiDesc><apiOperationClassifier>mx.controls:Button</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс в элементе управления TabBar навигатора.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает вкладку элемента управления TabBar навигатора с указанным индексом.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:TabNavigator:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет размеры по умолчанию, а также минимальное и максимальное значения для данного контейнера TabNavigator.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет размеры по умолчанию, а также минимальное и максимальное значения для данного контейнера TabNavigator. Для получения дополнительной информации о методе <codeph>measure()</codeph> см. описание метода <codeph>UIComponent.measure()</codeph>.
     
      <p>Контейнер TabNavigator использует ту же логику измерения, что и контейнер <codeph>ViewStack</codeph> с двумя отличиями: во-первых, для размещения вкладок увеличивается значение свойств<codeph>measuredHeight</codeph> и <codeph>measuredMinHeight</codeph>. Во-вторых, для обеспечения минимальной ширины каждой вкладки в 30 пикселей увеличивается значение свойства <codeph>measuredWidth</codeph>.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link><link href="mx.containers.xml#ViewStack/measure()"><linktext>mx.containers.ViewStack.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.containers:TabNavigator:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Реагирует на изменения размера путем установления позиций и размеров вкладок данного контейнера и его нижестоящих элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реагирует на изменения размера путем установления позиций и размеров вкладок данного контейнера и его нижестоящих элементов. Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>.
     
      <p>Контейнер TabNavigator размещает контейнер TabBar в своей верхней области. Ширина TabBar устанавливается по ширине TabNavigator, а высота TabBar определяется на основе значения свойства <codeph>tabHeight</codeph>.</p>
     
      <p>Контейнер TabNavigator определяет для своих нижестоящих элементов позиции и размеры под TabBar с использованием той же логики, что и в контейнере ViewStack.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.containers:TabNavigator:protected:tabBar"><apiName>tabBar</apiName><shortdesc>
      Ссылка на TabBar в данном TabNavigator.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls:TabBar</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на TabBar в данном TabNavigator.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:TabNavigator:protected:tabBarStyleFilters:get"><apiName>tabBarStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из TabNavigator в tabBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из TabNavigator в tabBar.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.containers:HBox"><apiName>HBox</apiName><shortdesc>
  Контейнер Halo HBox размещает свои нижестоящие элементы в отдельной горизонтальной строке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="direction"/><Alternative owner="mx.containers:HBox" replacement="spark.components.BorderContainer" since="4.0">
	</Alternative><Alternative owner="mx.containers:HBox" replacement="spark.components.HGroup" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HBox&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except <code>direction</code>, and adds 
  no new tag attributes.</p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер Halo HBox размещает свои нижестоящие элементы в отдельной горизонтальной строке. Тег <codeph>&lt;mx:HBox></codeph> используется вместо тега <codeph>&lt;mx:Box></codeph> в качестве ярлыка, что позволяет избежать необходимости установки для свойства <codeph>direction</codeph> значения <codeph>horizontal</codeph>.
 
  <p><b>Примечание.</b> Adobe рекомендует по возможности использовать с HorizontalLayout контейнеры Spark, а не контейнер HBox.</p>
 
  <p>Контейнер HBox имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Ширина является достаточной для включения всех нижестоящих элементов с шириной по умолчанию или явной шириной, любого горизонтального промежутка между нижестоящими элементами, а также для заполнения контейнера слева и справа. Высота соответствует сумме высоты по умолчанию или явной высоты наиболее высокого нижестоящего элемента и заполнения для контейнера сверху и снизу.
           </entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="HBoxExample.mxml"><swfblock conref="examples/HBoxExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.Container.xml"><linktext>mx.components.Container</linktext></link><link href="mx.containers.xml#Box"><linktext>mx.containers.Box</linktext></link><link href="mx.containers.xml#VBox"><linktext>mx.containers.VBox</linktext></link></related-links><apiConstructor id="mx.containers:HBox:HBox"><apiName>HBox</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.containers:VBox"><apiName>VBox</apiName><shortdesc>
  Контейнер Halo VBox располагает свои нижестоящие элементы в одном вертикальном столбце.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="direction"/><Alternative owner="mx.containers:VBox" replacement="spark.components.BorderContainer" since="4.0">
	</Alternative><Alternative owner="mx.containers:VBox" replacement="spark.components.VGroup" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VBox&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except <code>direction</code>, and adds 
  no new tag attributes.</p></p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер Halo VBox располагает свои нижестоящие элементы в одном вертикальном столбце. Тег <codeph>&lt;mx:VBox></codeph> используется вместо тега <codeph>&lt;mx:Box></codeph> в качестве ярлыка, что позволяет избежать необходимости установки для свойства <codeph>direction</codeph> значения <codeph>vertical</codeph>.
 
  <p><b>Примечание.</b> Adobe рекомендует по возможности использовать с VerticalLayout контейнеры Spark, а не контейнер Halo VBox.</p>
 
  <p>Контейнер VBox имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Высота является достаточной для включения всех нижестоящих элементов с высотой по умолчанию или явной высотой, любых вертикальных промежутков между нижестоящими элементами, а также заполнения контейнера сверху и снизу. Ширина соответствует сумме ширины по умолчанию или явной ширины наиболее широкого нижестоящего элемента и заполнения контейнера слева и справа.
           </entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="VBoxExample.mxml"><swfblock conref="examples/VBoxExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.Container.xml"><linktext>mx.components.Container</linktext></link><link href="mx.containers.xml#Box"><linktext>mx.containers.Box</linktext></link><link href="mx.containers.xml#HBox"><linktext>mx.containers.HBox</linktext></link></related-links><apiConstructor id="mx.containers:VBox:VBox"><apiName>VBox</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.containers:TitleWindow"><apiName>TitleWindow</apiName><shortdesc>
  Контейнер макетов TitleWindow содержит строку заголовка, подпись, границу и область содержимого для нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Alternative owner="mx.containers:TitleWindow" replacement="spark.components.TitleWindow" since="4.0">
	</Alternative><styles><style inherit="no" name="closeButtonUpSkin" owner="mx.containers:TitleWindow" playerVersion="Flash9" type="Class">
<description>
  Тема оформления для положения кнопки закрытия «вверху». Значением по умолчанию является символ CloseButtonUp в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeButtonOverSkin" owner="mx.containers:TitleWindow" playerVersion="Flash9" type="Class">
<description>
  Тема оформления для положения кнопки закрытия «над». Значением по умолчанию является символ CloseButtonOver в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeButtonDownSkin" owner="mx.containers:TitleWindow" playerVersion="Flash9" type="Class">
<description>
  Тема оформления для положения кнопки закрытия «внизу». Значением по умолчанию является символ CloseButtonDown в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeButtonDisabledSkin" owner="mx.containers:TitleWindow" playerVersion="Flash9" type="Class">
<description>
  Тема оформления для неактивной кнопки закрытия. Значением по умолчанию является символ CloseButtonDisabled в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeButtonSkin" owner="mx.containers:TitleWindow" playerVersion="Flash9" type="Class">
<description>
  Тема оформления для кнопки закрытия по умолчанию.
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:TitleWindow&gt;</code> tag inherits all of the tag 
  attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:TitleWindow
   <b>Properties</b>
   showCloseButton="false|true"
 
   <b>Styles</b>
   closeButtonDisabledSkin="<i>'CloseButtonDisabled' symbol in Assets.swf</i>"
   closeButtonDownSkin="<i>'CloseButtonDown' symbol in Assets.swf</i>"
   closeButtonOverSkin="<i>'CloseButtonOver' symbol in Assets.swf</i>"
   closeButtonUpSkin="<i>'CloseButtonUp' symbol in Assets.swf</i>"
  
   <strong>Events</strong>
   close="<i>No default</i>"
   &gt;
    ...
      child tags
    ...
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер макетов TitleWindow содержит строку заголовка, подпись, границу и область содержимого для нижестоящего элемента. Как правило, для включения изолированных модулей приложения используются контейнеры TitleWindow. Например, можно включить форму в контейнер TitleWindow. При заполнении формы пользователем контейнер TitleWindow можно закрыть программным способом или разрешить пользователю закрыть его с помощью кнопки закрытия.
  
  <p>Контейнер TitleWindow имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Высота является достаточной для включения всех нижестоящих элементов в область содержимого с высотой по умолчанию или явной высотой, строки заголовка и границы, любого вертикального промежутка между нижестоящими элементами, а также для заполнения контейнера сверху и снизу. Ширина соответствует сумме наибольшего значения ширины по умолчанию или явного значения наиболее широкого нижестоящего элемента и заполнения правой и левой границ контейнера или ширины текста заголовка.</entry>
        </row><row>
           <entry>границы</entry>
           <entry>10 пикселей для значений левого и правого краев. 2 пикселя для значения верхнего края. 0 пикселей для значения нижнего края.
           </entry>
        </row><row>
           <entry>заполнение</entry>
           <entry>4 пикселя для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleTitleWindowExample.mxml"/><example conref="TitleWindowApp.mxml"><swfblock conref="examples/TitleWindowApp.swf"/></example></apiClassifierDetail><related-links><link href="mx.core.xml#Application"><linktext>mx.core.Application</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link><link href="mx.containers.xml#Panel"><linktext>mx.containers.Panel</linktext></link></related-links><adobeApiEvent id="mx.containers:TitleWindow_mx.events.CloseEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Передается при нажатии пользователем кнопки закрытия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3985
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CloseEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.CloseEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>событие close
  
  </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
  Передается при нажатии пользователем кнопки закрытия.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.containers:TitleWindow:TitleWindow"><apiName>TitleWindow</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.containers:TitleWindow:showCloseButton:get"><apiName>showCloseButton</apiName><shortdesc>
      Требуется ли отображать кнопку закрытия в контейнере TitleWindow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3986
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue><apiTipTexts><apiTipText>Если значение равно true, кнопка закрытия отображается.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Требуется ли отображать кнопку закрытия в контейнере TitleWindow. Значение по умолчанию <codeph>false</codeph>. Для отображения кнопки закрытия установите значение <codeph>true</codeph>. При нажатии кнопки закрытия создается событие <codeph>close</codeph>, но контейнер TitleWindow не закрывается. Необходимо написать программу обработки для события <codeph>close</codeph> и закрыть с ее помощью TitleWindow.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:FormHeading"><apiName>FormHeading</apiName><shortdesc>
  Контейнер FormHeading используется для отображения заголовка группы элементов управления в контейнере Form.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Число пикселей над текстом заголовка.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="labelWidth" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Ширина меток формы. Значение по умолчанию соответствует длине наиболее длинной метки в форме. Для FormHeading значением <codeph>labelWidth</codeph> является пробел слева от текста заголовка.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="indicatorGap" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между областью метки и текстом заголовка.
 
  </description>
<default>14
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.containers:FormHeading" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.containers:FormHeading" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Для тем Halo значением по умолчанию для всех элементов управления, кроме ColorPicker, является 10. Для элемента управления ColorPicker с темой Halo значением по умолчанию является 11. Для тем Spark значением по умолчанию для всех элементов управления, кроме ColorPicker, является 12. Для элемента управления ColorPicker с темой Spark значением по умолчанию является 11.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. Шрифтом по умолчанию для темы Halo является <codeph>Verdana</codeph>. Шрифтом по умолчанию для темы Spark является <codeph>Arial</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.containers:FormHeading" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.containers:FormHeading" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.containers:FormHeading" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.containers:FormHeading" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. Значением по умолчанию для темы Halo является <codeph>0x0B333C</codeph>. Значение по умолчанию для темы Spark - <codeph>0x000000</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p>Значением по умолчанию для элемента управления Button является 10 для темы Halo и 6 для темы Spark.</p>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p>Значением по умолчанию для элемента управления Button является 10 для темы Halo и 6 для темы Spark.</p>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.containers:FormHeading" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значение по умолчанию для элемента управления ComboBox: 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FormHeading&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FormHeading
    <strong>Properties</strong>
    label=""
  
    <strong>Styles</strong>
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|subpixel|none"
    fontSharpness="0"
    fontSize="12"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    indicatorGap="14"
    labelWidth="<i>Calculated</i>"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="0"
    textAlign="<i>Calculated</i>"
    textDecoration="none|underline"
    textIndent="0"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер FormHeading используется для отображения заголовка группы элементов управления в контейнере Form. Левый край заголовка выравнивается по левому краю элементов управления в форме. В один контейнер Form можно включить несколько контейнеров FormHeading.
 
  </apiDesc><example conref="FormExample.mxml"><swfblock conref="examples/FormExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#Form"><linktext>mx.containers.Form</linktext></link><link href="mx.containers.xml#FormItem"><linktext>mx.containers.FormItem</linktext></link></related-links><apiConstructor id="mx.containers:FormHeading:FormHeading"><apiName>FormHeading</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.containers:FormHeading:label:get"><apiName>label</apiName><shortdesc>
	  Текст заголовка формы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="labelChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
	  Текст заголовка формы.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:Accordion"><apiName>Accordion</apiName><shortdesc>
  Контейнер навигатора MX Accordion имеет коллекцию нижестоящих контейнеров MX или контейнеров Spark NavigatorContent. При этом в каждый конкретный момент видимым является только один нижестоящий элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="defaultButton"/><Exclude kind="property" name="clipContent"/><Exclude kind="property" name="autoLayout"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:Accordion" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значением по умолчанию является -1. При этом верхняя и нижняя границы смежных заголовков перекрываются.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.containers:Accordion" playerVersion="Flash9" type="uint">
<description>
  Цвет выбранного текста. Значением по умолчанию для темы Halo является  <codeph>0x2B333C</codeph>. Значение по умолчанию для темы Spark - <codeph>0x000000</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.containers:Accordion" playerVersion="Flash9" type="uint">
<description>
  Цвет текста заголовка при наведении курсора. Значением по умолчанию для темы Halo является  <codeph>0x2B333C</codeph>. Значение по умолчанию для темы Spark - <codeph>0x000000</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:Accordion" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и его областью содержимого. Значением по умолчанию является -1, при этом верхняя граница первого заголовка перекрывает верхнюю границу контейнера Accordion.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:Accordion" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и его областью содержимого. Значением по умолчанию является -1, при этом нижняя граница последнего заголовка перекрывает нижнюю границу контейнера Accordion.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.containers:Accordion" playerVersion="Flash9" type="Function">
<description>
  Функция создания промежуточных кадров, используемая для анимации, начинающейся в одном нижестоящем элементе и заканчивающейся в другом.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.containers:Accordion" playerVersion="Flash9" type="Number">
<description>
  Продолжительность анимации в миллисекундах между нижестоящими элементами. Значением по умолчанию для темы Halo является 250. Значением по умолчанию для темы Spark является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="headerHeight" owner="mx.containers:Accordion" playerVersion="Flash9" type="Number">
<description>
  Высота каждого заголовка accordion в пикселях. Значение по умолчанию автоматически вычисляется на основе стилей шрифтов для заголовка.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:Accordion" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.containers:Accordion" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, определяющее стили для заголовков accordion (вкладок).
 
  <p>Этот селектор класса используется для установки значения всех свойств стиля класса AccordionHeader, включая следующие: <codeph>fillAlphas</codeph>, <codeph>fillColors</codeph>, <codeph>focusAlpha</codeph>, <codeph>focusRounderCorners</codeph>, <codeph>focusSkin</codeph>, <codeph>focusThickness</codeph> и <codeph>selectedFillColors</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Accordion&gt;</code> tag inherits all of the
  tag attributes of its superclass, with the exception of scrolling-related
  attributes, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Accordion
    <strong>Properties</strong>
    headerRenderer="<i>IFactory</i>"
    historyManagementEnabled="true|false"
    resizeToContent="false|true"
    selectedChild"<i>A reference to the first child</i>"
    selectedIndex="undefined"
  
    <strong>Styles</strong>
    headerHeight="depends on header font styles"
    headerStyleName="<i>No default</i>"
    horizontalGap="8"
    openDuration="250"
    openEasingFunction="undefined"
    paddingBottom="-1"
    paddingTop="-1"
    textRollOverColor="0xB333C"
    textSelectedColor="0xB333C"
    verticalGap="-1"
  
    <strong>Events</strong>
    change="<i>No default</i>"
    &gt;
      ...
      <i>child tags</i>
      ...
  &lt;/mx:Accordion&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Контейнер Accordion позволяет осуществлять навигацию между различными нижестоящими ракурсами.
  </apiTipText></apiTipTexts><apiBaseInterface>mx.managers:IHistoryManagerClient</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер навигатора MX Accordion имеет коллекцию нижестоящих контейнеров MX или контейнеров Spark NavigatorContent. При этом в каждый конкретный момент видимым является только один нижестоящий элемент. Он создает и осуществляет управление кнопками навигатора (заголовками Accordion), которые используются для перемещения между нижестоящими элементами. С каждым нижестоящим контейнером связана отдельная кнопка навигатора. Каждая кнопка навигатора принадлежит контейнеру Accordion, а не нижестоящему элементу. При нажатии пользователем кнопки навигатора отображается связанный нижестоящий контейнер. При переходе к новому нижестоящему элементу пользователю будет показано с помощью анимации, что один нижестоящий элемент исчезает, а другой появляется.
 
  <p><b>Примечание.</b> Прямые нижестоящие элементы контейнера навигатора MX должны быть контейнерами MX (контейнерами макета MX или навигатора MX) или контейнером Spark NavigatorContent. В навигатор невозможно вложить элемент управления или контейнер Spark, не являющийся контейнером Spark NavigatorContent, напрямую. Вложения должны быть нижестоящими элементами нижестоящего контейнера MX.</p>
 
  <p>Контейнер Accordion не расширяет контейнер ViewStack, но реализует все свойства, методы, стили и события контейнера ViewStack, например, <codeph>selectedIndex</codeph> и <codeph>selectedChild</codeph>.</p>
 
  <p>Контейнер Accordion имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина и высота нижестоящего элемента, активного в настоящий момент.</entry>
        </row><row>
           <entry>Правила изменения размеров контейнеров</entry>
           <entry>Размер контейнеров Accordion устанавливается только один раз в соответствии с размером первого нижестоящего контейнера по умолчанию. Он не изменяется при переходе к другим нижестоящим контейнерам по умолчанию. Для принудительного изменения размера контейнера Accordion при переходе к другому нижестоящему контейнеру установите для свойства resizeToContent значение true.</entry>
        </row><row>
           <entry>Правила установки размеров нижестоящих элементов</entry>
           <entry>Размер нижестоящего элемента устанавливается в соответствии с размером по умолчанию. Нижестоящий элемент отсекается, если его размер превышает размер контейнера Accordion. Если размер нижестоящего элемента меньше размера контейнера Accordion, он выравнивается по верхнему левому углу контейнера Accordion.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>-1 пиксель для значений заполнения сверху, снизу, слева и справа.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="AccordionExample.mxml"><swfblock conref="examples/AccordionExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.accordionClasses.xml#AccordionHeader"><linktext>mx.containers.accordionClasses.AccordionHeader</linktext></link></related-links><adobeApiEvent id="mx.containers:Accordion_mx.events.IndexChangedEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении выбранного нижестоящего контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3012
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.IndexChangedEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.IndexChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>событие change.
  
  </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
  Передается при изменении выбранного нижестоящего контейнера.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.containers:Accordion:Accordion"><apiName>Accordion</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Accordion:getHeaderAt"><apiName>getHeaderAt</apiName><shortdesc>
      Возвращает ссылку на кнопку навигатора для нижестоящего контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект кнопки, представляющий кнопку навигатора.
      
      </apiDesc><apiOperationClassifier>mx.controls:Button</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс нижестоящего элемента, отсчитываемый от нуля.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает ссылку на кнопку навигатора для нижестоящего контейнера.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Accordion:loadState"><apiName>loadState</apiName><shortdesc conref="mx.managers.IHistoryManagerClient#loadState()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>state</apiItemName><apiType value="Object"/><apiDesc>Состояние объекта, который требуется загрузить. При загрузке начального состояния приложения значение будет равно null.
	 
	  </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.managers.IHistoryManagerClient#loadState()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Accordion:saveState"><apiName>saveState</apiName><shortdesc conref="mx.managers.IHistoryManagerClient#saveState()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>Состояние этого объекта.
	  
	  </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.managers.IHistoryManagerClient#saveState()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:Accordion:protected:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      Высота области, в которой отображается содержимое, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота области, в которой отображается содержимое, в пикселях. Этот получатель можно отменить, если содержимое не занимает всю область контейнера.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Accordion:protected:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      Ширина области, в которой отображается содержимое, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина области, в которой отображается содержимое, в пикселях. Этот получатель можно отменить, если содержимое не занимает всю область контейнера.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Accordion:headerRenderer:get"><apiName>headerRenderer</apiName><shortdesc>
      Фабрика для создания кнопок навигации для каждого нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="headerRendererChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Фабрика для создания кнопок навигации для каждого нижестоящего элемента. Значением по умолчанию является фабрика, которая создает <codeph>mx.containers.accordionClasses.AccordionHeader</codeph>. Создаваемый объект должен являться подчиненным классом Button и реализовывать интерфейс <codeph>mx.core.IDataRenderer</codeph>. Значение свойства <codeph>data</codeph> устанавливается в соответствии с содержимым, связанным с заголовком.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.containers.accordionClasses.xml#AccordionHeader"><linktext>mx.containers.accordionClasses.AccordionHeader</linktext></link></related-links></apiValue><apiValue id="mx.containers:Accordion:historyManagementEnabled:get"><apiName>historyManagementEnabled</apiName><shortdesc>
      Если установлено значение true, это свойство разрешает управление историей в данном контейнере Accordion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Если установлено значение <codeph>true</codeph>, это свойство разрешает управление историей в данном контейнере Accordion. При переходе пользователем от одного нижестоящего элемента к другому браузер запоминает посещенные нижестоящие элементы. Пользователь может осуществлять навигацию, учитывающую данную историю, с помощью кнопок браузера «Назад» и «Вперед».
     
      </apiDesc></apiValueDetail><related-links><link href="mx.managers.xml#HistoryManager"><linktext>mx.managers.HistoryManager</linktext></link></related-links></apiValue><apiValue id="mx.containers:Accordion:resizeToContent:get"><apiName>resizeToContent</apiName><shortdesc>
      Если установлено значение true, размер этого контейнера Accordion автоматически изменяется в соответствии с размером текущего нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если установлено значение <codeph>true</codeph>, размер этого контейнера Accordion автоматически изменяется в соответствии с размером текущего нижестоящего элемента.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Accordion:selectedChild:get"><apiName>selectedChild</apiName><shortdesc>
      Ссылка на видимый в данный момент нижестоящий контейнер.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3401
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:INavigatorContent</apiValueClassifier><apiTipTexts><apiTipText>Указывает нижестоящий ракурс, отображаемый в данный момент.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Ссылка на видимый в данный момент нижестоящий контейнер. Значением по умолчанию является ссылка на первый нижестоящий элемент. При отсутствии нижестоящих элементов для этого свойства устанавливается значение <codeph>null</codeph>.
     
      <p><b>Примечание.</b> Значение для этого свойства можно установить только в операторе ActionScript, не в MXML.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Accordion:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс для видимого в настоящий момент нижестоящего контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3402
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Указывает индекс нижестоящего ракурса, отображаемого в настоящий момент.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс для видимого в настоящий момент нижестоящего контейнера. Индексы нижестоящих элементов находятся в диапазоне 0, 1, 2 ..., n - 1, где n является количеством нижестоящих элементов. Значением по умолчанию является 0, что соответствует первому нижестоящему элементу. При отсутствии нижестоящих элементов для этого свойства устанавливается значение <codeph>-1</codeph>.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:ControlBar"><apiName>ControlBar</apiName><shortdesc>
  Контейнер ControlBar позволяет размещать элементы управления в нижней области контейнера Halo Panel или Halo TitleWindow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="direction"/><Alternative owner="mx.containers:ControlBar" replacement="none" since="4.0">
<description>
  В Flex 4 компонент ControlBar больше не требуется. Используйте свойство <codeph>controlBarContent</codeph> класса Spark Panel для определения набора компонентов, включаемых в область панели управления. Используйте свойство <codeph>controlBarLayout</codeph> класса Spark Panel для определения шаблона области панели управления. 
 </description>
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ControlBar&gt;</code> tag inherits all the tag
  attributes but adds no additional attributes:</p>
 
  <pre>
  &lt;mx:ControlBar&gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:ControlBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер ControlBar позволяет размещать элементы управления в нижней области контейнера Halo Panel или Halo TitleWindow. Тег <codeph>&lt;mx:ControlBar></codeph> должен являться последним нижестоящим тегом для тега с вложением контейнера Halo Panel или Halo TitleWindow.
 
  <p><b>Примечание.</b> Контейнер Spark Panel не поддерживает контейнер ControlBar. Для добавления этой функции измените тему оформления контейнера Spark Panel.</p>
 
  <p>ControlBar представляет собой окно со свойствами фона и стиля по умолчанию.</p>
 
  <p>Контейнер ControlBar имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Высота соответствует сумме высоты по умолчанию или явной высоты наиболее высокого нижестоящего элемента и заполнения контейнера сверху и снизу. Ширина является достаточной для включения всех нижестоящих элементов с шириной по умолчанию или явной шириной, любого горизонтального промежутка между нижестоящими элементами, а также для заполнения контейнера слева и справа.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>10 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleControlBarExample.mxml"><swfblock conref="examples/SimpleControlBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#Panel"><linktext>mx.containers.Panel</linktext></link></related-links><apiConstructor id="mx.containers:ControlBar:ControlBar"><apiName>ControlBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.containers:GridItem"><apiName>GridItem</apiName><shortdesc>
  Контейнер GridItem определяет ячейку сетки в контейнере GridRow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="moveEffect"/><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="verticalGap"/><Exclude kind="style" name="horizontalGap"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="move"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="method" name="setFocus"/><Exclude kind="method" name="isOurFocus"/><Exclude kind="method" name="getFocus"/><Exclude kind="method" name="adjustFocusRect"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusManager"/><Exclude kind="property" name="focusEnabled"/><Exclude kind="property" name="direction"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:GridItem&gt;</code> tag must be a child of the 
  <code>&lt;GridRow&gt;</code> tag, which defines a grid row.
  The <code>&lt;mx:GridItem&gt;</code> container inherits the
  tag attributes of its superclass, and adds the following tag attributes.</p>
 
  <pre>
  &lt;mx:Grid&gt;
    &lt;mx:GridRow&gt;
      &lt;mx:GridItem
        rowSpan="1"
        colSpan="1">
          <i>child components</i>
      &lt;/mx:GridItem&gt;
      ...
    &lt;/mx:GridRow&gt;
    ...
  &lt;/mx:Grid&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:HBox</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер GridItem определяет ячейку сетки в контейнере GridRow. (Контейнер GridRow, в свою очередь, определяет строку в контейнере Grid.) Контейнер GridItem может содержать любое количество нижестоящих элементов, расположенных аналогично элементам в контейнере HBox. Если макет HBox использовать не требуется, создайте контейнер, например VBox, в качестве нижестоящего элемента управления GridItem, и поместите в этот нижестоящий контейнер другие компоненты.
 
  <p>Контейнеры GridItem имеют следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Высота каждой строки и каждой ячейки.</entry>
           <entry>Высота по умолчанию или явная высота наиболее высокого элемента в строке. Если контейнер GridItem не имеет явного размера, его высота по умолчанию соответствует высоте по умолчанию или явной высоте нижестоящего элемента в ячейке.</entry>
        </row><row>
           <entry>Ширина каждого столбца и каждой ячейки.</entry>
           <entry>Ширина по умолчанию или явная ширина по умолчанию наиболее широкого элемента в столбце. Если контейнер GridItem не имеет явной ширины, его шириной по умолчанию будет являться ширина по умолчанию или явная ширина нижестоящего элемента в ячейке.</entry>
        </row><row>
           <entry>Промежуток между строками и столбцами.</entry>
           <entry>Определяется свойствами horizontalGap и verticalGap класса Grid. Значением по умолчанию для обоих промежутков является 6 пикселей.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений верхнего, нижнего, правого и левого края всех трех контейнерных классов.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="GridLayoutExample.mxml"><swfblock conref="examples/GridLayoutExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#Grid"><linktext>mx.containers.Grid</linktext></link><link href="mx.containers.xml#GridRow"><linktext>mx.containers.GridRow</linktext></link></related-links><apiConstructor id="mx.containers:GridItem:GridItem"><apiName>GridItem</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.containers:GridItem:colSpan:get"><apiName>colSpan</apiName><shortdesc>
      Количество столбцов контейнера Grid, включенных в одну ячейку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Количество столбцов контейнера Grid, включенных в одну ячейку.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:GridItem:rowSpan:get"><apiName>rowSpan</apiName><shortdesc>
      Количество строк контейнера Grid, включенных в одну ячейку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Количество строк контейнера Grid, включенных в одну ячейку. Расширить ячейку сверх числа строк в контейнере Grid невозможно.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:Panel"><apiName>Panel</apiName><shortdesc>
  Контейнер Halo Panel состоит из строки заголовка, подписи, границы и области содержимого для нижестоящих элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Alternative owner="mx.containers:Panel" replacement="spark.components.Panel" since="4.0">
	</Alternative><effects><effect event="resizeStart" name="resizeStartEffect" owner="mx.containers:Panel">
<description>
  Указывает эффект, который будет воспроизведен перед изменением размера. Для деактивации эффекта растворения (Dissolve) по умолчанию для мгновенного скрытия нижестоящих элементов установите для свойства <codeph>resizeStartEffect</codeph> значение <codeph>none</codeph>.  
 
  </description>
<default>"Dissolve"
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect><effect event="resizeEnd" name="resizeEndEffect" owner="mx.containers:Panel">
<description>
  Указывает эффект, который требуется воспроизвести после завершения эффекта изменения размера. Для деактивации эффекта Dissolve по умолчанию установите для мгновенного скрытия нижестоящих элементов для свойства <codeph>resizeEndEffect</codeph> значение <codeph>none</codeph>.  
 
  </description>
<default>"Dissolve"
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style inherit="no" name="titleStyleName" owner="mx.containers:Panel" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля для текста в строке заголовка. Значением по умолчанию является <codeph>windowStyles</codeph>, при этом для заголовка будет использован текст с жирным шрифтом.
 
  </description>
<default>"windowStyles"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="titleBackgroundSkin" owner="mx.containers:Panel" playerVersion="Flash9" type="Class">
<description>
  Тема оформления фона заголовка. Значение по умолчанию для темы Halo - <codeph>mx.skins.halo.TitleBackground</codeph>. Значением по умолчанию для темы Spark является <codeph>mx.core.UIComponent</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="statusStyleName" owner="mx.containers:Panel" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля для статуса в строке заголовка.
 
  </description>
<default>"windowStatus"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Расстояние для тени. При использовании отрицательных значений тень будет располагаться над панелью.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="String">
<description>
  Направление тени. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="roundedBottomCorners" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Флаг для скругления двух нижних углов контейнера. Не влияет на два верхних угла, которые, как правило, являются скругленными. Для изменения верхних углов на прямые установите для свойства <codeph>cornerRadius</codeph> значение 0.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и его областью содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между нижней границей контейнера и его областью содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-каналы для заливки выделения заголовка.
 
  </description>
<default>[0.3,0]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="headerHeight" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Высота заголовка. Значение по умолчанию определяется стилем текста заголовка.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Массив из двух цветов для создания заголовка. Первый цвет является верхним. Второй цвет является нижним. Значением по умолчанию является <codeph>null</codeph>, при этом фон заголовка будет идентичен фону панели.
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="footerColors" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Массив из двух цветов для создания фона нижнего колонтитула (область контейнера ControlBar). Первый цвет является верхним. Второй цвет является нижним. Значением по умолчанию является <codeph>null</codeph>, при этом фон панели управления будет идентичен фону панели.
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Логическое значение свойства, управляющее отображением тени для контейнера Panel.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов рамки окна. Значение по умолчанию для темы Halo - <codeph>4</codeph>. Значение по умолчанию для темы Spark - <codeph>0</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="controlBarStyleName" owner="mx.containers:Panel" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для нижестоящего элемента управления любой панели управления.
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThicknessTop" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина верхней границы контейнера Panel.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThicknessRight" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина правой границы контейнера Panel.
 
  </description>
<default>10
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThicknessLeft" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина левой границы контейнера Panel.
 
  </description>
<default>10
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThicknessBottom" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина нижней границы элемента управления Panel. Если этот стиль не установлен, а элемент управления Panel содержит элемент управления ControlBar, толщина нижней границы будет равна толщине верхней границы панели; в противном случае толщина нижней границы будет равна толщине левой границы.
 
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.containers:Panel" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Альфа-канал строки заголовка, панель управления и боковые области контейнера Panel. Значением по умолчанию для темы Halo является <codeph>0,4</codeph>. Значение по умолчанию для темы Spark - <codeph>0,5</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="yes" name="modalTransparencyDuration" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Продолжительность (в миллисекундах) эффекта модальной прозрачности, который воспроизводится при открытии или закрытии модального окна.
 
  </description>
<default>100
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="modalTransparencyColor" owner="mx.containers:Panel" playerVersion="Flash9" type="uint">
<description>
  Цвет уровня модального перекрытия. Этот стиль используется совместно со стилем <codeph>modalTransparency</codeph> для определения окраски приложения, если модальное окно является открытым.
 
  </description>
<default>#DDDDDD
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="modalTransparencyBlur" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Размытие, применяемое для приложения, если модальное окно является открытым. Эффект размытия смягчает контуры изображения. 
  
  </description>
<default>3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.filters.BlurFilter.xml"><linktext>flash.filters.BlurFilter</linktext></link></related-links></style><style inherit="yes" name="modalTransparency" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Модальность компонентов, запущенных PopUp Manager, моделируется посредством создания большой прозрачной области перекрытия под компонентом. Вследствие визуализации прозрачных объектов может появиться небольшое затемнение объектов при перекрытии. Эффективную прозрачность можно установить путем изменения значения <codeph>modalTransparency</codeph> от 0,0 (полная прозрачность) до 1,0 (полная непрозрачность). Можно также установить цвет области перекрытия путем изменения стиля <codeph>modalTransparencyColor</codeph>.
 
  </description>
<default>0.5
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:Panel" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.containers:Panel" playerVersion="Flash9" type="String">
<description>
  Вертикальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>. Значением по умолчанию является <codeph>top</codeph>, но некоторые контейнеры, например, ButtonBar, ControlBar, LinkBar и ToggleButtonBar имеют другие значения по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.containers:Panel" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>. Значением по умолчанию является <codeph>left</codeph>, но некоторые контейнеры, например, ButtonBar и ToggleButtonBar имеют другие значения по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Panel&gt;</code> tag inherits all of the tag 
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Panel
   <strong>Properties</strong>
   layout="vertical|horizontal|absolute"
   status=""
   title=""
   titleIcon="null"
  
   <strong>Styles</strong>
   borderAlpha="0.4"
   borderThicknessBottom="NaN"
   borderThicknessLeft="10"
   borderThicknessRight="10"
   borderThicknessTop="2"
   controlBarStyleName="null"
   cornerRadius="4"
   dropShadowEnabled="true|false"
   footerColors="null"
   headerColors="null"
   headerHeight="<i>Based on style of title</i>"
   highlightAlphas="[0.3,0]"
   horizontalAlign="left|center|right"
   horizontalGap="8"
   modalTransparency="0.5"
   modalTransparencyBlur="3"
   modalTransparencyColor="#DDDDDD"
   modalTransparencyDuration="100"
   paddingBottom="0"
   paddingTop="0"
   roundedBottomCorners="false|true"
   shadowDirection="center|left|right"
   shadowDistance="2"
   statusStyleName="windowStatus"
   titleBackgroundSkin="TitleBackground"
   titleStyleName="windowStyles"
   verticalAlign="top|middle|bottom"
   verticalGap="6"
  
   <strong>Effects</strong>
   resizeEndEffect="Dissolve"
   resizeStartEffect="Dissolve"
   &gt;
      ...
      <i>child tags</i>
      ...
  &lt;/mx:Panel&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.containers.utilityClasses:IConstraintLayout</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер Halo Panel состоит из строки заголовка, подписи, границы и области содержимого для нижестоящих элементов. Как правило, контейнеры Panel используются для включения модулей приложений верхнего уровня. Например, в контейнер Panel можно включить корзину покупок.
 
  <p><b>Примечание.</b> Adobe рекомендует по возможности использовать контейнер Spark Panel, а не Halo Panel.</p>
 
  <p>Контейнер Panel имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Высота является достаточной для включения всех нижестоящих элементов с высотой по умолчанию, любых вертикальных промежутков между нижестоящими элементами, заполнения сверху и снизу, верхней и нижней границ, а также строки заголовка. Ширина соответствует сумме наибольшего значения ширины по умолчанию самого широкого нижестоящего элемента, заполнения контейнера слева и справа или ширины текста заголовка, и границы.</entry>
        </row><row>
           <entry>Заполнение</entry>
           <entry>4 пикселя для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimplePanelExample.mxml"><swfblock conref="examples/SimplePanelExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="spark.components.Panel.xml"><linktext>spark.components.Panel</linktext></link><link href="mx.containers.xml#ControlBar"><linktext>mx.containers.ControlBar</linktext></link><link href="mx.containers.xml#VBox"><linktext>mx.containers.VBox</linktext></link></related-links><apiConstructor id="mx.containers:Panel:Panel"><apiName>Panel</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Panel:protected:getHeaderHeight"><apiName>getHeaderHeight</apiName><shortdesc>
      Возвращает высоту заголовка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Высота заголовка в пикселях.     
      
      </apiDesc><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
      Возвращает высоту заголовка.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Panel:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет минимальный и максимальный размеры по умолчанию для контейнера Panel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет минимальный и максимальный размеры по умолчанию для контейнера Panel. Для получения дополнительной информации о методе <codeph>measure()</codeph> см. описание метода <codeph>UIComponent.measure()</codeph>.
     
      <p>Метод <codeph>measure()</codeph> сначала вызывает метод <codeph>VBox.measure()</codeph>, а затем проверяет, что свойства <codeph>measuredWidth</codeph> и <codeph>measuredMinWidth</codeph> предоставляют достаточную ширину для отображения заголовка и ControlBar.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.containers:Panel:protected:startDragging"><apiName>startDragging</apiName><shortdesc>
      Вызывается при начале перетаскивания пользователем контейнера Panel, раскрытого с помощью PopUpManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef><apiDesc>
      Вызывается при начале перетаскивания пользователем контейнера Panel, раскрытого с помощью PopUpManager.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Panel:protected:stopDragging"><apiName>stopDragging</apiName><shortdesc>
      Вызывается при завершении перетаскивания пользователем контейнера Panel, раскрытого с помощью PopUpManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается при завершении перетаскивания пользователем контейнера Panel, раскрытого с помощью PopUpManager.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:Panel:protected:controlBar"><apiName>controlBar</apiName><shortdesc>
      Ссылка на данную панель управления контейнера Panel, если имеется.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на данную панель управления контейнера Panel, если имеется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:protected:statusTextField"><apiName>statusTextField</apiName><shortdesc>
      Подчиненный элемент управления UITextField, который отображает статус.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Подчиненный элемент управления UITextField, который отображает статус. Поле статуса является нижестоящим элементом для подчиненного элемента управления <codeph>titleBar</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.containers.xml#Panel/titleBar"><linktext>titleBar</linktext></link></related-links></apiValue><apiValue id="mx.containers:Panel:protected:titleBar"><apiName>titleBar</apiName><shortdesc>
      Подчиненный элемент управления TitleBar, отображающий строку заголовка контейнера Panel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:UIComponent</apiValueClassifier></apiValueDef><apiDesc>
      Подчиненный элемент управления TitleBar, отображающий строку заголовка контейнера Panel.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:protected:titleTextField"><apiName>titleTextField</apiName><shortdesc>
      Подчиненный элемент управления UITextField, отображающий заголовок.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Подчиненный элемент управления UITextField, отображающий заголовок. Поле заголовка является нижестоящим элементом для подчиненного элемента управления <codeph>titleBar</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.containers.xml#Panel/titleBar"><linktext>titleBar</linktext></link></related-links></apiValue><apiValue id="mx.containers:Panel:protected:closeButtonStyleFilters:get"><apiName>closeButtonStyleFilters</apiName><shortdesc>
      Набор стилей для передачи от контейнера Panel кнопке закрытия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи от контейнера Panel кнопке закрытия.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.containers:Panel:constraintColumns:get"><apiName>constraintColumns</apiName><shortdesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintColumns">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintColumns">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:constraintRows:get"><apiName>constraintRows</apiName><shortdesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintRows">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.containers.utilityClasses.IConstraintLayout#constraintRows">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:layout:get"><apiName>layout</apiName><shortdesc>
      Указывает механизм создания макета для данного контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="layoutChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"vertical"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает механизм создания макета для данного контейнера. Контейнеры Panel могут использовать для размещения элементов значения <codeph>vertical</codeph>, <codeph>horizontal</codeph> или <codeph>absolute</codeph>. При вертикальном размещении нижестоящие компоненты располагаются вертикально от верхней к нижней части контейнера в указанном порядке. При горизонтальном размещении нижестоящие компоненты располагаются в контейнере горизонтально слева направо в указанном порядке. При абсолютном размещении автоматический макет не применяется. Пользователь должен явно определить местоположение каждого нижестоящего элемента. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:status:get"><apiName>status</apiName><shortdesc>
      Текст в области статуса строки заголовка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="statusChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текст в области статуса строки заголовка.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:titleIcon:get"><apiName>titleIcon</apiName><shortdesc>
      Значок, отображаемый в строке заголовка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="titleIconChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Class"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Значок, отображаемый в строке заголовка.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Panel:title:get"><apiName>title</apiName><shortdesc>
      Заголовок или подпись в строке заголовка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3991
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="titleChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue><apiTipTexts><apiTipText>Получает или устанавливает заголовок/подпись, отображаемые в строке заголовка
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Заголовок или подпись в строке заголовка.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:Tile"><apiName>Tile</apiName><shortdesc>
  В контейнере Halo Tile нижестоящие элементы расположены в сетке из равных по размеру ячеек.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Alternative owner="mx.containers:Tile" replacement="spark.components.BorderContainer" since="4.0">
	</Alternative><Alternative owner="mx.containers:Tile" replacement="spark.components.TileGroup" since="4.0">
<description>
  Специфичные для макета компоненты контейнера в Flex 3 были заменены более общим компонентом Group, принимающим общий макет. Для получения аналогичного варианта поведения нового компонента Group установите для свойства <codeph>layout</codeph> значение <codeph>TileLayout</codeph> или используйте контейнер TileGroup.
 </description>
	</Alternative><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:Tile" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали.
 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.containers:Tile" playerVersion="Flash9" type="String">
<description>
  Вертикальное выравнивание каждого нижестоящего элемента внутри ячейки. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>. Если значение равно <codeph>top</codeph>, верхний край каждого нижестоящего элемента совпадает с верхним краем его ячейки. Если значение равно <codeph>middle</codeph>, каждый нижестоящий элемент выровнен в ячейке вертикально по центру. Если значение равно <codeph>bottom</codeph>, нижний край каждого нижестоящего элемента совпадает с нижним краем его ячейки.
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:Tile" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и его областью содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:Tile" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и его областью содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:Tile" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали.
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.containers:Tile" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание каждого нижестоящего элемента внутри ячейки. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>. Если значение равно <codeph>left</codeph>, левый край каждого нижестоящего элемента совпадает с левым краем его ячейки. Если значение равно <codeph>center</codeph>, каждый нижестоящий элемент выровнен горизонтально по центру ячейки. Если значение равно <codeph>right</codeph>, правый край каждого нижестоящего элемента совпадает с правым краем его ячейки.
 
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Tile&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Tile
    <b>Properties</b>
    direction="horizontal|vertical"
    tileHeight="NaN"
    tileWidth="NaN"
 
    <b>Sttles</b>
    horizontalAlign="left|center|right"
    horizontalGap="8"
    paddingBottom="0"
    paddingTop="0"
    verticalAlign="top|middle|bottom"
    verticalGap="6"
    &gt;
      ...
      <i>child tags</i>
     ...
  &lt;/mx:Tile&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  В контейнере Halo Tile нижестоящие элементы расположены в сетке из равных по размеру ячеек. Размер ячеек можно указать с помощью свойств <codeph>tileWidth</codeph> и <codeph>tileHeight</codeph>, либо разрешить контейнеру Tile определять размер ячейки на основе размера наибольшего нижестоящего элемента. Свойство <codeph>direction</codeph> контейнера Tile определяет, как располагаются ячейки: горизонтально или вертикально, начиная с верхнего левого угла контейнера Tile.
 
  <p><b>Примечание.</b> Adobe рекомендует по возможности использовать с TileLayout контейнеры Spark, а не контейнер Halo Tile.</p>
 
  <p>Контейнер Tile имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Направление</entry>
           <entry>горизонтально</entry>
        </row><row>
           <entry>Размер по умолчанию всех ячеек</entry>
           <entry>Высота соответствует высоте по умолчанию или явной высоте наиболее высокого нижестоящего элемента. Ширина соответствует ширине по умолчанию или явной ширине наиболее широкого нижестоящего элемента. Все ячейки имеют одинаковый размер по умолчанию.</entry>
        </row><row>
           <entry>Размер по умолчанию контейнера Tile</entry>
           <entry>Flex вычисляет квадратный корень из числа нижестоящих элементов и округляет его до ближайшего целого числа. Например, имеется 26 нижестоящих элементов, квадратный корень равен 5,1, округляется до 6. После вычисления Flex располагает контейнер Tile в сетке размером 6 на 6. Высота по умолчанию контейнера Tile (высота ячейки по умолчанию) равна сумме <b>x</b> (округленный квадратный корень числа нижестоящих элементов), любых промежутков между нижестоящими элементами и всех значений заполнения. Ширина по умолчанию (ширина ячейки по умолчанию) равна сумме <b>x</b> (округленный квадратный корень числа нижестоящих элементов), любых промежутков между нижестоящими элементами и всех значений заполнения.</entry>
        </row><row>
           <entry>Минимальный размер контейнера Tile</entry>
           <entry>Размер по умолчанию одной ячейки. Flex всегда выделяет достаточно места для отображения, по крайней мере, одной ячейки.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TileLayoutExample.mxml"><swfblock conref="examples/TileLayoutExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.Container.xml"><linktext>mx.components.Container</linktext></link></related-links><apiConstructor id="mx.containers:Tile:Tile"><apiName>Tile</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Tile:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет минимальный и максимальный размеры по умолчанию для контейнера Tile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет минимальный и максимальный размеры по умолчанию для контейнера Tile. Для получения дополнительной информации о методе <codeph>measure()</codeph> см. описание метода <codeph>UIComponent.measure()</codeph>.
      
      <p>Этот метод сначала вычисляет размер каждой ячейки. Для получения описания способа определения размера ячейки см. описание свойств <codeph>tileWidth</codeph> и <codeph>tileHeight</codeph>.</p>
      
     <p>Измеренный размер контейнера Tile с нижестоящими элементами достаточен для отображения ячейки в сетке размером N на N с равным количеством строк и столбцов, пространства для заполнения и границ контейнера Tile. Однако возможны различные особые случаи, как показано в следующих примерах:</p>
     
      <ul>
      <li>Если горизонтальный контейнер Tile имеет явную ширину, то это значение определяет число ячеек, которые можно расположить по горизонтали. Высота, необходимая для включения всех нижестоящих элементов, вычисляется путем построения сетки M на N.</li>
     
      <li>Если вертикальный контейнер Tile имеет явную высоту, то это значение определяет число ячеек, которые можно разместить по вертикали. Ширина, необходимая для включения всех нижестоящих элементов, вычисляется путем построения сетки N на M.</li>
      </ul>
     
      <p>При отсутствии нижестоящих элементов измеренный размер достаточен только для отображения заполнения и границ.</p>
      
      <p>Минимальный измеренный размер контейнера Tile с нижестоящими элементами достаточен для отображения одной ячейки, заполнения и границ. При отсутствии нижестоящих элементов минимальный измеренный размер достаточен только для заполнения и границ.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.containers:Tile:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Устанавливает позиции и размеры нижестоящих элементов этого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.   
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает позиции и размеры нижестоящих элементов этого контейнера. Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>.
      
      <p>Этот метод располагает нижестоящие элементы в шахматном порядке в сетке с ячейками равного размера в области содержимого контейнера Tile (т. е. в области внутри ее заполнения). Для получения описания способа определения размера ячейки см. описание свойств <codeph>tileWidth</codeph> и <codeph>tileHeight</codeph>.</p>
      
      <p>Разделение между ячейками определяется стилями <codeph>horizontalGap</codeph> и <codeph>verticalGap</codeph>. Размещение каждого нижестоящего элемента в ячейке определяется стилями <codeph>horizontalAlign</codeph> и <codeph>verticalAlign</codeph>.</p>
      
      <p>Поток нижестоящих элементов определяется значением свойства <codeph>direction</codeph>. Первая ячейка всегда помещается в верхней левой части области содержимого. Если для свойства <codeph>direction</codeph> установлено значение <codeph>horizontal</codeph>, ячейки помещаются слева направо в самой верхней строке, затем слева направо во второй строке сверху и т. д. Если для свойства <codeph>direction</codeph> установлено значение <codeph>vertical</codeph>, ячейки помещаются сверху вниз в крайнем левом столбце, затем сверху вниз во втором столбце слева и т. д.</p>
      
      <p>Если для нижестоящего элемента определено значение <codeph>percentWidth</codeph> или <codeph>percentHeight</codeph>, он изменяется в указанном направлении для заполнения определенного процента от объема ячейки.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.containers:Tile:direction:get"><apiName>direction</apiName><shortdesc>
      Определяет способ размещения нижестоящих элементов в контейнере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="directionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"horizontal"
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет способ размещения нижестоящих элементов в контейнере. Возможными значениями MXML являются <codeph>horizontal</codeph> и <codeph>vertical</codeph>. В ActionScript направление устанавливается с помощью значения TileDirection.HORIZONTAL или TileDirection.VERTICAL. Значением по умолчанию является <codeph>horizontal</codeph>. (Если контейнер является контейнером Legend, который представляет собой подкласс Tile, в качестве значения по умолчанию используется <codeph>vertical</codeph>.)
     
      <p>Первый нижестоящий элемент всегда помещается в верхнем левом углу контейнера Tile. Если для свойства <codeph>direction</codeph> установлено значение <codeph>horizontal</codeph>, нижестоящие элементы помещаются слева направо в самой верхней строке, затем слева направо во второй сверху строке и т. д. Если установлено значение <codeph>vertical</codeph>, нижестоящие элементы помещаются сверху вниз в крайнем левом столбце, затем сверху вниз во втором слева столбце и т. д.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.containers.xml#TileDirection"><linktext>TileDirection</linktext></link></related-links></apiValue><apiValue id="mx.containers:Tile:tileHeight:get"><apiName>tileHeight</apiName><shortdesc>
      Высота каждой ячейки мозаики в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="resize"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Высота каждой ячейки мозаики в пикселях. Если для этого свойства установлено значение <codeph>NaN</codeph>, то по умолчанию высота каждой ячейки определяется по высоте наиболее высокого нижестоящего элемента. Если значение для этого свойства установлено, указанное значение отменяет данное вычисление.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:Tile:tileWidth:get"><apiName>tileWidth</apiName><shortdesc>
      Ширина каждой ячейки мозаики в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="resize"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ширина каждой ячейки мозаики в пикселях. Если для этого свойства установлено значение <codeph>NaN</codeph>, то по умолчанию ширина каждой ячейки определяется по ширине наиболее широкого нижестоящего элемента. Если значение для этого свойства установлено, указанное значение отменяет данное вычисление.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:VDividedBox"><apiName>VDividedBox</apiName><shortdesc>
  Контейнер VDividedBox располагает нижестоящие элементы вертикально, аналогично способу расположения элементов в контейнере VBox, но при этом в промежуток между каждым нижестоящим элементом вставляет перетаскиваемый разделитель.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="direction"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VDividedBox&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except <code>direction</code>, and adds 
  no new tag attributes.</p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:DividedBox</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер VDividedBox располагает нижестоящие элементы вертикально, аналогично способу расположения элементов в контейнере VBox, но при этом в промежуток между каждым нижестоящим элементом вставляет перетаскиваемый разделитель. Пользователь может перетащить разделитель для изменения размеров области, выделенной для каждого нижестоящего элемента. Тег <codeph>&lt;mx:VDividedBox/></codeph> аналогичен тегу <codeph>&lt;mx:DividedBox direction="vertical"/></codeph>.
  
  <p>Контейнер VDividedBox имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Высота является достаточной для включения всех нижестоящих элементов с высотой по умолчанию или явной высотой, любых вертикальных промежутков между нижестоящими элементами, а также заполнения контейнера снизу и сверху. Ширина соответствует сумме ширины по умолчанию или явной ширины наиболее широкого нижестоящего элемента и заполнения справа и слева для контейнера.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row><row>
           <entry>Промежуток по умолчанию</entry>
           <entry>10 пикселей для горизонтальных и вертикальных промежутков.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="VDividedBoxExample.mxml"><swfblock conref="examples/VDividedBoxExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#DividedBox"><linktext>mx.containers.DividedBox</linktext></link><link href="mx.containers.xml#HDividedBox"><linktext>mx.containers.HDividedBox</linktext></link></related-links><apiConstructor id="mx.containers:VDividedBox:VDividedBox"><apiName>VDividedBox</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.containers:BoxDirection"><apiName>BoxDirection</apiName><shortdesc>
  Класс BoxDirection указывает значения констант для свойства direction контейнера Box.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс BoxDirection указывает значения констант для свойства <codeph>direction</codeph> контейнера Box.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#Box"><linktext>mx.containers.Box</linktext></link></related-links><apiValue id="mx.containers:BoxDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  Указывает, что нижестоящие элементы контейнера Box располагаются горизонтально.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что нижестоящие элементы контейнера Box располагаются горизонтально.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:BoxDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  Указывает, что нижестоящие элементы контейнера Box располагаются вертикально.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что нижестоящие элементы контейнера Box располагаются вертикально.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:Form"><apiName>Form</apiName><shortdesc>
  Контейнер Form позволяет осуществлять управление макетом формы, отмечать поля формы как обязательные или дополнительные, обрабатывать сообщения об ошибках и связывать данные формы с моделью данных Flex для выполнения проверки данных и проверки правильности.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:Form" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и верхним краем его области содержимого. Значением по умолчанию является 16.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:Form" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и нижним краем его области содержимого. Значением по умолчанию является 16.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="labelWidth" owner="mx.containers:Form" playerVersion="Flash9" type="Number">
<description>
  Ширина меток формы. Значение по умолчанию соответствует длине наиболее длинной метки в форме.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="indicatorGap" owner="mx.containers:Form" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между меткой и нижестоящими компонентами. Значением по умолчанию является 14.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:Form" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:Form" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Form&gt;</code> tag inherits all the tag 
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Form
    <strong>Styles</strong>
    horizontalGap="8"
    indicatorGap="14"
    labelWidth="<i>Calculated</i>"
    paddingBottom="16"
    paddingTop="16"
    verticalGap="6"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:Form&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер Form позволяет осуществлять управление макетом формы, отмечать поля формы как обязательные или дополнительные, обрабатывать сообщения об ошибках и связывать данные формы с моделью данных Flex для выполнения проверки данных и проверки правильности. Кроме того, для конфигурирования внешнего вида форм можно использовать таблицы стилей.
 
  <p>В таблице представлены компоненты, используемые для создания форм в Flex:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="3"><thead><row><entry>Компонент</entry><entry>Тег</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Форма</entry>
           <entry><codeph>&lt;mx:Form></codeph></entry>
           <entry>Определяет контейнер для всей формы, включая общий макет формы. Элемент управления FormHeading и контейнер FormItem используются для определения содержимого. В контейнер Form можно также вставить другие типы компонентов.</entry>
        </row><row>
           <entry>FormHeading</entry>
           <entry><codeph>&lt;mx:FormHeading></codeph></entry>
           <entry>Определяет заголовок в форме. В одном контейнере Form может находиться несколько элементов управления FormHeading.</entry>
        </row><row>
           <entry>FormItem</entry>
           <entry><codeph>&lt;mx:FormItem></codeph></entry>
           <entry>Содержит один или несколько нижестоящих элементов формы, расположенных по горизонтали или вертикали. Нижестоящие элементы могут являться элементами управления или другими контейнерами. Один контейнер Form может включать несколько контейнеров FormItem.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="FormExample.mxml"><swfblock conref="examples/FormExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#FormHeading"><linktext>mx.containers.FormHeading</linktext></link><link href="mx.containers.xml#FormItem"><linktext>mx.containers.FormItem</linktext></link></related-links><apiConstructor id="mx.containers:Form:Form"><apiName>Form</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Form:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет предпочтительный, минимальный и максимальный размер контейнера Form.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет предпочтительный, минимальный и максимальный размер контейнера Form. Для получения дополнительной информации о методе <codeph>measure</codeph> см. описание метода <codeph>UIComponent.measure()</codeph>.
      <p>Метод <codeph>Form.measure()</codeph> устанавливает для свойства <codeph>measuredWidth</codeph> значение, равное сумме ширины наибольшего нижестоящего элемента, значения свойств стиля <codeph>paddingLeft</codeph> и <codeph>paddingRight</codeph>, и ширины границы.</p>
     
      <p>Значение свойства <codeph>measuredHeight</codeph> соответствует сумме значений <codeph>measuredHeight</codeph> всех нижестоящих элементов и пробела <codeph>verticalGap</codeph> между каждым нижестоящим элементом. Кроме того, добавляются свойства стиля <codeph>paddingTop</codeph> и <codeph>paddingBottom</codeph>, а также высота границы.</p>
     
      <p>В качестве значения для свойства <codeph>measuredMinWidth</codeph> устанавливается наибольшая минимальная ширина нижестоящих элементов. Если значение свойства <codeph>width</codeph> для нижестоящего элемента выражено в процентах, то используется свойство <codeph>minWidth</codeph>, в противном случае используется свойство <codeph>measuredWidth</codeph>. Кроме того, добавляются значения свойств стиля <codeph>paddingLeft</codeph> и <codeph>paddingRight</codeph>, а также ширина границы.</p>
     
      <p>Для свойства <codeph>measuredMinHeight</codeph> устанавливается то же значение, что и для свойства <codeph>measuredHeight</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Form:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Реагирует на изменение размеров посредством установки позиций и размеров нижестоящих элементов данного контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.   
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реагирует на изменение размеров посредством установки позиций и размеров нижестоящих элементов данного контейнера. Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>. 
     
      <p>Метод <codeph>Form.updateDisplayList()</codeph> располагает нижестоящие элементы в вертикальном столбце с разделением свойством стиля <codeph>verticalGap</codeph>. Применяются свойства стиля <codeph>paddingLeft</codeph>, <codeph>paddingRight</codeph>, <codeph>paddingTop</codeph> и <codeph>paddingBottom</codeph>.</p>
     
      <p>Если ширина нижестоящего элемента выражена в процентах, он растягивается горизонтально в пределах контейнера Form, в соответствии с указанным процентным значением; в противном случае ширина устанавливается в соответствии со свойством <codeph>measuredWidth</codeph>. Для каждого нижестоящего элемента устанавливается свое значение свойства <codeph>measuredHeight</codeph>.</p>
     
      <p>Перед выполнением дополнительных операций этот метод вызывает метод <codeph>super.updateDisplayList()</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:Form:maxLabelWidth:get"><apiName>maxLabelWidth</apiName><shortdesc>
      Максимальная ширина в пикселях меток контейнеров FormItems в одном контейнере Form.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="updateComplete"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Максимальная ширина в пикселях меток контейнеров FormItems в одном контейнере Form.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:ViewStack"><apiName>ViewStack</apiName><shortdesc>
  Контейнер навигатора MX ViewStack состоит из коллекции нижестоящих контейнеров, помещенных в стек в верхней части друг друга. При этом в каждый конкретный момент видимым является только один нижестоящий элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="scroll"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="defaultButton"/><Exclude kind="property" name="autoLayout"/><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:ViewStack" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и его областью содержимого. Значением по умолчанию является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:ViewStack" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и его областью содержимого. Значением по умолчанию является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:ViewStack" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:ViewStack" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ViewStack&gt;</code> tag inherits the
  tag attributes of its superclass, with the exception of scrolling-related
  attributes, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ViewStack
    <b>Properties</b>
    historyManagementEnabled="false|true"
    resizeToContent="false|true"
    selectedIndex="0"
    
    <b>Styles</b>
    horizontalGap="8"
    paddingBottom="0"
    paddingTop="0"
    verticalGap="6"
    
    <b>Events</b>
    change="<i>No default</i>"
    &gt;
      ...
      <i>child tags</i>
      ...
  &lt;/mx:ViewStack&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IHistoryManagerClient</apiBaseInterface><apiBaseInterface>mx.core:ISelectableList</apiBaseInterface><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер навигатора MX ViewStack состоит из коллекции нижестоящих контейнеров, помещенных в стек в верхней части друг друга. При этом в каждый конкретный момент видимым является только один нижестоящий элемент. При выборе другого нижестоящего контейнера он зрительно заменяет предыдущий контейнер, поскольку отображается в том же местоположении. При этом предыдущий нижестоящий контейнер по-прежнему существует; просто перестает быть видимым.
 
  <p><b>Примечание.</b> Прямые нижестоящие элементы контейнера навигатора MX должны быть контейнерами MX (контейнерами макета MX или навигатора MX) или контейнером Spark NavigatorContent. В навигатор невозможно вложить элемент управления или контейнер Spark, не являющийся контейнером Spark NavigatorContent, напрямую. Вложения должны быть нижестоящими элементами нижестоящего контейнера MX.</p>
 
  <p>Контейнер ViewStack не предоставляет пользовательский интерфейс для выбора видимого в данный момент нижестоящего контейнера. Как правило, в ActionScript в ответ на определенное действие пользователя устанавливается значение для свойства <codeph>selectedIndex</codeph> или <codeph>selectedChild</codeph>. Также для предоставления интерфейса навигации можно связаться с элементом управления MX LinkBar, TabBar, ButtonBar, ToggleButtonBar или с элементом управления Spark ButtonBar с контейнером ViewStack. Для этого укажите контейнер ViewStack в качестве значения для свойства <codeph>dataProvider</codeph> контейнера LinkBar, TabBar или ToggleButtonBar.</p>
 
  <p>Можно использовать более сложный контейнер навигатора, чем контейнер ViewStack, например, контейнер TabNavigator или Accordion. Помимо коллекции нижестоящих контейнеров эти контейнеры предоставляют собственные элементы управления пользовательского интерфейса для перемещения между нижестоящими элементами.</p>
 
  <p>При изменении видимого в данный момент нижестоящего контейнера можно использовать свойство <codeph>hideEffect</codeph> скрытого контейнера и свойство <codeph>showEffect</codeph> последнего отображенного нижестоящего контейнера для применения эффекта в нижестоящих контейнерах. Перед отображением нового нижестоящего контейнера контейнер ViewStack ожидает скрытия нижестоящего контейнера <codeph>hideEffect</codeph>. Воспроизводимый в данный момент эффект можно прервать путем изменения значения для свойства <codeph>selectedIndex</codeph> контейнера ViewStack во время воспроизведения эффекта.</p>
 
  <p>Контейнер ViewStack имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина и высота начального активного нижестоящего элемента.</entry>
        </row><row>
           <entry>Правила изменения размеров контейнеров</entry>
           <entry>По умолчанию размер контейнеров ViewStack устанавливается только один раз в соответствии с размером первого нижестоящего контейнера. Он не изменяется при перемещении к другим нижестоящим контейнерам. Для принудительного изменения размера контейнера ViewStack при переходе к другому нижестоящему контейнеру установите для свойства resizeToContent значение true.</entry>
        </row><row>
           <entry>Правила установки размеров нижестоящих элементов</entry>
           <entry>Размер нижестоящего элемента устанавливается в соответствии с размером по умолчанию. Если размер нижестоящего элемента превышает размер контейнера ViewStack, нижестоящий элемент отсекается. Если размер нижестоящего элемента меньше размера контейнера ViewStack, нижестоящий элемент выравнивается по верхнему левому углу контейнера ViewStack.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, слева и справа.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ViewStackExample.mxml"><swfblock conref="examples/ViewStackExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link><link href="mx.controls.xml#TabBar"><linktext>mx.controls.TabBar</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="" invalidHref="spark.components.ButtonBar.xml"><linktext>spark.components.ButtonBar</linktext></link><link href="mx.managers.xml#HistoryManager"><linktext>mx.managers.HistoryManager</linktext></link><link href="mx.managers.xml#LayoutManager"><linktext>mx.managers.LayoutManager</linktext></link></related-links><adobeApiEvent id="mx.containers:ViewStack_mx.events.IndexChangedEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении выбранного нижестоящего контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.IndexChangedEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.IndexChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении выбранного нижестоящего контейнера.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.containers:ViewStack:ViewStack"><apiName>ViewStack</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:ViewStack:protected:commitSelectedIndex"><apiName>commitSelectedIndex</apiName><shortdesc>
      Передает выбранный индекс.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
      Передает выбранный индекс. Эта функция вызывается в течение фазы передачи свойств при изменении свойства selectedIndex (или selectedItem).
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:ViewStack:loadState"><apiName>loadState</apiName><shortdesc conref="mx.managers.IHistoryManagerClient#loadState()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>state</apiItemName><apiType value="Object"/><apiDesc>Состояние объекта, который требуется загрузить. При загрузке начального состояния приложения значение будет равно null.
	 
	  </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.managers.IHistoryManagerClient#loadState()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:ViewStack:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет размеры по умолчанию, а также минимальное и максимальное значения контейнера ViewStack.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет размеры по умолчанию, а также минимальное и максимальное значения контейнера ViewStack. Для получения дополнительной информации о методе <codeph>measure()</codeph> см. описание метода <codeph>UIComponent.measure()</codeph>.
     
      <p>Размер по умолчанию контейнера ViewStack совпадает с размером по умолчанию выбранного в настоящий момент нижестоящего элемента, а также заполнения и границ. Если контейнер ViewStack не имеет нижестоящих элементов, его размер по умолчанию достаточен для включения только заполнения и границ.</p>
     
      <p>Минимальный размер контейнера ViewStack совпадает с минимальным размером выбранного в настоящий момент нижестоящего элемента, а также заполнения и границ. Если контейнер ViewStack не имеет нижестоящих элементов, его минимальный размер достаточен для включения только заполнения и границ.</p>
     
      <p>Этот метод не изменяет максимальный размер контейнера ViewStack, он остается неограниченным.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.containers:ViewStack:saveState"><apiName>saveState</apiName><shortdesc conref="mx.managers.IHistoryManagerClient#saveState()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>Состояние этого объекта.
	  
	  </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.managers.IHistoryManagerClient#saveState()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:ViewStack:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Реагирует на изменение размеров посредством установки позиций и размеров нижестоящих элементов данного контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реагирует на изменение размеров посредством установки позиций и размеров нижестоящих элементов данного контейнера. Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>.
     
      <p>Только один из нижестоящих элементов является видимым в конкретный момент, поэтому контейнер ViewStack определяет позицию и размер только для этого нижестоящего элемента.</p>
     
      <p>Выбранный нижестоящий элемент размещается в верхнем левом углу контейнера ViewStack, позволяя также разместить заполнение и границы контейнера ViewStack. </p>
     
      <p>Если выбранный нижестоящий элемент имеет процентное значение для свойств <codeph>width</codeph> или <codeph>height</codeph>, его размеры изменяются в соответствующем направлении для заполнения указанного объема области содержимого контейнера ViewStack (т. е. области внутри заполнения).</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.containers:ViewStack:protected:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      Высота области, в которой отображается содержимое, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота области, в которой отображается содержимое, в пикселях. Этот получатель можно отменить, если содержимое не занимает всю область контейнера ViewStack.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:ViewStack:protected:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      Ширина области, в которой отображается содержимое, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина области, в которой отображается содержимое, в пикселях. Этот получатель можно отменить, если содержимое не занимает всю область контейнера ViewStack.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:ViewStack:protected:contentX:get"><apiName>contentX</apiName><shortdesc>
      Координата x области контейнера ViewStack, в которой отображается содержимое, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Координата x области контейнера ViewStack, в которой отображается содержимое, в пикселях. Значение по умолчанию совпадает со значением свойства стиля <codeph>paddingLeft</codeph>, значение по умолчанию для которого равно 0. Если макет содержимого должен начинаться в точке x = 0, отмените метод <codeph>get()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:ViewStack:protected:contentY:get"><apiName>contentY</apiName><shortdesc>
      Координата y области контейнера ViewStack, в которой отображается содержимое, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Координата y области контейнера ViewStack, в которой отображается содержимое, в пикселях. Значение по умолчанию совпадает со значением свойства стиля <codeph>paddingTop</codeph>, значение по умолчанию для которого равно 0. Если макет содержимого должен начинаться в точке y = 0, отмените метод <codeph>get()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:ViewStack:historyManagementEnabled:get"><apiName>historyManagementEnabled</apiName><shortdesc>
      Если значение равно true, управление историей в данном контейнере ViewStack активируется.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, управление историей в данном контейнере ViewStack активируется. При переходе пользователем от одного нижестоящего элемента к другому браузер запоминает посещенные нижестоящие элементы. Пользователь может осуществлять навигацию, учитывающую данную историю, с помощью кнопок браузера «Назад» и «Вперед».
     
      </apiDesc></apiValueDetail><related-links><link href="mx.managers.xml#HistoryManager"><linktext>mx.managers.HistoryManager</linktext></link></related-links></apiValue><apiValue id="mx.containers:ViewStack:resizeToContent:get"><apiName>resizeToContent</apiName><shortdesc>
      Если значение равно true, контейнер ViewStack автоматически изменяет свой размер на размер текущего нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, контейнер ViewStack автоматически изменяет свой размер на размер текущего нижестоящего элемента.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:ViewStack:selectedChild:get"><apiName>selectedChild</apiName><shortdesc>
      Ссылка на видимый в данный момент нижестоящий контейнер.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="creationComplete"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:INavigatorContent</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на видимый в данный момент нижестоящий контейнер. Значением по умолчанию является ссылка на первый нижестоящий элемент. При отсутствии нижестоящих элементов для этого свойства устанавливается значение <codeph>null</codeph>.
     
      <p><b>Примечание.</b> Значение для этого свойства можно установить только в операторе ActionScript, не в MXML.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:ViewStack:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс для видимого в настоящий момент нижестоящего контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="creationComplete"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс для видимого в настоящий момент нижестоящего контейнера. Индексы нижестоящих элементов находятся в диапазоне 0, 1, 2 ..., n - 1, где <i>n</i> является количеством нижестоящих элементов. Значением по умолчанию является 0, что соответствует первому нижестоящему элементу. При отсутствии нижестоящих элементов это свойство имеет значение <codeph>-1</codeph>.
     
      <p><b>Примечание.</b> При добавлении нового нижестоящего элемента к контейнеру ViewStack свойство <codeph>selectedIndex</codeph> при необходимости автоматически регулируется. При этом нижестоящий элемент остается выбранным.</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:GridRow"><apiName>GridRow</apiName><shortdesc>
  Контейнер GridRow определяет строку в контейнере Grid и содержит контейнеры GridCell.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="moveEffect"/><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="verticalGap"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="horizontalGap"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="scroll"/><Exclude kind="event" name="move"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="method" name="setFocus"/><Exclude kind="method" name="isOurFocus"/><Exclude kind="method" name="getFocus"/><Exclude kind="method" name="adjustFocusRect"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusManager"/><Exclude kind="property" name="focusEnabled"/><Exclude kind="property" name="direction"/><Exclude kind="property" name="clipContent"/><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.containers:GridRow" playerVersion="Flash9" type="String">
<description>
  Вертикальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>. Значением по умолчанию является <codeph>top</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.containers:GridRow" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>. Значение по умолчанию: <codeph>left</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:GridRow&gt;</code> must be a child of the 
  <code>&lt;mx:Grid&gt;</code> tag, and has one or more child 
  <code>&lt;mx:GridItem&gt;</code> tags that define the grid cells.</p>
 
  <p>The <code>&lt;mx:GridRow&gt;</code> container inherits the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Grid&gt;
    &lt;mx:GridRow
    <strong>Styles</strong>
      horizontalAlign="left|center|right"
      verticalAlign="top|middle|bottom"
    &gt;
      &lt;mx:GridItem
        <i>child components</i>
      &lt;/mx:GridItem&gt;
      ...
    &lt;/mx:GridRow&gt;
    ...
  &lt;/mx:Grid&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:HBox</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер GridRow определяет строку в контейнере Grid и содержит контейнеры GridCell.
 
  <p>Контейнеры GridRow имеют следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Высота каждой строки и каждой ячейки.</entry>
           <entry>Высота по умолчанию или явная высота наиболее высокого элемента в строке. Если контейнер GridItem не имеет явного размера, его высота по умолчанию соответствует высоте по умолчанию или явной высоте нижестоящего элемента в ячейке.</entry>
        </row><row>
           <entry>Ширина каждого столбца и каждой ячейки.</entry>
           <entry>Ширина по умолчанию или явная ширина по умолчанию наиболее широкого элемента в столбце. Если контейнер GridItem не имеет явной ширины, ширина по умолчанию соответствует ширине по умолчанию или явной ширине нижестоящего элемента в ячейке.</entry>
        </row><row>
           <entry>Промежуток между строками и столбцами.</entry>
           <entry>Определяется свойствами horizontalGap и verticalGap класса Grid. Значением по умолчанию для обоих промежутков является 6 пикселей.</entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений верхнего, нижнего, правого и левого края всех трех контейнерных классов.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="GridLayoutExample.mxml"><swfblock conref="examples/GridLayoutExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#Grid"><linktext>mx.containers.Grid</linktext></link><link href="mx.containers.xml#GridItem"><linktext>mx.containers.GridItem</linktext></link></related-links><apiConstructor id="mx.containers:GridRow:GridRow"><apiName>GridRow</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:GridRow:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Устанавливает размер и позицию для каждого нижестоящего элемента контейнера GridRow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.   
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает размер и позицию для каждого нижестоящего элемента контейнера GridRow. Для получения дополнительной информации об алгоритме создания макетов Grid см. описание метода <xref href="Grid.html#updateDisplayList()">Grid.updateDisplayList()</xref>.
     
      <p>Вызов этого метода напрямую не выполняется. Он вызывается в соответствующий момент посредством Flex LayoutManager. При запуске приложения Flex LayoutManager выполняет вызов метода <codeph>updateDisplayList()</codeph> в каждом компоненте, начиная с корня и далее в нисходящем направлении.</p>
     
      <p>Этот расширенный метод рекомендуется использовать при обработке подклассов. При отмене этого метода реализация должна выполнить вызов методов <codeph>super.updateDisplayList()</codeph>, <codeph>move()</codeph> и <codeph>setActualSize()</codeph> в каждом нижестоящем элементе. При создании макета необходимо получить размер этого контейнера на основе значений свойств <codeph>unscaledWidth</codeph> и <codeph>unscaledHeight</codeph>, а не свойств <codeph>width</codeph> и <codeph>height</codeph>. Свойства <codeph>width</codeph> и <codeph>height</codeph> не учитывают значения свойств <codeph>scaleX</codeph> и <codeph>scaleY</codeph> для этого контейнера.</p>
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.containers:FormItem"><apiName>FormItem</apiName><shortdesc>
  Контейнер FormItem определяет метку, а также один или несколько нижестоящих элементов, размещаемых горизонтально или вертикально.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и верхним краем его области содержимого.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей контейнера и правым краем его области содержимого.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и нижним краем его области содержимого.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="labelWidth" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Ширина меток формы. Значение по умолчанию соответствует длине наиболее длинной метки в форме.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="labelStyleName" owner="mx.containers:FormItem" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS для стилей метки FormItem. По умолчанию метка использует наследуемые стили FormItem или стили, объявленные FormItemLabel. Этот стиль следует использовать вместо FormItemLabel.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indicatorSkin" owner="mx.containers:FormItem" playerVersion="Flash9" type="Class">
<description>
  Указывает тему оформления для индикатора обязательного поля. Значением по умолчанию является символ mx.containers.FormItem.Required в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="indicatorGap" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между меткой и нижестоящими компонентами элемента формы.
 
  </description>
<default>14
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.containers:FormItem" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:FormItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FormItem&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except <code>paddingLeft</code>,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FormItem
    <strong>Properties</strong>
    direction="vertical|horizontal"
    label=""
    required="false|true"
  
    <strong>Styles</strong>
    horizontalAlign="left|center|right"
    horizontalGap="8"
    indicatorGap="14"
    indicatorSkin="<i>'mx.containers.FormItem.Required' symbol in Assets.swf</i>"
    labelStyleName=""
    labelWidth="<i>Calculated</i>"
    paddingBottom="0"
    paddingRight="0"
    paddingTop="0"
    verticalGap="6"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:FormItem&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер FormItem определяет метку, а также один или несколько нижестоящих элементов, размещаемых горизонтально или вертикально. Нижестоящие элементы могут являться элементами управления или другими контейнерами. Один контейнер Form может включать несколько контейнеров FormItem.
 
  </apiDesc><example conref="FormExample.mxml"><swfblock conref="examples/FormExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#Form"><linktext>mx.containers.Form</linktext></link><link href="mx.containers.xml#FormItemDirection"><linktext>mx.containers.FormItemDirection</linktext></link><link href="mx.containers.xml#FormHeading"><linktext>mx.containers.FormHeading</linktext></link><link href="mx.controls.xml#FormItemLabel"><linktext>mx.controls.FormItemLabel</linktext></link></related-links><apiConstructor id="mx.containers:FormItem:FormItem"><apiName>FormItem</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:FormItem:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет предпочтительный, минимальный и максимальный размеры FormItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет предпочтительный, минимальный и максимальный размеры FormItem. Для получения дополнительной информации о методе <codeph>measure()</codeph> см. описание метода <codeph>UIComponent.measure()</codeph>.
     
      <p>Метод <codeph>FormItem.measure()</codeph> сначала определяет требуемое количество столбцов. Если для свойства <codeph>direction</codeph> установлено значение <codeph>FormItemDirection.HORIZONTAL</codeph>, все элементы управления будут по возможности помещены в одну строку. Если поместить все элементы управления в одну строку невозможно, они размещаются в двух столбцах. Если это оказывается неэффективным, используется один столбец. Если для свойства <codeph>direction</codeph> установлено значение <codeph>FormItemDirection.VERTICAL</codeph>, элементы управления помещаются в один столбец (как <codeph>VBox</codeph>).</p>
     
      <p>FormItem содержит две области: область метки и область управления. Размер метки всегда одинаков независимо от направления элементов управления. Размер области управления зависит от количества строк и столбцов.</p>
     
      <p>Ширина области метки определяется свойством стиля <codeph>labelWidth</codeph>. Если для этого свойства установлено значение <codeph>undefined</codeph> (по умолчанию), используется ширина наибольшей метки в вышестоящем контейнере Form.</p>
     
      <p>Если все нижестоящие элементы находятся в одной строке, ширина области управления определяется как сумма значений ширины всех нижестоящих элементов и пробела <codeph>horizontalGap</codeph> между этими элементами.</p>
     
      <p>Если нижестоящие элементы располагаются в одном столбце, ширина области управления определяется как ширина нижестоящего элемента с наибольшим значением ширины.</p>
     
      <p>Если нижестоящие элементы находятся в нескольких строках и столбцах, ширина самого широкого элемента будет соответствовать ширине столбца, а ширина области управления будет определяться как ширина столбца, умноженная на сумму количества столбцов и пробелов <codeph>horizontalGap</codeph> между каждым столбцом.</p>
     
      <p>Для <codeph>measuredWidth</codeph> устанавливается значение, равное сумме ширины области метки, ширины области управления и значения свойства стиля <codeph>indicatorGap</codeph>. Кроме того, добавляются значения свойств стиля <codeph>paddingLeft</codeph> и <codeph>paddingRight</codeph>, а также ширина границы.</p>
     
      <p>Для <codeph>measuredHeight</codeph> устанавливается значение, равное сумме предпочтительных высот всех строк нижестоящих элементов и пробела <codeph>verticalGap</codeph> между каждым нижестоящим элементом. Кроме того, добавляются свойства стиля <codeph>paddingTop</codeph> и <codeph>paddingBottom</codeph>, а также высота границы.</p>
     
      <p>Для <codeph>measuredMinWidth</codeph> устанавливается значение, равное сумме ширины области метки, минимальной ширины области управления и значения свойства стиля <codeph>indicatorGap</codeph>. Кроме того, добавляются значения свойств стиля <codeph>paddingLeft</codeph> и <codeph>paddingRight</codeph>, а также ширина границы.</p>
     
      <p>Для <codeph>measuredMinHeight</codeph> устанавливается значение, равное сумме минимальных высот всех строк нижестоящих элементов и пробела <codeph>verticalGap</codeph> между каждым из этих элементов. Кроме того, добавляются свойства стиля <codeph>paddingTop</codeph> и <codeph>paddingBottom</codeph>, а также высота границы.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:FormItem:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Реагирует на изменение размеров посредством установки позиций и размеров нижестоящих элементов данного контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.   
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реагирует на изменение размеров посредством установки позиций и размеров нижестоящих элементов данного контейнера. Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>.
     
      <p>Для получения дополнительной информации о способе размещения элементов управления FormItem см. описание метода <codeph>FormItem.measure()</codeph>.</p>
     
      <p>Метка выравнивается в области метки в соответствии со значением свойства стиля <codeph>textAlign</codeph>. Все метки в форме выровнены относительно друг друга.</p>
     
      <p>Если для свойства <codeph>required</codeph> установлено значение <codeph>true</codeph>, между меткой и элементами управления помещается символ, указывающий, что данное поле является обязательным.</p>
     
      <p>Элементы управления располагаются в столбцах, как описано в документации для метода <codeph>measure()</codeph>. Свойство стиля <codeph>horizontalAlign</codeph> определяет, требуется ли расположить элементы управления горизонтально.</p>
     
      <p>Если для свойства <codeph>direction</codeph> установлено значение <codeph>vertical</codeph>, любой нижестоящий элемент, для которого не определено значение <codeph>width</codeph>, использует значение <codeph>measuredWidth</codeph>, округленное до 1/4 ширины области управления. Целью этого является предотвращение образования неровного правого края у элементов управления.</p>
     
      <p>Перед выполнением дополнительных операций этот метод вызывает метод <codeph>super.updateDisplayList()</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:FormItem:direction:get"><apiName>direction</apiName><shortdesc>
      Направление подчиненных компонентов FormItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="directionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>FormItemDirection.VERTICAL
      </apiDefaultValue></apiValueDef><apiDesc>
      Направление подчиненных компонентов FormItem. Возможными значениями MXML являются <codeph>vertical</codeph> или <codeph>horizontal</codeph>. Значением MXML по умолчанию является <codeph>vertical</codeph>. Возможными значениями ActionScript являются <codeph>FormItemDirection.VERTICAL</codeph> или <codeph>FormItemDirection.HORIZONTAL</codeph>.
     
      <p>Если для свойства <codeph>direction</codeph> установлено значение <codeph>vertical</codeph>, нижестоящие элементы FormItem располагаются в стеке вертикально справа от метки FormItem. Если для свойства <codeph>direction</codeph> установлено значение <codeph>horizontal</codeph>, нижестоящие элементы помещаются в одну строку (по возможности) или в два столбца одинакового размера.</p>
     
      <p>Если в макете нижестоящих элементов FormItem требуется применить большее количество элементов управления, можно использовать контейнер, например, Grid или Tile в качестве прямого нижестоящего элемента FormItem для размещения в нем необходимых элементов управления.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.containers.xml#FormItemDirection"><linktext>mx.containers.FormItemDirection</linktext></link></related-links></apiValue><apiValue id="mx.containers:FormItem:itemLabel:get"><apiName>itemLabel</apiName><shortdesc>
      Доступная только для чтения ссылка на подчиненный компонент FormItemLabel, отображающий метку FormItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="itemLabelChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls:Label</apiValueClassifier></apiValueDef><apiDesc>
      Доступная только для чтения ссылка на подчиненный компонент FormItemLabel, отображающий метку FormItem.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:FormItem:label:get"><apiName>label</apiName><shortdesc>
      Текстовая метка для FormItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true" name="labelChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текстовая метка для FormItem. Эта метка отображается слева от нижестоящих компонентов элемента формы. Позиция метки определяется значением свойства стиля <codeph>textAlign</codeph>. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.containers:FormItem:required:get"><apiName>required</apiName><shortdesc>
      Если значение равно true, отображается индикатор, который указывает, что для нижестоящих элементов FormItem требуется ввод информации пользователем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="requiredChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, отображается индикатор, который указывает, что для нижестоящих элементов FormItem требуется ввод информации пользователем. Если значение равно <codeph>false</codeph>, индикатор не отображается.
     
      <p>Это свойство управляет только отображением данного индикатора. Если требуется выполнять проверку правильности введенных данных, необходимо добавить к нижестоящим элементам соответствующее средство проверки.</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.containers:Box"><apiName>Box</apiName><shortdesc>
  Контейнер Halo Box располагает нижестоящие элементы в одном вертикальном столбце или одной горизонтальной строке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Alternative owner="mx.containers:Box" replacement="spark.components.BorderContainer" since="4.0">
	</Alternative><Alternative owner="mx.containers:Box" replacement="spark.components.VGroup" since="4.0">
	</Alternative><Alternative owner="mx.containers:Box" replacement="spark.components.HGroup" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.containers:Box" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и верхним краем его области содержимого. Значением по умолчанию является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.containers:Box" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и нижним краем его области содержимого. Значением по умолчанию является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.containers:Box" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.containers:Box" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.containers:Box" playerVersion="Flash9" type="String">
<description>
  Вертикальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>. Значением по умолчанию является <codeph>top</codeph>, но некоторые контейнеры, например, ButtonBar, ControlBar, LinkBar и ToggleButtonBar имеют другие значения по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.containers:Box" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание нижестоящих элементов в контейнере. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>. Значением по умолчанию является <codeph>left</codeph>, но некоторые контейнеры, например, ButtonBar и ToggleButtonBar имеют другие значения по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Box&gt;</code> tag inherits all of the tag 
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <p>
  <pre>
  &lt;mx:Box
    <strong>Properties</strong>
    direction="vertical|horizontal"
    <strong>Styles</strong>
    horizontalAlign="left|center|right"
    horizontalGap="8"
    paddingBottom="0"
    paddingTop="0"
    verticalAlign="top|middle|bottom"
    verticalGap="6"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:Box&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:Container</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер Halo Box располагает нижестоящие элементы в одном вертикальном столбце или одной горизонтальной строке. Свойство <codeph>direction</codeph> определяет, требуется ли использовать вертикальный (по умолчанию) или горизонтальный макет.
 
  <p><b>Примечание.</b> Adobe рекомендует по возможности использовать с HorizontalLayout или VerticalLayout контейнеры Spark, а не Halo Box.</p>
 
  <p>Класс Box является базовым для классов VBox и HBox. Для определения контейнеров Box используются теги <codeph>&lt;mx:Box></codeph>, <codeph>&lt;mx:VBox></codeph> и <codeph>&lt;mx:HBox></codeph>.</p>
 
  <p>Контейнер Box имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry><b>Вертикальное поле</b> Высота является достаточной для включения всех нижестоящих элементов с высотой по умолчанию или с явной высотой, любого вертикального промежутка между нижестоящими элементами, а также для заполнения сверху и снизу для контейнера. Ширина соответствует сумме ширины по умолчанию или явной ширины наиболее широкого нижестоящего элемента и заполнения контейнера слева и справа. <b>Горизонтальное поле</b> Ширина является достаточной для включения всех нижестоящих элементов с шириной по умолчанию, любого горизонтального промежутка между нижестоящими элементами, а также для заполнение слева и справа для контейнера. Высота соответствует сумме высоты по умолчанию или явной высоты наиболее высокого нижестоящего элемента и заполнения для контейнера сверху и снизу.
           </entry>
        </row><row>
           <entry>Заполнение по умолчанию</entry>
           <entry>0 пикселей для значений заполнения сверху, снизу, справа и слева.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleBoxExample.mxml"><swfblock conref="examples/SimpleBoxExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.Container.xml"><linktext>mx.components.Container</linktext></link><link href="mx.containers.xml#HBox"><linktext>mx.containers.HBox</linktext></link><link href="mx.containers.xml#VBox"><linktext>mx.containers.VBox</linktext></link></related-links><apiConstructor id="mx.containers:Box:Box"><apiName>Box</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.containers:Box:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет размеры по умолчанию, а также минимальное и максимальное значения контейнера Box.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет размеры по умолчанию, а также минимальное и максимальное значения контейнера Box.
     
      <p>Если для свойства <codeph>direction</codeph> контейнера Box установлено значение <codeph>BoxDirection.HORIZONTAL</codeph>, значение свойства <codeph>measuredWidth</codeph> соответствует сумме значений ширины по умолчанию всех нижестоящих элементов, толщины границ, заполнения слева и справа, а также горизонтального промежутка между каждым нижестоящим элементом. Значение свойства <codeph>measuredHeight</codeph> соответствует сумме максимальной высоты всех значений по умолчанию для нижестоящих элементов и пространства для границ и заполнения. Если для свойства <codeph>direction</codeph> контейнера Box установлено значение <codeph>BoxDirection.VERTICAL</codeph>, эти два значения отменяются.</p>
     
      <p>Свойства <codeph>minWidth</codeph> и <codeph>minHeight</codeph> контейнера Box вычисляются аналогично путем сложения минимальных значений высоты и ширины для нижестоящих элементов. Если для нижестоящего элемента значение свойства <codeph>width</codeph> выражено в процентах, минимальная ширина контейнера Box будет равна значению свойства <codeph>minWidth</codeph> для этого нижестоящего элемента. Если значение для свойства <codeph>width</codeph> нижестоящего элемента не установлено, либо является фиксированным, нижестоящий элемент не будет растягиваться или сжиматься. Поэтому минимальная ширина контейнера Box будет равна значению свойства <codeph>explicitWidth</codeph> для этого нижестоящего элемента. Минимальная высота нижестоящего элемента вычисляется аналогично.</p>
     
      <p>Значения свойств <codeph>maxWidth</codeph> и <codeph>maxHeight</codeph> контейнера Box не вычисляются. Предполагается, что максимальная высота и ширина контейнера Box являются бесконечными величинами.</p>
     
      <p>Все описанные выше значения являются <i>измеренными</i> значениями ширины и высоты контейнера Box. Пользователь может отменить измеренные значения путем явного ввода значений для следующих свойств:</p>
     
      <ul>
        <li><codeph>ширина</codeph></li>
        <li><codeph>высота</codeph></li>
        <li><codeph>minWidth</codeph></li>
        <li><codeph>minHeight</codeph></li>
        <li><codeph>maxWidth</codeph></li>
        <li><codeph>maxHeight</codeph></li>
      </ul>
     
      <p>Выполнять вызов метода <codeph>measure()</codeph> напрямую не требуется. Он вызывается в соответствующий момент посредством Flex LayoutManager. При запуске приложения Flex LayoutManager перед установкой окончательных размеров выполняет попытку измерить все компоненты от нижестоящих до вышестоящих.</p>
     
      <p>Этот расширенный метод рекомендуется использовать при обработке подклассов. При отмене этого метода реализация должна выполнить вызов метода <codeph>super.measure()</codeph> или установить значения для свойств <codeph>measuredHeight</codeph> и <codeph>measuredWidth</codeph>. Также можно дополнительно установить значения для следующих свойств:</p>
     
      <ul>
        <li><codeph>measuredMinWidth</codeph></li>
        <li><codeph>measuredMinHeight</codeph></li>
      </ul>
     
      <p>Эти свойства соответствуют описанным выше свойствам макета, поэтому отдельно они не рассматриваются.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Box:pixelsToPercent"><apiName>pixelsToPercent</apiName><shortdesc>
      Метод, используемый для преобразования числа пикселей в процентный объем содержимого этого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Процентное значение, эквивалентное значению <codeph>pxl</codeph> при текущих условиях создания макета для данного контейнера. Отрицательное значение указывает, что для получения запрашиваемого размера контейнер необходимо увеличить.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>pxl</apiItemName><apiType value="Number"/><apiDesc>Число пикселей, для которых требуется определить процентное значение.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Метод, используемый для преобразования числа пикселей в процентный объем содержимого этого контейнера.
     
      <p>Процентное значение является релевантным только в том случае, если контейнер не изменяет размер или макет. После изменения размера и/или определения нового макета возвращенное из этого метода значение может быть недействительным.</p>
     
      <p>Примером использования этого метода является восстановление размера компонента до определенного количества пикселей после его скрытия.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.containers:Box:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Устанавливает размер и позицию каждого нижестоящего элемента для контейнера Box.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.   
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает размер и позицию каждого нижестоящего элемента для контейнера Box.
     
      <p>Для изучения алгоритма создания макета контейнера Box предположим, что контейнер Box расположен в горизонтальном направлении.</p>
     
      <p>Все нижестоящие элементы контейнера Box расположены друг за другом в одной горизонтальной строке. Между каждой парой смежных нижестоящих элементов установлено расстояние в <codeph>horizontalGap</codeph> пикселей. Первоначально ширина нижестоящих элементов без явного значения ширины установлена равной значению свойства <codeph>measuredWidth</codeph>.</p>
     
      <p>Если сумма значений свойства <codeph>measuredWidth</codeph> для нижестоящих элементов больше или меньше ширины контейнера Box, и если для некоторых нижестоящих элементов установлено процентное значение свойства <codeph>width</codeph>, размеры таких нижестоящих элементов будут изменяться в соответствии с размерами контейнера Box. Однако ни один из нижестоящих элементов не может иметь размер, меньший, чем значение свойства <codeph>minWidth</codeph> или больший, чем значение свойства <codeph>maxWidth</codeph>. Помимо увеличения (или уменьшения) размера нижестоящих элементов пропорционально значению свойства <codeph>percentWidth</codeph> добавляется (или удаляется) дополнительное пространство. Например, нижестоящий элемент со значением свойства<codeph>percentWidth</codeph>, равным 40%, будет увеличен в два раза по сравнению с элементом, для которого свойство <codeph>percentWidth</codeph> имеет значение 20%, до заполнения всего доступного пространства или достижения требуемых размеров.</p>
     
      <p>После увеличения или уменьшения всех нижестоящих элементов Flex проверяет, соответствует ли сумма значений ширины нижестоящих элементов ширине контейнера Box. Если это не так, все нижестоящие элементы смещаются в соответствии со значением свойства <codeph>horizontalAlign</codeph> контейнера Box. Таким образом, нижестоящие элементы выравниваются по левому краю, правому краю или по центру контейнера Box.</p>
     
      <p>Для определения высоты каждого нижестоящего элемента Flex анализирует значение свойства <codeph>height</codeph> нижестоящего элемента. Если свойство <codeph>height</codeph> не установлено, высота нижестоящего элемента устанавливается равной значению <codeph>measuredHeight</codeph>. Если для свойства <codeph>height</codeph> установлено значение в пикселях, то используется это значение. Если значение свойства <codeph>height</codeph> выражено в процентах, высота нижестоящего элемента увеличивается или уменьшается в соответствии с указанным процентом от высоты контейнера Box до тех пор, пока он не достигнет значения свойства <codeph>minHeight</codeph> или <codeph>maxHeight</codeph>.</p>
     
      <p>Вертикальное расположение каждого нижестоящего элемента определяется свойством <codeph>verticalAlign</codeph> контейнера Box. Каждый нижестоящий элемент смещается с выравниванием по верхнему краю, нижнему краю или по центру контейнера Box.</p>
     
      <p>Если для свойства <codeph>direction</codeph> контейнера Box установлено значение <codeph>vertical</codeph>, применяются аналогичные правила, за исключением того, что значения ширины и высоты меняются местами. Нижестоящие элементы размещаются в одном вертикальном столбце.</p>
     
      <p>Вызов этого метода напрямую не выполняется. Он вызывается в соответствующий момент посредством Flex LayoutManager. При запуске приложения Flex LayoutManager вызывает метод <codeph>updateDisplayList()</codeph> в каждом компоненте, начиная с объекта Application и далее по нисходящей.</p>
     
      <p>Этот расширенный метод рекомендуется использовать при обработке подклассов. При отмене этого метода реализация должна выполнить вызов методов <codeph>super.updateDisplayList()</codeph>, <codeph>move()</codeph> и <codeph>setActualSize()</codeph> в каждом нижестоящем элементе. При создании макета необходимо получить размер этого контейнера на основе значений свойств <codeph>unscaledWidth</codeph> и <codeph>unscaledHeight</codeph>, а не свойств <codeph>width</codeph> и <codeph>height</codeph>. Свойства <codeph>width</codeph> и <codeph>height</codeph> не учитывают значения свойств <codeph>scaleX</codeph> и <codeph>scaleY</codeph> для этого контейнера.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.containers:Box:direction:get"><apiName>direction</apiName><shortdesc>
      Направление, в котором контейнер Box размещает свои нижестоящие элементы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="directionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>BoxDirection.VERTICAL
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Направление, в котором контейнер Box размещает свои нижестоящие элементы. Возможными значениями MXML являются <codeph>horizontal</codeph> и <codeph>vertical</codeph>. Возможными значениями в ActionScript являются <codeph>BoxDirection.HORIZONTAL</codeph> и <codeph>BoxDirection.VERTICAL</codeph>.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>