<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.events"><apiName>mx.events</apiName><apiDetail/><apiClassifier id="mx.events:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
  2 つのアプリケーション SWF の間に存在する sharedEvents ディスパッチャを通じてアプリケーション間で送信されるイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  2 つのアプリケーション SWF の間に存在する sharedEvents ディスパッチャーを通じてアプリケーション間で送信されるイベントです。イベントは、SWF のオブジェクトに対してアクションを実行し、送出側 SWF に何らかのデータを返す可能性のある、他の SWF 内のリスナーに対する要求について説明します。通常のイベントとは異なり、SWFBridgeRequest はイベントモデルに対する例外です。送出側 SWF にデータを返すために、イベントのプロパティが変更されるためです。
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.xml#LoaderInfo/sharedEvents"><linktext>flash.display.LoaderInfo.sharedEvents</linktext></link></related-links><apiConstructor id="mx.events:SWFBridgeRequest:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>requestor</apiItemName><apiType value="flash.events:IEventDispatcher"/><apiData>null</apiData><apiDesc>メッセージを送信したブリッジです。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>イベントに関連するデータです。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeRequest:marshal"><apiName>marshal</apiName><shortdesc>
      リモート ApplicationDomain から現在の ApplicationDomain に SWFBridgeRequest をマーシャリングします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>呼び出し元の ApplicationDomain で作成された SWFBridgeRequest です。
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>別の ApplicationDomain で作成された可能性のある SWFBridgeRequest です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      リモート ApplicationDomain から現在の ApplicationDomain に SWFBridgeRequest をマーシャリングします。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_FOCUS_REQUEST"><apiName>ACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  最上位のフォーカスマネージャーから下位のフォーカスマネージャーに送信されるため、タブループに属するすべてのフォーカスマネージャーがアクティブになります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  最上位のフォーカスマネージャーから下位のフォーカスマネージャーに送信されるため、タブループに属するすべてのフォーカスマネージャーがアクティブになります。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_POP_UP_REQUEST"><apiName>ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
      子アプリケーションのポップアップをアクティブにすることを要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      子アプリケーションのポップアップをアクティブにすることを要求します。この要求は、最上位の SystemManager から子の SystemManager にブリッジを通じて送信されます。<codeph>data</codeph> プロパティには、ポップアップの識別子が含まれます。常にポップアップを実際に参照しているとは限りません。データは返されません。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_PLACE_HOLDER_REQUEST"><apiName>ADD_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  子 SystemManager によってホストされているポップアップのプレースホルダーを追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  子 SystemManager によってホストされているポップアップのプレースホルダーを追加します。ポップアップウィンドウは信頼されていないため、信頼する子によってホストされたままにする必要があります。プレースホルダーが最上位ルート SystemManager に送信されるため、すべてのポップアップのアクティブ化と非アクティブ化はそこで管理できます。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_REQUEST"><apiName>ADD_POP_UP_REQUEST</apiName><shortdesc>
	  ターゲットアプリケーションにポップアップを追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  ターゲットアプリケーションにポップアップを追加します。送出アプリケーションと受信アプリケーションの間に相互信頼関係がない限り、要求はターゲットアプリケーションで使用されません。
	  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CAN_ACTIVATE_POP_UP_REQUEST"><apiName>CAN_ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
	  特定のポップアップをアクティブにできるかどうかをテストします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>canActivateRequestPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  特定のポップアップをアクティブにできるかどうかをテストします。ポップアップが表示されていないか有効になっていない場合は、アクティブにできません。このメッセージは、常に最上位の SystemManager からポップアップを所有している SystemManager にブリッジを通じて送信されます。<codeph>data</codeph> プロパティは、ポップアップの識別子です。常にポップアップを実際に参照しているとは限りません。受信側 SystemManager では、ポップアップをアクティブにできる場合には要求の <codeph>data</codeph> プロパティが <codeph>true</codeph> に設定されます。 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CREATE_MODAL_WINDOW_REQUEST"><apiName>CREATE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      モーダルウィンドウを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>createModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モーダルウィンドウを作成します。<codeph>show</codeph> プロパティを使用して、作成後にモーダルウィンドウを表示できます。値が <codeph>true</codeph> の場合は、モーダルウィンドウを表示します。値が <codeph>false</codeph> の場合は、<codeph>ModalWindowRequest.SHOW</codeph> 要求が送出されるまで、モーダルウィンドウが非表示のままになります。<codeph>data</codeph> プロパティは、モーダルウィンドウから実行する領域を説明する矩形を持つ場合があります。矩形の座標はグローバル座標です。パラメーターは、要求元が要求の受信者を信頼している場合にのみ表示されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_FOCUS_REQUEST"><apiName>DEACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  最上位のフォーカスマネージャーから下位のフォーカスマネージャーに送信されるため、タブループに属するすべてのフォーカスマネージャーが非アクティブになります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  最上位のフォーカスマネージャーから下位のフォーカスマネージャーに送信されるため、タブループに属するすべてのフォーカスマネージャーが非アクティブになります。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_POP_UP_REQUEST"><apiName>DEACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
          子アプリケーションのポップアップを非アクティブにすることを要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
          子アプリケーションのポップアップを非アクティブにすることを要求します。この要求は、子 SystemManager から最上位の SystemManager にブリッジを通じて送信されます。data プロパティには、ポップアップの識別子が含まれます。常にポップアップを実際に参照しているとは限りません。データは返されません。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_SIZE_REQUEST"><apiName>GET_SIZE_REQUEST</apiName><shortdesc>
	  子 SystemManager のサイズを取得します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  子 SystemManager のサイズを取得します。コンテンツのサイズを取得するために、SWFLoader コントロールによって子 SystemManager に送出されます。子 SystemManager は、イベントオブジェクトの <codeph>width</codeph> および <codeph>height</codeph> プロパティを更新します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_VISIBLE_RECT_REQUEST"><apiName>GET_VISIBLE_RECT_REQUEST</apiName><shortdesc>
      親 SystemManager に、要求側 SWF をクリッピングしている可能性のある DisplayObject に基づいて要求側 SWF の表示部分を計算するよう要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getVisibleRectRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      親 SystemManager に、要求側 SWF をクリッピングしている可能性のある DisplayObject に基づいて要求側 SWF の表示部分を計算するよう要求します。要求は、ブリッジを通じて親 SystemManager に送信されます。結果は、グローバル座標の矩形である <codeph>data</codeph> プロパティで返されます。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MODAL_WINDOW_REQUEST"><apiName>HIDE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      モーダルウィンドウを非表示にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モーダルウィンドウを非表示にします。<codeph>remove</codeph> プロパティは、表示リストからモーダルウィンドウが削除されるか、非表示にされるかを決定します。<codeph>true</codeph> の値は、モーダルウィンドウを削除します。<codeph>false</codeph> の値は、モーダルウィンドウの非表示のみ行います。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MOUSE_CURSOR_REQUEST"><apiName>HIDE_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      マウスカーソルがこのアプリケーション上に移動されたときに、マウスカーソルを非表示するよう要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      マウスカーソルがこのアプリケーション上に移動されたときに、マウスカーソルを非表示するよう要求します。この要求は、親アプリケーションと共有されるブリッジに送信され、最上位ルートに伝達されます。<codeph>data</codeph> プロパティは使用されません。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:INVALIDATE_REQUEST"><apiName>INVALIDATE_REQUEST</apiName><shortdesc>
	  現在のアプリケーションのローダーに、そのプロパティ、サイズ、または表示リストを無効にするよう要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalidateRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  現在のアプリケーションのローダーに、そのプロパティ、サイズ、または表示リストを無効にするよう要求します。この要求は、SystemManager からその親 SystemManager に送信されます。<codeph>data</codeph> プロパティは、InvalidationRequestData フラグの組み合わせです。データは返されません。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:IS_BRIDGE_CHILD_REQUEST"><apiName>IS_BRIDGE_CHILD_REQUEST</apiName><shortdesc>
	  特定の DisplayObject が SWF の子または子 SWF の子かどうかをテストします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>isBridgeChildRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  特定の DisplayObject が SWF の子または子 SWF の子かどうかをテストします。この要求は、SystemManager から 1 つ以上の子の SystemManager にブリッジを通じて送信されます。<codeph>data</codeph> プロパティは DisplayObject への参照です。受信側 SystemManager は、DisplayObject が SWF の子または子 SWF の子である場合には要求の <codeph>data</codeph> プロパティを <codeph>true</codeph> に設定します。 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:MOVE_FOCUS_REQUEST"><apiName>MOVE_FOCUS_REQUEST</apiName><shortdesc>
	  制御フォーカスを別の FocusManager に移動し、その FocusManager がイベントの direction プロパティに基づいて管理下にあるコントロールにフォーカスを設定できるようにします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>moveFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  制御フォーカスを別の FocusManager に移動し、その FocusManager がイベントの <codeph>direction</codeph> プロパティに基づいて管理下にあるコントロールにフォーカスを設定できるようにします。フォーカスが親 SWF の FocusManager に移動された場合、<codeph>direction</codeph> プロパティは <codeph>FocusDirection.FORWARD</codeph> または <codeph>FocusDirection.BACKWARD</codeph> に設定されます。フォーカスが子 SWF の FocusManager に移動された場合、<codeph>direction</codeph> プロパティは <codeph>FocusDirection.TOP</codeph> または <codeph>FocusDirection.BOTTOM</codeph> に設定されます。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_PLACE_HOLDER_REQUEST"><apiName>REMOVE_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  プレースホルダーを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プレースホルダーを削除します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_REQUEST"><apiName>REMOVE_POP_UP_REQUEST</apiName><shortdesc>
	  sandboxRoot の SystemManager からポップアップを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  sandboxRoot の SystemManager からポップアップを削除します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:RESET_MOUSE_CURSOR_REQUEST"><apiName>RESET_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      新しいマウスイベントに対してマウスカーソルの表示 / 非表示ロジックのリセットを要求して、マウスカーソルの表示または非表示をさまざまなアプリケーションが要求できるようにします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resetMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      新しいマウスイベントに対してマウスカーソルの表示 / 非表示ロジックのリセットを要求して、マウスカーソルの表示または非表示をさまざまなアプリケーションが要求できるようにします。この要求は、親アプリケーションと共有されるブリッジに送信され、最上位ルートに伝達されます。data プロパティは使用されません。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_ACTUAL_SIZE_REQUEST"><apiName>SET_ACTUAL_SIZE_REQUEST</apiName><shortdesc>
	  child.systemManager のサイズを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setActualSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>child.systemManager</codeph> のサイズを設定します。SWFLoader コントロールによって子 SystemManager に送出されます。子 SystemManager は、イベントオブジェクトの <codeph>width</codeph> および <codeph>height</codeph> プロパティに基づいて、子のサイズを更新する必要があります。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_SHOW_FOCUS_INDICATOR_REQUEST"><apiName>SET_SHOW_FOCUS_INDICATOR_REQUEST</apiName><shortdesc> 
      すべてのアプリケーションの FocusManager の showFocusIndicator プロパティの値を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setShowFocusIndicatorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      すべてのアプリケーションの FocusManager の showFocusIndicator プロパティの値を設定します。data プロパティはブール値であり、showFocusIndicator プロパティに設定される値を含みます。この要求は、最初に、その showFocusIndicator プロパティが設定された FocusManager から送信されます。そこから要求がシステムの各 FocusManager に中継されます。  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MODAL_WINDOW_REQUEST"><apiName>SHOW_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      モーダルウィンドウを表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モーダルウィンドウを表示します。この要求では、<codeph>skip</codeph> プロパティが使用されます。<codeph>true</codeph> の値は、受信者が要求を処理しないで親チェーンに転送のみする必要があることを示します。<codeph>data</codeph> プロパティは、現在の親に基づいて除外する領域を示す矩形を持つ場合があります。座標はスクリーン座標にあります。パラメーターは、要求元がメッセージの受信者を信頼している場合にのみ表示されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MOUSE_CURSOR_REQUEST"><apiName>SHOW_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      最上位ルートに、現在の場所でマウスカーソルを非表示にする必要があるかどうかを確認します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      最上位ルートに、現在の場所でマウスカーソルを非表示にする必要があるかどうかを確認します。親アプリケーションと共有されるブリッジに送信され、最上位ルートに伝達されます。マウスカーソルをこの場所で表示する必要がある場合は、データが true に設定されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:data"><apiName>data</apiName><shortdesc>
	  イベントに関連するデータです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  イベントに関連するデータです。このオブジェクトの使用方法については、各イベントタイプを参照してください。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:requestor"><apiName>requestor</apiName><shortdesc>
	  メッセージを送信したブリッジです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
	  メッセージを送信したブリッジです。これは、どの SWFLoader が要求側 SWF を保持しているかを追跡するために受信側 SWF によって使用されます。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:PropertyChangeEventKind"><apiName>PropertyChangeEventKind</apiName><shortdesc>
  PropertyChangeEventKind クラスは、PropertyChangeEvent クラスの kind プロパティの定数値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  PropertyChangeEventKind クラスは、PropertyChangeEvent クラスの <codeph>kind</codeph> プロパティの定数値を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>mx.events.PropertyChangeEvent</linktext></link></related-links><apiValue id="mx.events:PropertyChangeEventKind:DELETE"><apiName>DELETE</apiName><shortdesc>
	  プロパティがオブジェクトから削除されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>delete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プロパティがオブジェクトから削除されたことを示します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
	  プロパティの値が変更されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プロパティの値が変更されたことを示します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TouchInteractionReason"><apiName>TouchInteractionReason</apiName><shortdesc>
  TouchInteractionReason クラスは、TouchInteractionEvent クラスの reason プロパティの定数値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  TouchInteractionReason クラスは、TouchInteractionEvent クラスの <codeph>reason</codeph> プロパティの定数値を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#TouchInteractionEvent"><linktext>mx.events.TouchInteractionEvent</linktext></link></related-links><apiValue id="mx.events:TouchInteractionReason:SCROLL"><apiName>SCROLL</apiName><shortdesc>
      タッチ操作がスクロールであることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
      タッチ操作がスクロールであることを示します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
  BrowserChangeEvent クラスは、BrowserManager に固有のイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  BrowserChangeEvent クラスは、BrowserManager に固有のイベントオブジェクトを表します。
 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE_applicationURLChange"><apiName>applicationURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE_browserURLChange"><apiName>browserURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:URL_CHANGE_urlChange"><apiName>urlChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:BrowserChangeEvent:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>ブラウザー内の現在の URL です。
      
      </apiDesc></apiParam><apiParam><apiItemName>lastURL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>ブラウザー内の前の URL です。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE"><apiName>APPLICATION_URL_CHANGE</apiName><shortdesc>
      BrowserChangeEvent.APPLICATION_URL_CHANGE 定数により、applicationURLChange イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>BrowserChangeEvent.APPLICATION_URL_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>applicationURLChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>BrowserManager の <codeph>url</codeph> プロパティの前の値です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>url</codeph></entry><entry>BrowserManager の <codeph>url</codeph> プロパティの新しい値です。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE"><apiName>BROWSER_URL_CHANGE</apiName><shortdesc>
      BrowserChangeEvent.BROWSER_URL_CHANGE 定数により、browserURLChange イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>browserURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>BrowserChangeEvent.BROWSER_URL_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>browserURLChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>BrowserManager の <codeph>url</codeph> プロパティの前の値です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>url</codeph></entry><entry>BrowserManager の <codeph>url</codeph> プロパティの新しい値です。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:URL_CHANGE"><apiName>URL_CHANGE</apiName><shortdesc>
      BrowserChangeEvent.URL_CHANGE 定数により、urlChange イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>BrowserChangeEvent.URL_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>urlChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>BrowserManager の <codeph>url</codeph> プロパティの前の値です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>url</codeph></entry><entry>BrowserManager の <codeph>url</codeph> プロパティの新しい値です。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:lastURL"><apiName>lastURL</apiName><shortdesc>
      BrowserManager の url プロパティの前の値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      BrowserManager の <codeph>url</codeph> プロパティの前の値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:url"><apiName>url</apiName><shortdesc>
      BrowserManager の url プロパティの新しい値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      BrowserManager の <codeph>url</codeph> プロパティの新しい値です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc>
  これは、別のセキュリティサンドボックスでのマウスアクティビティについてリスナーに通知するために、異なるセキュリティサンドボックスにあるアプリケーション間で送信されるイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  これは、別のセキュリティサンドボックスでのマウスアクティビティについてリスナーに通知するために、異なるセキュリティサンドボックスにあるアプリケーション間で送信されるイベントです。セキュリティ上の理由から、MouseEvent の一部のフィールドは SandboxMouseEvent で送信されません。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SandboxMouseEvent:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc> 
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Ctrl</codeph> キーが押されたかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Alt</codeph> キーが押されたかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Shift</codeph> キーが押されたかどうかを示します。	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>マウスの主ボタンが押されているか（true）押されていないか（false）を示します。
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  コンストラクターです。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SandboxMouseEvent:marshal"><apiName>marshal</apiName><shortdesc>
      リモート ApplicationDomain から現在の ApplicationDomain に SWFBridgeRequest をマーシャリングします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>呼び出し元の ApplicationDomain で作成された SandboxMouseEvent です。
      
      </apiDesc><apiOperationClassifier>mx.events:SandboxMouseEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>別の ApplicationDomain で作成された可能性のある SWFBridgeRequest です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      リモート ApplicationDomain から現在の ApplicationDomain に SWFBridgeRequest をマーシャリングします。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SandboxMouseEvent:CLICK_SOMEWHERE"><apiName>CLICK_SOMEWHERE</apiName><shortdesc>
	  マウスがサンドボックス外でクリックされました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  マウスがサンドボックス外でクリックされました。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:DOUBLE_CLICK_SOMEWHERE"><apiName>DOUBLE_CLICK_SOMEWHERE</apiName><shortdesc>
	  マウスがサンドボックス外でダブルクリックされました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>doubleClickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  マウスがサンドボックス外でダブルクリックされました。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_DOWN_SOMEWHERE"><apiName>MOUSE_DOWN_SOMEWHERE</apiName><shortdesc>
	  マウスボタンがサンドボックス外で押されました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  マウスボタンがサンドボックス外で押されました。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_MOVE_SOMEWHERE"><apiName>MOUSE_MOVE_SOMEWHERE</apiName><shortdesc>
	  マウスがサンドボックス外で移動されました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseMoveSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  マウスがサンドボックス外で移動されました。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_UP_SOMEWHERE"><apiName>MOUSE_UP_SOMEWHERE</apiName><shortdesc>
	  マウスボタンがサンドボックス外で離されました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseUpSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  マウスボタンがサンドボックス外で離されました。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_WHEEL_SOMEWHERE"><apiName>MOUSE_WHEEL_SOMEWHERE</apiName><shortdesc>
	  マウスホイールがサンドボックス外で回転されました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  マウスホイールがサンドボックス外で回転されました。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:altKey"><apiName>altKey</apiName><shortdesc>
	  Alt キーが押されたかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  <codeph>Alt</codeph> キーが押されたかどうかを示します。
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/altkey"><linktext>flash.events.MouseEvent.altkey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:buttonDown"><apiName>buttonDown</apiName><shortdesc>
	  マウスの主ボタンが押されているか（true）押されていないか（false）を示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  マウスの主ボタンが押されているか（true）押されていないか（false）を示します。
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/buttonDown"><linktext>flash.events.MouseEvent.buttonDown</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:ctrlKey"><apiName>ctrlKey</apiName><shortdesc>
	  Ctrl キーが押されたかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  <codeph>Ctrl</codeph> キーが押されたかどうかを示します。
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/ctrlKey"><linktext>flash.events.MouseEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:shiftKey"><apiName>shiftKey</apiName><shortdesc>
	  Shift キーが押されたかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  <codeph>Shift</codeph> キーが押されたかどうかを示します。
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/shiftKey"><linktext>flash.events.MouseEvent.shiftKey</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:TouchInteractionEvent"><apiName>TouchInteractionEvent</apiName><shortdesc>
  TouchInteractionEvent は、タッチ操作と応答を様々なコンポーネント間で調整するために使用します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  TouchInteractionEvent は、タッチ操作と応答を様々なコンポーネント間で調整するために使用します。  
 
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_END_touchInteractionEnd"><apiName>touchInteractionEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TouchInteractionEvent:TOUCH_INTERACTION_END</apiEventType><adobeApiEventClassifier>mx.events:TouchInteractionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_STARTING_touchInteractionStarting"><apiName>touchInteractionStarting</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TouchInteractionEvent:TOUCH_INTERACTION_STARTING</apiEventType><adobeApiEventClassifier>mx.events:TouchInteractionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_START_touchInteractionStart"><apiName>touchInteractionStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TouchInteractionEvent:TOUCH_INTERACTION_START</apiEventType><adobeApiEventClassifier>mx.events:TouchInteractionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.events:TouchInteractionEvent:TouchInteractionEvent"><apiName>TouchInteractionEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_END"><apiName>TOUCH_INTERACTION_END</apiName><shortdesc>
      TouchInteractionEvent.TOUCH_INTERACTION_END 定数は、touchInteractionEnd イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>touchInteractionEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TouchInteractionEvent.TOUCH_INTERACTION_END</codeph> 定数は、<codeph>touchInteractionEnd</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>reason</codeph></entry><entry>タッチ操作イベントの理由です。 <codeph>mx.events.TouchInteractionReason</codeph> を参照してください。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>このタッチ操作イベントに関連付けられているオブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_STARTING"><apiName>TOUCH_INTERACTION_STARTING</apiName><shortdesc>
      TouchInteractionEvent.TOUCH_INTERACTION_STARTING 定数は、touchInteractionStarting イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>touchInteractionStarting</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TouchInteractionEvent.TOUCH_INTERACTION_STARTING</codeph> 定数は、<codeph>touchInteractionStarting</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>true</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>reason</codeph></entry><entry>タッチ操作イベントの理由です。 <codeph>mx.events.TouchInteractionReason</codeph> を参照してください。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>このタッチ操作イベントに関連付けられているオブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:TOUCH_INTERACTION_START"><apiName>TOUCH_INTERACTION_START</apiName><shortdesc>
      TouchInteractionEvent.TOUCH_INTERACTION_START 定数は、touchInteractionStart イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>touchInteractionStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TouchInteractionEvent.TOUCH_INTERACTION_START</codeph> 定数は、<codeph>touchInteractionStart</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>true</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>reason</codeph></entry><entry>タッチ操作イベントの理由です。 <codeph>mx.events.TouchInteractionReason</codeph> を参照してください。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>このタッチ操作イベントに関連付けられているオブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:reason"><apiName>reason</apiName><shortdesc>
      このジェスチャーキャプチャイベントの理由です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      このジェスチャーキャプチャイベントの理由です。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#TouchInteractionReason"><linktext>mx.events.TouchInteractionReason</linktext></link></related-links></apiValue><apiValue id="mx.events:TouchInteractionEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
      このタッチ操作をキャプチャしようとしているオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      このタッチ操作をキャプチャしようとしているオブジェクトです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
  RSLEvent クラスは、RSL が Preloader クラスによりダウンロードされているときに DownloadProgressBar クラスで使用されるイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  RSLEvent クラスは、RSL が Preloader クラスによりダウンロードされているときに DownloadProgressBar クラスで使用されるイベントオブジェクトを表します。 
   </apiDesc></apiClassifierDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link><link href="mx.preloaders.xml#Preloader"><linktext>mx.preloaders.Preloader</linktext></link></related-links><adobeApiEvent id="mx.events:RSLEvent:RSL_ADD_PRELOADED_rslAddPreloaded"><apiName>rslAddPreloaded</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_ADD_PRELOADED</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_COMPLETE_rslComplete"><apiName>rslComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_ERROR_rslError"><apiName>rslError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_ERROR</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_PROGRESS_rslProgress"><apiName>rslProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:RSLEvent:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントのタイプです。有効な値は次のとおりです。
      <ul>
         <li>"rslProgress" (<codeph>RSLEvent.RSL_PROGRESS</codeph>);</li>
         <li>"rslComplete" (<codeph>RSLEvent.RSL_COMPLETE</codeph>);</li>
         <li>"rslError" (<codeph>RSLEvent.RSL_ERROR</codeph>);</li>
      </ul>
           </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc> Event オブジェクトがイベントフローのバブリング段階で処理されるかどうかを判断します。
           </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Event オブジェクトがキャンセル可能かどうかを判断します。
           </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>リスナーがイベントを処理しているときにロードされたバイト数です。
           </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>ロードプロセスが成功した場合に最終的にロードされるバイトの総数です。
           </apiDesc></apiParam><apiParam><apiItemName>rslIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>合計に対する RSL のインデックス番号です。 0 から <codeph>total - 1</codeph> の範囲の値となります。
           </apiDesc></apiParam><apiParam><apiItemName>rslTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>ロード中の RSL の合計です。
           </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData><apiDesc>RSL の場所です。
           </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>タイプが RSLEvent.RSL_ERROR の場合のエラーメッセージです。
           </apiDesc></apiParam><apiParam><apiItemName>isResourceModule</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>ResourceModule のロード中にイベントが発生した場合は true です。
           </apiDesc></apiParam><apiParam><apiItemName>loaderInfo</apiItemName><apiType value="flash.display:LoaderInfo"/><apiData>null</apiData><apiDesc>
           </apiDesc></apiParam><apiTipTexts><apiTipText><codeph>RSLEvent</codeph> オブジェクトのコンストラクターです。
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:RSLEvent:RSL_ADD_PRELOADED"><apiName>RSL_ADD_PRELOADED</apiName><shortdesc>
      RSLEvent.RSL_ADD_PRELOADED 定数により、rslAddPreloaded イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslAddPreloaded</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>RSLEvent.RSL_ADD_PRELOADED</codeph> 定数により、<codeph>rslAddPreloaded</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。 このイベントは、子の IFlexModuleFactory が RSL を自分のアプリケーションドメインにプリロードした後に、IFlexModuleFactory から送出されます。 
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>loaderInfo</codeph></entry><entry>この RSL に関連付けられた LoaderInfo インスタンスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_COMPLETE"><apiName>RSL_COMPLETE</apiName><shortdesc>
      RSL のダウンロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      RSL のダウンロードが完了すると送出されます。 <codeph>RSLEvent.RSL_COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>rslComplete</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>ロードされたバイト数です。</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>ロードするバイト数の合計です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>空</entry></row><row><entry><codeph>isResourceModule</codeph></entry><entry>RSL ではなく resourceModule をロードした場合は true です</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>現在ダウンロード中の RSL のインデックス番号です。 </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>ダウンロード中の RSL 数の合計です。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>url</codeph></entry><entry>ダウンロード中の RSL の場所を表す URLRequest オブジェクトです。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_ERROR"><apiName>RSL_ERROR</apiName><shortdesc>
      RSL のダウンロード中にエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslError</apiData><apiType value="String"/></apiValueDef><apiDesc>
      RSL のダウンロード中にエラーが発生した場合に送出されます。 <codeph>RSLEvent.RSL_ERROR</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>rslError</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>空</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>空</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry>エラーメッセージ。<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>RSL ではなく resourceModule をロードした場合は true です</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>現在ダウンロード中の RSL のインデックス番号です。 </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>ダウンロード中の RSL 数の合計です。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>url</codeph></entry><entry>ダウンロード中の RSL の場所を表す URLRequest オブジェクトです。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_PROGRESS"><apiName>RSL_PROGRESS</apiName><shortdesc>
      RSL のダウンロード中に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      RSL のダウンロード中に送出されます。 <codeph>RSLEvent.RSL_PROGRESS</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>rslProgress</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>ロードされたバイト数です。</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>ロードするバイト数の合計です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry>空<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>RSL ではなく resourceModule をロードした場合は true です</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>現在ダウンロード中の RSL のインデックス番号です。 </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>ダウンロード中の RSL 数の合計です。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>url</codeph></entry><entry>ダウンロード中の RSL の場所を表す URLRequest オブジェクトです。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:errorText"><apiName>errorText</apiName><shortdesc>
      タイプが RSL_ERROR の場合のエラーメッセージです。それ以外の場合は、null です。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      タイプが RSL_ERROR の場合のエラーメッセージです。それ以外の場合は、null です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:isResourceModule"><apiName>isResourceModule</apiName><shortdesc>
      イベントが、RSL ではなく resourceModule をロードするイベントの場合は true です
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      イベントが、RSL ではなく resourceModule をロードするイベントの場合は true です
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:loaderInfo"><apiName>loaderInfo</apiName><shortdesc>
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:LoaderInfo"/></apiValueDef><apiDesc>
      これは RSLEvent.RSL_COMPLETE イベントでのみ設定されます。それ以外の場合、loaderInfo は null になります。
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslIndex"><apiName>rslIndex</apiName><shortdesc>
      現在ダウンロード中の RSL のインデックス番号です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      現在ダウンロード中の RSL のインデックス番号です。 0 から <codeph>rslTotal - 1</codeph> の範囲の番号となります。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslTotal"><apiName>rslTotal</apiName><shortdesc>
      プリローダーによりダウンロード中の RSL の合計です。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      プリローダーによりダウンロード中の RSL の合計です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:url"><apiName>url</apiName><shortdesc>
      ダウンロード中の RSL の場所を表す URLRequest オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.net:URLRequest"/></apiValueDef><apiDesc>
      ダウンロード中の RSL の場所を表す URLRequest オブジェクトです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
  ToolTipEvent クラスは、ToolTipManager クラスにより生成される ToolTip イベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  ToolTipEvent クラスは、ToolTipManager クラスにより生成される ToolTip イベントを表します。 ToolTipManager クラスは、イベントを送出するためにヒントが適用されるオブジェクトの <codeph>dispatchEvent()</codeph> メソッドを呼び出します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_CREATE_toolTipCreate"><apiName>toolTipCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_CREATE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_END_toolTipEnd"><apiName>toolTipEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_END</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_HIDE_toolTipHide"><apiName>toolTipHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_HIDE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN_toolTipShown"><apiName>toolTipShown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOWN</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOW_toolTipShow"><apiName>toolTipShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOW</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_START_toolTipStart"><apiName>toolTipStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_START</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ToolTipEvent:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>toolTip</apiItemName><apiOperationClassifier>mx.core:IToolTip</apiOperationClassifier><apiData>null</apiData><apiDesc>このイベントが適用される ToolTip オブジェクトです。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_CREATE"><apiName>TOOL_TIP_CREATE</apiName><shortdesc>
	  ToolTipEvent.TOOL_TIP_CREATE 定数により、toolTipCreate イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ToolTipEvent.TOOL_TIP_CREATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>toolTipCreate</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>このイベントが適用される ToolTip オブジェクトです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_END"><apiName>TOOL_TIP_END</apiName><shortdesc>
	  ToolTipEvent.TOOL_TIP_END 定数により、toolTipEnd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ToolTipEvent.TOOL_TIP_END</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>toolTipEnd</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>このイベントが適用される ToolTip オブジェクトです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_HIDE"><apiName>TOOL_TIP_HIDE</apiName><shortdesc>
	  ToolTipEvent.TOOL_TIP_HIDE 定数により、toolTipHide イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ToolTipEvent.TOOL_TIP_HIDE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>toolTipHide</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>このイベントが適用される ToolTip オブジェクトです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN"><apiName>TOOL_TIP_SHOWN</apiName><shortdesc>
	  ToolTipEvent.TOOL_TIP_SHOWN 定数により、toolTipShown イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ToolTipEvent.TOOL_TIP_SHOWN</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>toolTipShown</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>このイベントが適用される ToolTip オブジェクトです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOW"><apiName>TOOL_TIP_SHOW</apiName><shortdesc>
	  ToolTipEvent.TOOL_TIP_SHOW 定数により、toolTipShow イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ToolTipEvent.TOOL_TIP_SHOW</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>toolTipShow</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>このイベントが適用される ToolTip オブジェクトです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_START"><apiName>TOOL_TIP_START</apiName><shortdesc>
	  ToolTipEvent.TOOL_TIP_START 定数により、toolTipStart イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ToolTipEvent.TOOL_TIP_START</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>toolTipStart</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>このイベントが適用される ToolTip オブジェクトです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:toolTip"><apiName>toolTip</apiName><shortdesc>
	  このイベントが適用される ToolTip オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IToolTip</apiValueClassifier></apiValueDef><apiDesc>
	  このイベントが適用される ToolTip オブジェクトです。通常このオブジェクトは ToolTip オブジェクトのインスタンスですが、任意の UIComponent オブジェクトを指定できます。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
  Flex コンポーネントが移動するときに送出されるイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Flex コンポーネントが移動するときに送出されるイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:MoveEvent:MOVE_move"><apiName>move</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MoveEvent:MOVE</apiEventType><adobeApiEventClassifier>mx.events:MoveEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MoveEvent:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>オブジェクトの前の x 座標をピクセル単位で表します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>オブジェクトの前の y 座標をピクセル単位で表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MoveEvent:MOVE"><apiName>MOVE</apiName><shortdesc>
	  MoveEvent.MOVE 定数により、move イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>MoveEvent.MOVE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>move</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>oldX</codeph></entry><entry>オブジェクトの前の x 座標をピクセル単位で表します。</entry></row><row><entry><codeph>oldY</codeph></entry><entry>オブジェクトの前の y 座標をピクセル単位で表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldX"><apiName>oldX</apiName><shortdesc>
	  オブジェクトの前の x 座標をピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  オブジェクトの前の <codeph>x</codeph> 座標をピクセル単位で表します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldY"><apiName>oldY</apiName><shortdesc>
	  オブジェクトの前の y 座標をピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  オブジェクトの前の <codeph>y</codeph> 座標をピクセル単位で表します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEventKind"><apiName>CollectionEventKind</apiName><shortdesc>
  CollectionEventKind クラスには、mx.events.CollectionEvent クラスの有効な kind プロパティ値の定数が含まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  CollectionEventKind クラスには、mx.events.CollectionEvent クラスの有効な <codeph>kind</codeph> プロパティ値の定数が含まれます。 これらの定数は、コレクションに対して行われた変更の種類を示します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links><apiValue id="mx.events:CollectionEventKind:ADD"><apiName>ADD</apiName><shortdesc>
      コレクションにアイテムが追加されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      コレクションにアイテムが追加されたことを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:MOVE"><apiName>MOVE</apiName><shortdesc>
      アイテムが CollectionEvent oldLocation プロパティで指定された位置から location プロパティで指定された位置に移動したことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
      アイテムが CollectionEvent <codeph>oldLocation</codeph> プロパティで指定された位置から <codeph>location</codeph> プロパティで指定された位置に移動したことを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REFRESH"><apiName>REFRESH</apiName><shortdesc>
      コレクションにソート、フィルターまたは両方が適用されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>refresh</apiData><apiType value="String"/></apiValueDef><apiDesc>
      コレクションにソート、フィルターまたは両方が適用されたことを示します。 この変更は、RESET を扱うより簡単な場合があります。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      コレクションからアイテムが削除されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      コレクションからアイテムが削除されたことを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REPLACE"><apiName>REPLACE</apiName><shortdesc>
      CollectionEvent location プロパティで指定された位置のアイテムが置き換えられたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>replace</apiData><apiType value="String"/></apiValueDef><apiDesc>
      CollectionEvent <codeph>location</codeph> プロパティで指定された位置のアイテムが置き換えられたことを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:RESET"><apiName>RESET</apiName><shortdesc>
      コレクションが大幅に変更され、リセットが必要であることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
      コレクションが大幅に変更され、リセットが必要であることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
      アイテムがコレクション内で更新されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
      アイテムがコレクション内で更新されたことを示します。影響を受けるアイテムは、<codeph>items</codeph> プロパティに格納されます。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
  指定されたイベントへのリスナーを追加または削除するために、ある SystemManager からブリッジを通じて別のアプリケーションの SystemManager に送信された要求です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:SWFBridgeRequest</apiBaseClassifier></apiClassifierDef><apiDesc>
  指定されたイベントへのリスナーを追加または削除するために、ある SystemManager からブリッジを通じて別のアプリケーションの SystemManager に送信された要求です。<codeph>data</codeph> プロパティは使用されません。特定のイベントのみ要求できます。イベントが他のアプリケーションでトリガーされた場合、イベントはブリッジを通じて再送出されます。ブリッジでは、要求元の SystemManager がイベントを選択して自身から再送出します。一般に、この要求が生成されるのは、他のコードが SystemManager での承認済みイベントの 1 つに対して <codeph>addEventListener()</codeph> メソッドを呼び出したためです。また、この要求は、マーシャリング実装でリスナーを別々に追加または削除できるようにするために、SystemManager によって送出されます。SystemManager によって送出されると、listener プロパティは null 以外になります。
  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:EventListenerRequest:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
      イベントリスナーを追加または削除する新しい要求を作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。<codeph>EventListenerRequest.ADD</codeph> または <codeph>EventListenerRequest.REMOVE</codeph>。
           </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
           </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
           </apiDesc></apiParam><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>一般に <codeph>addEventListener()</codeph> メソッドに渡すメッセージのタイプです。
           </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>リスナーが、キャプチャ段階、またはターゲットおよびバブリング段階で動作するかどうかを判断します。
           </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントリスナーの優先度レベルです。優先度は、32 ビット整数で指定します。
           </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>リスナーへの参照が強参照と弱参照のいずれであるかを判断します。
     
      </apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef><apiDesc>
      イベントリスナーを追加または削除する新しい要求を作成します。
     
      </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiConstructor><apiOperation id="mx.events:EventListenerRequest:marshal"><apiName>marshal</apiName><shortdesc>
      イベントから新しいイベントに関連パラメーターをコピーすることで、イベントをマーシャリングします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>新しいイベントを定義する EventListenerRequest です。
      
      </apiDesc><apiOperationClassifier>mx.events:EventListenerRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>マーシャリングするイベントです。
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
      イベントから新しいイベントに関連パラメーターをコピーすることで、イベントをマーシャリングします。
         
         </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:EventListenerRequest:ADD_EVENT_LISTENER_REQUEST"><apiName>ADD_EVENT_LISTENER_REQUEST</apiName><shortdesc>
      イベントリスナーの追加を要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      イベントリスナーの追加を要求します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:REMOVE_EVENT_LISTENER_REQUEST"><apiName>REMOVE_EVENT_LISTENER_REQUEST</apiName><shortdesc>
      イベントリスナーの削除を要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      イベントリスナーの削除を要求します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:eventType:get"><apiName>eventType</apiName><shortdesc>
      監視するイベントのタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      監視するイベントのタイプです。
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#Event/type"><linktext>flash.events.Event.type</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:listener:get"><apiName>listener</apiName><shortdesc>
      呼び出すメソッドまたは関数
           </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Function"/></apiValueDef><apiDesc>
      呼び出すメソッドまたは関数
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:priority:get"><apiName>priority</apiName><shortdesc>
      addEventListener() に対する priority パラメーターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>addEventListener()</codeph> に対する <codeph>priority</codeph> パラメーターです。
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useCapture:get"><apiName>useCapture</apiName><shortdesc>
      addEventListener() に対する useCapture パラメーターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      <codeph>addEventListener()</codeph> に対する <codeph>useCapture</codeph> パラメーターです。
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useWeakReference:get"><apiName>useWeakReference</apiName><shortdesc>
      addEventListener() に対する useWeakReference パラメーターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      <codeph>addEventListener()</codeph> に対する <codeph>useWeakReference</codeph> パラメーターです。
           </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
 PropertyChangeEvent クラスは、オブジェクトのプロパティのうちの 1 つが変更されたときにイベントリスナーに渡されるイベントオブジェクトを表し、変更に関する情報を提供します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
 PropertyChangeEvent クラスは、オブジェクトのプロパティのうちの 1 つが変更されたときにイベントリスナーに渡されるイベントオブジェクトを表し、変更に関する情報を提供します。このイベントはコレクションクラスにより使用され、コレクションが表しているデータが変更されたことをコレクションに認識させる唯一の方法となります。このイベントは、Flex データバインディングメカニズムでも使用されます。
 
 </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEventKind"><linktext>PropertyChangeEventKind</linktext></link></related-links><adobeApiEvent id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE_propertyChange"><apiName>propertyChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:PropertyChangeEvent:PROPERTY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:PropertyChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:PropertyChangeEvent:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントをトリガーしたアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>変更の種類を指定します。 有効な値は、<codeph>PropertyChangeEventKind.UPDATE</codeph>、<codeph>PropertyChangeEventKind.DELETE</codeph> および <codeph>null</codeph> です。
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>変更されたプロパティを指定する String、QName または int です。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>変更前のプロパティの値です。
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>変更後のプロパティの値です。
     
      </apiDesc></apiParam><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>変更が行われたオブジェクトです。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:PropertyChangeEvent:createUpdateEvent"><apiName>createUpdateEvent</apiName><shortdesc>
      指定されたプロパティを使用して、種類が PropertyChangeEventKind.UPDATE の新しい PropertyChangeEvent を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>指定されたプロパティを使用して新しく作成された PropertyChangeEvent です。 
      
      </apiDesc><apiOperationClassifier>mx.events:PropertyChangeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiDesc>変更が行われたオブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiDesc>変更されたプロパティを指定する String、QName または int です。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiDesc>変更前のプロパティの値です。
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiDesc>変更後のプロパティの値です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      指定されたプロパティを使用して、種類が <codeph>PropertyChangeEventKind.UPDATE</codeph> の新しい PropertyChangeEvent を返します。これは便利なメソッドです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE"><apiName>PROPERTY_CHANGE</apiName><shortdesc>
      PropertyChangeEvent.PROPERTY_CHANGE 定数により、PropertyChange イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>propertyChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>PropertyChangeEvent.PROPERTY_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>PropertyChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>コンストラクターによって決定されます。デフォルトは false です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>コンストラクターによって決定されます。デフォルトは false です。</entry></row><row><entry><codeph>kind</codeph></entry><entry>変更の種類。PropertyChangeEventKind.UPDATE または PropertyChangeEventKind.DELETE のいずれかです。</entry></row><row><entry><codeph>oldValue</codeph></entry><entry>元のプロパティの値です。</entry></row><row><entry><codeph>newValue</codeph></entry><entry>新しいプロパティの値（存在する場合）です。</entry></row><row><entry><codeph>property</codeph></entry><entry>変更されたプロパティです。</entry></row><row><entry><codeph>source</codeph></entry><entry>変更されたプロパティを含むオブジェクトです。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:kind"><apiName>kind</apiName><shortdesc>
      変更の種類を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      変更の種類を指定します。 有効な値は、<codeph>PropertyChangeEventKind.UPDATE</codeph>、<codeph>PropertyChangeEventKind.DELETE</codeph> および <codeph>null</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:newValue"><apiName>newValue</apiName><shortdesc>
      変更後のプロパティの値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      変更後のプロパティの値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:oldValue"><apiName>oldValue</apiName><shortdesc>
      変更前のプロパティの値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      変更前のプロパティの値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:property"><apiName>property</apiName><shortdesc>
      変更されたプロパティを指定する String、QName または int です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      変更されたプロパティを指定する String、QName または int です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:source"><apiName>source</apiName><shortdesc>
      変更が行われたオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      変更が行われたオブジェクトです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
  StyleEvent クラスは、スタイル SWF がダウンロードされているときに StyleManager クラスで使用されるイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  StyleEvent クラスは、スタイル SWF がダウンロードされているときに StyleManager クラスで使用されるイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.styles.xml#StyleManager"><linktext>mx.styles.StyleManager</linktext></link></related-links><adobeApiEvent id="mx.events:StyleEvent:COMPLETE_styleComplete"><apiName>styleComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:ERROR_styleError"><apiName>styleError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:PROGRESS_styleProgress"><apiName>styleProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StyleEvent:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントのタイプです。有効な値は次のとおりです。
      <ul>
         <li>"progress" (<codeph>StyleEvent.PROGRESS</codeph>);</li>
         <li>"complete" (<codeph>StyleEvent.COMPLETE</codeph>);</li>
         <li>"error" (<codeph>StyleEvent.ERROR</codeph>);</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Event オブジェクトがイベントフローのバブリング段階で処理されるかどうかを判断します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Event オブジェクトがキャンセル可能かどうかを判断します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>リスナーがイベントを処理しているときにロードされたバイト数です。
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>ロードプロセスが成功した場合に最終的にロードされるバイトの総数です。
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>タイプが StyleEvent.ERROR の場合のエラーメッセージです。
     
      </apiDesc></apiParam><apiTipTexts><apiTipText><codeph>StyleEvent</codeph> オブジェクトのコンストラクターです。
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StyleEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      スタイル SWF のダウンロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      スタイル SWF のダウンロードが完了すると送出されます。 <codeph>StyleEvent.COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>styleComplete</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>空</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      スタイル SWF のダウンロード中にエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      スタイル SWF のダウンロード中にエラーが発生した場合に送出されます。 <codeph>StyleEvent.ERROR</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>styleError</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>空</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>空</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry>エラーメッセージ。<entry/></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      スタイル SWF のダウンロード中に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      スタイル SWF のダウンロード中に送出されます。 <codeph>StyleEvent.PROGRESS</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>styleProgress</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>ロードされたバイト数です。</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>ロードするバイト数の合計です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry>空<entry/></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      タイプが ERROR の場合のエラーメッセージです。それ以外の場合は、null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>type</codeph> が <codeph>ERROR</codeph> の場合のエラーメッセージです。それ以外の場合は、<codeph>null</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
  Flex コンポーネントのサイズが変更されたときに送出されるイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Flex コンポーネントのサイズが変更されたときに送出されるイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ResizeEvent:RESIZE_resize"><apiName>resize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResizeEvent:RESIZE</apiEventType><adobeApiEventClassifier>mx.events:ResizeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResizeEvent:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldWidth</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>オブジェクトの前の幅をピクセル単位で表します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldHeight</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>オブジェクトの前の高さをピクセル単位で表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResizeEvent:RESIZE"><apiName>RESIZE</apiName><shortdesc>
	  ResizeEvent.RESIZE 定数により、resize イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resize</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ResizeEvent.RESIZE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>resize</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>oldHeight</codeph></entry><entry>オブジェクトの前の高さをピクセル単位で表します。</entry></row><row><entry><codeph>oldWidth</codeph></entry><entry>オブジェクトの前の幅をピクセル単位で表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldHeight"><apiName>oldHeight</apiName><shortdesc>
	  オブジェクトの前の高さをピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  オブジェクトの前の <codeph>height</codeph> をピクセル単位で表します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldWidth"><apiName>oldWidth</apiName><shortdesc>
	  オブジェクトの前の幅をピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  オブジェクトの前の <codeph>width</codeph> をピクセル単位で表します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
  この Event のサブクラスは動的です。つまり、このサブクラスのインスタンスには、実行時に任意のイベントプロパティを設定できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  この Event のサブクラスは動的です。つまり、このサブクラスのインスタンスには、実行時に任意のイベントプロパティを設定できます。
 
  <p>一方、Event とその他のサブクラスは動的ではないため、これらのクラスで宣言されるプロパティ以外は設定できません。アプリケーションのプロトタイプを作成するときは、DynamicEvent を使用する方が簡単です。これは、Event サブクラスを作成してあらかじめプロパティを宣言する必要がないためです。最終的には DynamicEvents を削除して Event サブクラスを記述する必要がありますが、この方が早くて安全です。DynamicEvent は非常にフレキシブルなため、誤ったプロパティが設定されたり、不適切な型の値が割り当てられたりしても、コンパイラーではエラーをキャッチできません。</p>
 
  <p>例：</p>
 
  <pre>
  var event:DynamicEvent = new DynamicEvent("credentialsChanged");
  event.name = name;
  event.passsword = password; // misspelling won't be caught!
  dispatchEvent(event);
  </pre>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:DynamicEvent:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.events:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
  DropdownEvent クラスは、open イベントおよび close イベントのイベントリスナーに渡されたイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  DropdownEvent クラスは、<codeph>open</codeph> イベントおよび <codeph>close</codeph> イベントのイベントリスナーに渡されたイベントオブジェクトを表します。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:DropdownEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DropdownEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:OPEN</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DropdownEvent:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>イベントをトリガーした入力アクションの種類を示す値です。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DropdownEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
	  DropdownEvent.CLOSE 定数により、close イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DropdownEvent.CLOSE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>close</codeph> イベント用に定義されます。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>イベントをトリガーした入力アクションの種類を示す値です。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
	  DropdownEvent.OPEN 定数により、open イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DropdownEvent.OPEN</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>open</codeph> イベント用に定義されます。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>イベントをトリガーした入力アクションの種類を示す値です。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  ユーザーの操作に対する応答としてコントロールが開かれたり閉じられたりした場合、このプロパティには入力アクションのタイプを示す値が含まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  ユーザーの操作に対する応答としてコントロールが開かれたり閉じられたりした場合、このプロパティには入力アクションのタイプを示す値が含まれます。 値は、<codeph>InteractionInputType.MOUSE</codeph> または <codeph>InteractionInputType.KEYBOARD</codeph> のいずれかです。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DragEvent"><apiName>DragEvent</apiName><shortdesc>
  DragEvent クラスは、ドラッグ &amp; ドロップ操作の一部として送出されるイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  DragEvent クラスは、ドラッグ &amp; ドロップ操作の一部として送出されるイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#DragManager"><linktext>mx.managers.DragManager</linktext></link><link href="mx.core.xml#DragSource"><linktext>mx.core.DragSource</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:DragEvent:DRAG_COMPLETE_dragComplete"><apiName>dragComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_DROP_dragDrop"><apiName>dragDrop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_DROP</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_ENTER_dragEnter"><apiName>dragEnter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_ENTER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_EXIT_dragExit"><apiName>dragExit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_EXIT</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_OVER_dragOver"><apiName>dragOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_OVER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_START_dragStart"><apiName>dragStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_START</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DragEvent:DragEvent"><apiName>DragEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>ドラッグを開始するコンポーネントを指定する IUIComponent です。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>ドラッグされているデータを含む DragSource オブジェクトです。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>指定されたドロップアクション。例えば、<codeph>DragManager.MOVE</codeph> などがあります。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Ctrl</codeph> キーが押されたかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Alt</codeph> キーが押されたかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Shift</codeph> キーが押されたかどうかを示します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。通常は Flex コントロールによって呼び出され、アプリケーションコードでは使用されません。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DragEvent:DRAG_COMPLETE"><apiName>DRAG_COMPLETE</apiName><shortdesc>
	  DragEvent.DRAG_COMPLETE 定数により、dragComplete イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DragEvent.DRAG_COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dragComplete</codeph> イベント用に定義されます。
     
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>イベントの元となるアクション。<codeph>DragManager.COPY</codeph>、<codeph>DragManager.LINK</codeph>、<codeph>DragManager.MOVE</codeph> または <codeph>DragManager.NONE</codeph> のいずれかです。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>ドラッグ操作を開始したコンポーネントです。</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>ドラッグされているデータを含む DragSource オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_DROP"><apiName>DRAG_DROP</apiName><shortdesc>
	  DragEvent.DRAG_DROP 定数により、dragDrop イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragDrop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DragEvent.DRAG_DROP</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dragDrop</codeph> イベント用に定義されます。
     
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>イベントの元となるアクション。<codeph>DragManager.COPY</codeph>、<codeph>DragManager.LINK</codeph>、<codeph>DragManager.MOVE</codeph> または <codeph>DragManager.NONE</codeph> のいずれかです。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>ドラッグ操作を開始したコンポーネントです。</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>ドラッグされているデータを含む DragSource オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_ENTER"><apiName>DRAG_ENTER</apiName><shortdesc>
	  DragEvent.DRAG_ENTER 定数により、dragEnter イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragEnter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DragEvent.DRAG_ENTER</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dragEnter</codeph> イベント用に定義されます。
     
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>イベントの基となるアクションを示します。これは常に、<codeph>DragManager.MOVE</codeph> となります。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>ドラッグ操作を開始したコンポーネントです。</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>ドラッグされているデータを含む DragSource オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_EXIT"><apiName>DRAG_EXIT</apiName><shortdesc>
	  DragEvent.DRAG_EXIT 定数により、dragExit イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragExit</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DragEvent.DRAG_EXIT</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dragExit</codeph> イベント用に定義されます。
     
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>イベントの元となるアクション。<codeph>DragManager.COPY</codeph>、<codeph>DragManager.LINK</codeph>、<codeph>DragManager.MOVE</codeph> または <codeph>DragManager.NONE</codeph> のいずれかです。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>ドラッグ操作を開始したコンポーネントです。</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>ドラッグされているデータを含む DragSource オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_OVER"><apiName>DRAG_OVER</apiName><shortdesc>
	  DragEvent.DRAG_OVER 定数により、dragOver イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DragEvent.DRAG_OVER</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dragOver</codeph> イベント用に定義されます。
     
	 <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	 <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>イベントの元となるアクション。<codeph>DragManager.COPY</codeph>、<codeph>DragManager.LINK</codeph>、<codeph>DragManager.MOVE</codeph> または <codeph>DragManager.NONE</codeph> のいずれかです。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>ドラッグ操作を開始したコンポーネントです。</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>ドラッグされているデータを含む DragSource オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_START"><apiName>DRAG_START</apiName><shortdesc>
	  DragEvent.DRAG_START 定数により、dragStart イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  DragEvent.DRAG_START 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dragStart</codeph> イベント用に定義されます。
     
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>イベントの元となるアクション。<codeph>DragManager.COPY</codeph>、<codeph>DragManager.LINK</codeph>、<codeph>DragManager.MOVE</codeph> または <codeph>DragManager.NONE</codeph> のいずれかです。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>ドラッグ操作を開始したコンポーネントです。</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>ドラッグされているデータを含む DragSource オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:action"><apiName>action</apiName><shortdesc>
	  要求された動作。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  要求された動作。 <codeph>DragManager.COPY</codeph>、<codeph>DragManager.LINK</codeph>、<codeph>DragManager.MOVE</codeph> または <codeph>DragManager.NONE</codeph> のいずれかです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragInitiator"><apiName>dragInitiator</apiName><shortdesc>
	  ドラッグ操作を開始したコンポーネントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
	  ドラッグ操作を開始したコンポーネントです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragSource"><apiName>dragSource</apiName><shortdesc>
	  ドラッグされているデータを含む DragSource オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:DragSource</apiValueClassifier></apiValueDef><apiDesc>
	  ドラッグされているデータを含む DragSource オブジェクトです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:draggedItem"><apiName>draggedItem</apiName><shortdesc>
	  dragInitiator プロパティに IAutomationObject オブジェクトが含まれている場合、このプロパティには、マウスカーソルの付近にある子オブジェクト IAutomationObject が含まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  <codeph>dragInitiator</codeph> プロパティに IAutomationObject オブジェクトが含まれている場合、このプロパティには、マウスカーソルの付近にある子オブジェクト IAutomationObject が含まれます。 <codeph>dragInitiator</codeph> プロパティに IAutomationObject オブジェクトが含まれていない場合、このプロパティは <codeph>null</codeph> になります。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
  Flex トゥイーンエフェクト特有のイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Flex トゥイーンエフェクト特有のイベントオブジェクトを表します。Flex エフェクトでは、次の 2 種類のトゥイーンイベントが送出されます。
  <ul>
    <li><codeph>tweenUpdate</codeph></li>
    <li><codeph>tweenEnd</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link></related-links><adobeApiEvent id="mx.events:TweenEvent:TWEEN_END_tweenEnd"><apiName>tweenEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_END</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_START_tweenStart"><apiName>tweenStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_START</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_UPDATE_tweenUpdate"><apiName>tweenUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TweenEvent:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc><codeph>tweenStart</codeph> イベントまたは <codeph>tweenUpdate</codeph> イベントの場合は、<codeph>onTweenUpdate()</codeph> メソッドに渡された値です。<codeph>tweenEnd</codeph> イベントの場合は、<codeph>onTweenEnd()</codeph> メソッドに渡された値です。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TweenEvent:TWEEN_END"><apiName>TWEEN_END</apiName><shortdesc>
	  TweenEvent.TWEEN_END 定数により、tweenEnd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>TweenEvent.TWEEN_END</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>tweenEnd</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>value</codeph></entry><entry><codeph>onTweenEnd()</codeph> メソッドに渡された値です。</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_START"><apiName>TWEEN_START</apiName><shortdesc>
	  TweenEvent.TWEEN_START 定数により、tweenStart イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>TweenEvent.TWEEN_START</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>tweenStart</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>value</codeph></entry><entry><codeph>onTweenUpdate()</codeph> メソッドに渡された値です。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_UPDATE"><apiName>TWEEN_UPDATE</apiName><shortdesc>
	  TweenEvent.TWEEN_UPDATE 定数により、tweenUpdate イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>TweenEvent.TWEEN_UPDATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>tweenUpdate</codeph> イベント用に定義されます。 
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>value</codeph></entry><entry><codeph>onTweenUpdate()</codeph> メソッドに渡された値です。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:value"><apiName>value</apiName><shortdesc>
	  tweenStart イベントまたは tweenUpdate イベントの場合は、onTweenUpdate() メソッドに渡された値です。tweenEnd イベントの場合は、onTweenEnd() メソッドに渡された値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  <codeph>tweenStart</codeph> イベントまたは <codeph>tweenUpdate</codeph> イベントの場合は、<codeph>onTweenUpdate()</codeph> メソッドに渡された値です。<codeph>tweenEnd</codeph> イベントの場合は、<codeph>onTweenEnd()</codeph> メソッドに渡された値です。
	 
	  <p>このプロパティの正確な値については、各トゥイーンエフェクトのインスタンスクラスを参照してください。</p>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.effectClasses.xml#ActionEffectInstance"><linktext>mx.effects.effectClasses.ActionEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#BlurInstance"><linktext>mx.effects.effectClasses.BlurInstance</linktext></link><link href="mx.effects.effectClasses.xml#DissolveInstance"><linktext>mx.effects.effectClasses.DissolveInstance</linktext></link><link href="mx.effects.effectClasses.xml#FadeInstance"><linktext>mx.effects.effectClasses.FadeInstance</linktext></link><link href="" invalidHref="mx.effects.effectClasses.GlowInstance.xml"><linktext>mx.effects.effectClasses.GlowInstance</linktext></link><link href="mx.effects.effectClasses.xml#MaskEffectInstance"><linktext>mx.effects.effectClasses.MaskEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#MoveInstance"><linktext>mx.effects.effectClasses.MoveInstance</linktext></link><link href="" invalidHref="mx.effects.effectClasses.ResizeInstance.xml"><linktext>mx.effects.effectClasses.ResizeInstance</linktext></link><link href="mx.effects.effectClasses.xml#RotateInstance"><linktext>mx.effects.effectClasses.RotateInstance</linktext></link><link href="mx.effects.effectClasses.xml#ZoomInstance"><linktext>mx.effects.effectClasses.ZoomInstance</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
  FlexEvent クラスは、多数の Flex イベントのイベントリスナーに渡されたイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  FlexEvent クラスは、多数の Flex イベントのイベントリスナーに渡されたイベントオブジェクトを表します。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexEvent:ADD_FOCUS_MANAGER_addFocusManager"><apiName>addFocusManager</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD_FOCUS_MANAGER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ADD_add"><apiName>add</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:APPLICATION_COMPLETE_applicationComplete"><apiName>applicationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:APPLICATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:BACK_KEY_PRESSED_backKeyPressed"><apiName>backKeyPressed</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:BACK_KEY_PRESSED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGE_END_changeEnd"><apiName>changeEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGE_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGE_START_changeStart"><apiName>changeStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGE_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE_contentCreationComplete"><apiName>contentCreationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CONTENT_CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CREATION_COMPLETE_creationComplete"><apiName>creationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CURSOR_UPDATE_cursorUpdate"><apiName>cursorUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CURSOR_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:DATA_CHANGE_dataChange"><apiName>dataChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_FRAME_flexEventEnterFrame"><apiName>flexEventEnterFrame</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_FRAME</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_STATE_enterState"><apiName>enterState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:EXIT_STATE_exitState"><apiName>exitState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:EXIT_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE_flexWindowActivate"><apiName>flexWindowActivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE_flexWindowDeactivate"><apiName>flexWindowDeactivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:HIDE_hide"><apiName>hide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:HIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:IDLE_idle"><apiName>idle</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:IDLE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INITIALIZE_initialize"><apiName>initialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_COMPLETE_initComplete"><apiName>initComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_PROGRESS_initProgress"><apiName>initProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:LOADING_loading"><apiName>loading</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:LOADING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:MENU_KEY_PRESSED_menuKeyPressed"><apiName>menuKeyPressed</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:MENU_KEY_PRESSED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:MUTED_CHANGE_mutedChange"><apiName>mutedChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:MUTED_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:NAVIGATOR_STATE_LOADING_applicationRestoring"><apiName>applicationRestoring</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:NAVIGATOR_STATE_LOADING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:NAVIGATOR_STATE_SAVING_navigatorStateSaving"><apiName>navigatorStateSaving</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:NAVIGATOR_STATE_SAVING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:PREINITIALIZE_preinitialize"><apiName>preinitialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:PREINITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REMOVE_remove"><apiName>remove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REMOVE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:RENDER_flexEventRender"><apiName>flexEventRender</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:RENDER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_END_repeatEnd"><apiName>repeatEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_START_repeatStart"><apiName>repeatStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_repeat"><apiName>repeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SELECTION_CHANGE_deferredContentCreate"><apiName>deferredContentCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SELECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SHOW_show"><apiName>show</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SHOW</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:STATE_CHANGE_COMPLETE_stateChangeComplete"><apiName>stateChangeComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:STATE_CHANGE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:STATE_CHANGE_INTERRUPTED_stateChangeInterrupted"><apiName>stateChangeInterrupted</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:STATE_CHANGE_INTERRUPTED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSFORM_CHANGE_transformChange"><apiName>transformChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSFORM_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSITION_END_transitionEnd"><apiName>transitionEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSITION_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSITION_START_transitionStart"><apiName>transitionStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSITION_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:UPDATE_COMPLETE_updateComplete"><apiName>updateComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:UPDATE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:URL_CHANGED_urlChanged"><apiName>urlChanged</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:URL_CHANGED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALUE_COMMIT_valueCommit"><apiName>valueCommit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALUE_COMMIT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexEvent:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexEvent:ADD_FOCUS_MANAGER"><apiName>ADD_FOCUS_MANAGER</apiName><shortdesc>
      FlexEvent.ADD_FOCUS_MANAGER 定数により、イベントオブジェクトの type プロパティ値が addFocusManager イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addFocusManager</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.ADD_FOCUS_MANAGER</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>addFocusManager</codeph> イベント用に定義されます。このイベントは、focusManager が割り当てられると IFocusManagerContainer から送出されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ADD"><apiName>ADD</apiName><shortdesc>
      FlexEvent.ADD 定数により、add イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.ADD</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>add</codeph> イベント用に定義されます。
     
     <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:APPLICATION_COMPLETE"><apiName>APPLICATION_COMPLETE</apiName><shortdesc>
      FlexEvent.APPLICATION_COMPLETE 定数により、applicationComplete イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.APPLICATION_COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>applicationComplete</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:BACK_KEY_PRESSED"><apiName>BACK_KEY_PRESSED</apiName><shortdesc>
      FlexEvent.BACK_KEY_PRESSED 定数は、backKeyPressed イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>backKeyPressed</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.BACK_KEY_PRESSED</codeph> 定数は、<codeph>backKeyPressed</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:BUTTON_DOWN"><apiName>BUTTON_DOWN</apiName><shortdesc>
      FlexEvent.BUTTON_DOWN 定数により、buttonDown イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buttonDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.BUTTON_DOWN</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>buttonDown</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGE_END"><apiName>CHANGE_END</apiName><shortdesc>
      FlexEvent.CHANGE_END 定数により、changeEnd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changeEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.CHANGE_END</codeph> 定数により、<codeph>changeEnd</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGE_START"><apiName>CHANGE_START</apiName><shortdesc>
      FlexEvent.CHANGE_START 定数により、changeStart イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changeStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.CHANGE_START</codeph> 定数により、<codeph>changeStart</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      FlexEvent.CHANGING 定数により、イベントオブジェクトの type プロパティ値が changing イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.CHANGING</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が<codeph>changing</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE"><apiName>CONTENT_CREATION_COMPLETE</apiName><shortdesc>
      FlexEvent.CONTENT_CREATION_COMPLETE 定数により、イベントオブジェクトの type プロパティ値が contentCreationComplete イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>contentCreationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.CONTENT_CREATION_COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>contentCreationComplete</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CREATION_COMPLETE"><apiName>CREATION_COMPLETE</apiName><shortdesc>
      FlexEvent.CREATION_COMPLETE 定数により、creationComplete イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>creationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.CREATION_COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>creationComplete</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CURSOR_UPDATE"><apiName>CURSOR_UPDATE</apiName><shortdesc>
      FlexEvent.CURSOR_UPDATE 定数により、cursorUpdate イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.CURSOR_UPDATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>cursorUpdate</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:DATA_CHANGE"><apiName>DATA_CHANGE</apiName><shortdesc>
      FlexEvent.DATA_CHANGE 定数により、dataChange イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dataChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.DATA_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>dataChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_FRAME"><apiName>ENTER_FRAME</apiName><shortdesc>
      FlexEvent.ENTER_FRAME 定数により、Event.ENTER_FRAMER イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventEnterFrame</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.ENTER_FRAME</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>Event.ENTER_FRAMER</codeph> イベント用に定義されます。<codeph>SystemManager</codeph> の ENTER_FRAME にリスナーを追加すると、<codeph>stage</codeph>（アクセスが許可されている場合）または <codeph>SystemManager</codeph>（<codeph>stage</codeph> へのアクセスが許可されていない場合）に Event.ENTER_FRAME イベントのリスナーが追加されます。リスナーは、Event.ENTER_FRAME イベントの受信を予想する必要があります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_STATE"><apiName>ENTER_STATE</apiName><shortdesc>
      FlexEvent.ENTER_STATE 定数により、enterState イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enterState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.ENTER_STATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>enterState</codeph> イベント用に定義されます。
     
     <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
      FlexEvent.ENTER 定数により、enter イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.ENTER</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>enter</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:EXIT_STATE"><apiName>EXIT_STATE</apiName><shortdesc>
      FlexEvent.EXIT_STATE 定数により、exitState イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>exitState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.EXIT_STATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>exitState</codeph> イベント用に定義されます。
     
     <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE"><apiName>FLEX_WINDOW_ACTIVATE</apiName><shortdesc>
      FlexEvent.FLEX_WINDOW_ACTIVATE 定数により、イベントオブジェクトの type プロパティ値が flexWindowActivate イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.FLEX_WINDOW_ACTIVATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>flexWindowActivate</codeph> イベント用に定義されます。flash.events.AIREvent.WINDOW_ACTIVATE に似ていますが、Flex ウィンドウまたはポップアップがアクティブ化されると Flash と AIR の両方で送出されます。このイベントは、そのコンテナでのフォーカスを管理する focusManager から送出されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE"><apiName>FLEX_WINDOW_DEACTIVATE</apiName><shortdesc>
      FlexEvent.FLEX_WINDOW_DEACTIVATE 定数により、イベントオブジェクトの type プロパティ値が flexWindowDeactivate イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.FLEX_WINDOW_DEACTIVATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>flexWindowDeactivate</codeph> イベント用に定義されます。flash.events.AIREvent.FLEX_WINDOW_DEACTIVATE に似ていますが、Flex ウィンドウまたはポップアップが非アクティブ化されると Flash と AIR の両方で送出されます。このイベントは、そのコンテナでのフォーカスを管理する focusManager から送出されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:HIDE"><apiName>HIDE</apiName><shortdesc>
      FlexEvent.HIDE 定数により、hide イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.HIDE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>hide</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:IDLE"><apiName>IDLE</apiName><shortdesc>
      FlexEvent.IDLE 定数により、idle イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>idle</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.IDLE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>idle</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INITIALIZE"><apiName>INITIALIZE</apiName><shortdesc>
      FlexEvent.INITIALIZE 定数により、initialize イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.INITIALIZE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>initialize</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INIT_COMPLETE"><apiName>INIT_COMPLETE</apiName><shortdesc>
      Flex アプリケーションの初期化が完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Flex アプリケーションの初期化が完了すると送出されます。このイベントは、カスタムのダウンロードプログレスバーを作成するときに使用します。
     
      <p>このイベントは Preloader クラスにより常に 1 回送出され、Preloader によって送出される最後のイベントです。このイベントが送出された場合、イベントリスナーは Event.COMPLETE イベントを送出する必要があります。</p>
     
      <p>ダウンロードプログレスバーは、<codeph>complete</codeph> イベントを送出する前に <codeph>init_complete</codeph> イベントを受け取る必要があります。 <codeph>complete</codeph> イベントは、ダウンロードプログレスバーの操作がすべて完了し、画面から消える準備ができたことを Preloader に通知します。</p>
      
      <p>ダウンロードプログレスバーは、<codeph>init_complete</codeph> イベントを受け取ってから <codeph>complete</codeph> イベントを送出するまでの間、アニメーションの再生などの追加タスクを実行できます。 <codeph>complete</codeph> イベントの送出は、ダウンロードプログレスバーの最後のアクションになります。</p>
     
      <p>FlexEvent.INIT_COMPLETE 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>initComplete</codeph> イベント用に定義されます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INIT_PROGRESS"><apiName>INIT_PROGRESS</apiName><shortdesc>
      Flex アプリケーションの初期化段階が完了すると送出されます。初期化段階は、measure()、commitProperties()、updateDisplayList() のいずれかのメソッドの呼び出しによって定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Flex アプリケーションの初期化段階が完了すると送出されます。初期化段階は、<codeph>measure()</codeph>、<codeph>commitProperties()</codeph>、<codeph>updateDisplayList()</codeph> のいずれかのメソッドの呼び出しによって定義されます。 このイベントは、初期化段階でのアプリケーションの進捗状況を示します。 このイベントは、カスタムのダウンロードプログレスバーを作成するときに使用します。
     
      <p>FlexEvent.INIT_PROGRESS 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>initProgress</codeph> イベント用に定義されます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
      FlexEvent.INVALID 定数により、invalid イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.INVALID</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>invalid</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      FlexEvent.LOADING 定数により、loading イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.LOADING</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>loading</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:MENU_KEY_PRESSED"><apiName>MENU_KEY_PRESSED</apiName><shortdesc>
      FlexEvent.MENU_KEY_PRESSED 定数は、menuKeyPressed イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuKeyPressed</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.MENU_KEY_PRESSED</codeph> 定数は、<codeph>menuKeyPressed</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:MUTED_CHANGE"><apiName>MUTED_CHANGE</apiName><shortdesc>
      FlexEvent.MUTED_CHANGE 定数により、イベントオブジェクトの type プロパティ値が mutedChange イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mutedChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.MUTED_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>mutedChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:NAVIGATOR_STATE_LOADING"><apiName>NAVIGATOR_STATE_LOADING</apiName><shortdesc>
      FlexEvent.NAVIGATOR_STATE_LOADING 定数は、navigatorStateLoading イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>navigatorStateLoading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.NAVIGATOR_STATE_LOADING</codeph> 定数は、<codeph>navigatorStateLoading</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:NAVIGATOR_STATE_SAVING"><apiName>NAVIGATOR_STATE_SAVING</apiName><shortdesc>
      FlexEvent.NAVIGATOR_STATE_SAVING 定数は、navigatorStateSaving イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>navigatorStateSaving</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.NAVIGATOR_STATE_SAVING</codeph> 定数は、<codeph>navigatorStateSaving</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:PREINITIALIZE"><apiName>PREINITIALIZE</apiName><shortdesc>
      FlexEvent.PREINITIALIZE 定数により、preinitialize イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>preinitialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.PREINITIALIZE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>preinitialize</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:READY"><apiName>READY</apiName><shortdesc>
      FlexEvent.READY 定数により、イベントオブジェクトの type プロパティ値が ready イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.READY</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>ready</codeph> イベント用に定義されます。このイベントは BitmapImage クラスおよび spark の Image クラスから送出されるイベントで、割り当てられたイメージソースが完全にロードされたことを表します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>returnValue</codeph></entry><entry>null</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myImage.addEventListener()</codeph> を使用すると、myImage が <codeph>currentTarget</codeph> の値となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>FlexEvent.READY</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      FlexEvent.REMOVE 定数により、remove イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.REMOVE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>remove</codeph> イベント用に定義されます。
     
     <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:RENDER"><apiName>RENDER</apiName><shortdesc>
      FlexEvent.RENDER 定数により、RENDER イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventRender</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.RENDER</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>Event.RENDER</codeph> イベント用に定義されます。<codeph>SystemManager</codeph> にリスナーを追加すると、<codeph>stage</codeph> または <codeph>SystemManager</codeph>（アプリケーションが <codeph>stage</codeph> にアクセスできない場合）に FlexEvent.RENDER イベントのリスナーが追加されます。リスナーによって、Event.RENDER イベントも生成されます。リスナー関数は、Event.RENDER イベントの受信を予想する必要があります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_END"><apiName>REPEAT_END</apiName><shortdesc>
      FlexEvent.REPEAT_END 定数により、repeatEnd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.REPEAT_END</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>repeatEnd</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_START"><apiName>REPEAT_START</apiName><shortdesc>
      FlexEvent.REPEAT_START 定数により、repeatStart イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.REPEAT_START</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>repeatStart</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT"><apiName>REPEAT</apiName><shortdesc>
      FlexEvent.REPEAT 定数により、repeat イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.REPEAT</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>repeat</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc>
      FlexEvent.SELECTION_CHANGE 定数により、イベントオブジェクトの type プロパティ値が selectionChange イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.SELECTION_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>selectionChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SHOW"><apiName>SHOW</apiName><shortdesc>
      FlexEvent.SHOW 定数により、show イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>show</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.SHOW</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>show</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:STATE_CHANGE_COMPLETE"><apiName>STATE_CHANGE_COMPLETE</apiName><shortdesc>
      FlexEvent.STATE_CHANGE_COMPLETE 定数により、stateChangeComplete イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChangeComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.STATE_CHANGE_COMPLETE</codeph> 定数により、<codeph>stateChangeComplete</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。
     
     <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:STATE_CHANGE_INTERRUPTED"><apiName>STATE_CHANGE_INTERRUPTED</apiName><shortdesc>
      FlexEvent.STATE_CHANGE_INTERRUPTED 定数により、stateChangeInterrupted イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChangeInterrupted</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.STATE_CHANGE_INTERRUPTED</codeph> 定数により、<codeph>stateChangeInterrupted</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。
     
     <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSFORM_CHANGE"><apiName>TRANSFORM_CHANGE</apiName><shortdesc>
      FlexEvent.TRANSFORM_CHANGE 定数により、transformChange イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transformChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.TRANSFORM_CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>transformChange</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSITION_END"><apiName>TRANSITION_END</apiName><shortdesc>
      FlexEvent.TRANSITION_END 定数は、transitionEnd イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transitionEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.TRANSITION_END</codeph> 定数は、<codeph>transitionEnd</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>  
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSITION_START"><apiName>TRANSITION_START</apiName><shortdesc>
      FlexEvent.TRANSITION_START 定数は、transitionStart イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transitionStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.TRANSITION_START</codeph> 定数は、<codeph>transitionStart</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:UPDATE_COMPLETE"><apiName>UPDATE_COMPLETE</apiName><shortdesc>
      FlexEvent.UPDATE_COMPLETE 定数により、updateComplete イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>updateComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.UPDATE_COMPLETE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>updateComplete</codeph> イベント用に定義されます。
     
      <p>このイベントが送出されるのは、1 つ以上の関連するリスナーが、送出するオブジェクトに関連付けられている場合に限られます。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:URL_CHANGED"><apiName>URL_CHANGED</apiName><shortdesc>
      FlexEvent.URL_CHANGED 定数により、urlChanged イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.URL_CHANGED</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>urlChanged</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.modules.ModuleLoader.xml"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:VALID"><apiName>VALID</apiName><shortdesc>
      FlexEvent.VALID 定数により、valid イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.VALID</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>valid</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:VALUE_COMMIT"><apiName>VALUE_COMMIT</apiName><shortdesc>
      FlexEvent.VALUE_COMMIT 定数により、valueCommit イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valueCommit</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexEvent.VALUE_COMMIT</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>valueCommit</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
  別々の信頼されている ApplicationDomain にある DragManager 間で送信され、ドラッグターゲットへの DragEvent の送出を処理するイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:DragEvent</apiBaseClassifier></apiClassifierDef><apiDesc> 
  別々の信頼されている ApplicationDomain にある DragManager 間で送信され、ドラッグターゲットへの DragEvent の送出を処理するイベントです。1 つの DragManager に、マウスで移動して dropTarget に対する変更を探す DragProxy が 1 つあります。ApplicationDomain 内のコードは DragEvent と型が一致しないため、DragEvent を別の ApplicationDomain の潜在的なターゲットに直接送出することはできません。代わりに、DragManager は、他の ApplicationDomain の DragManager が監視する InterDragManagerEvent を送出し、DragEvent をマーシャリングしてそれを潜在的な dropTarget に送出します。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterDragManagerEvent:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>スプライトを基準とするイベント発生位置の水平座標です。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>スプライトを基準とするイベント発生位置の垂直座標です。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>イベントに関連する表示リストオブジェクトへの参照です。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Ctrl</codeph> キーが押されたかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Alt</codeph> キーが押されたかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>Shift</codeph> キーが押されたかどうかを示します。	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>マウスの主ボタンが押されているか（true）押されていないか（false）を示します。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>ユーザーがマウスホイールを 1 目盛り回すごとにスクロールする行数を示します。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dropTarget</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>他のアプリケーションドメイン内の潜在的なドロップターゲットです。そのため、これは他のクラスではなく DisplayObject です。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragEventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>マーシャリングされた DragEvent の作成時に受信側の DragManager によって使用される DragEvent のイベントタイプです。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>ドラッグを開始するコンポーネントを指定する IUIComponent です。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>ドラッグされているデータを含む DragSource オブジェクトです。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>指定されたドロップアクション。例えば、<codeph>DragManager.MOVE</codeph> などがあります。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>draggedItem</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>ドラッグされたアイテムを表すオブジェクトです。
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterDragManagerEvent:DISPATCH_DRAG_EVENT"><apiName>DISPATCH_DRAG_EVENT</apiName><shortdesc>
	 DragEvent を別の ApplicationDomain 内のターゲットに送出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dispatchDragEvent</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 DragEvent を別の ApplicationDomain 内のターゲットに送出します。受信側の DragManager は、DragEvent をマーシャリングし、<codeph>dropTarget</codeph> プロパティで指定されたターゲットに送出します。
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterDragManagerEvent:dragEventType"><apiName>dragEventType</apiName><shortdesc>
	  マーシャリングされた DragEvent の作成時に受信側の DragManager によって使用される DragEvent のイベントタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  マーシャリングされた DragEvent の作成時に受信側の DragManager によって使用される DragEvent のイベントタイプです。
	  
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DragEvent"><linktext>mx.events.DragEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:InterDragManagerEvent:dropTarget"><apiName>dropTarget</apiName><shortdesc>
	  他の ApplicationDomain 内の潜在的なドロップターゲットです。そのため、これは他のクラスではなく DisplayObject です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  他の ApplicationDomain 内の潜在的なドロップターゲットです。そのため、これは他のクラスではなく DisplayObject です。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InvalidateRequestData"><apiName>InvalidateRequestData</apiName><shortdesc>
  InvalidateRequestData クラスでは、SWFBridgeRequest.INVALIDATE_REQUEST 要求で使用される場合に SWFBridgeRequest オブジェクトの data プロパティの値に対する定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  InvalidateRequestData クラスでは、SWFBridgeRequest オブジェクトの <codeph>data</codeph> プロパティの値に対する定数を定義します (<codeph>SWFBridgeRequest.INVALIDATE_REQUEST</codeph> 要求で使用される場合)。
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:InvalidateRequestData:DISPLAY_LIST"><apiName>DISPLAY_LIST</apiName><shortdesc>
      要求ハンドラーが表示リストを無効にする必要があることを示すビットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      要求ハンドラーが表示リストを無効にする必要があることを示すビットです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:PROPERTIES"><apiName>PROPERTIES</apiName><shortdesc>
      要求ハンドラーがプロパティを無効にする必要があることを示すビットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      要求ハンドラーがプロパティを無効にする必要があることを示すビットです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:SIZE"><apiName>SIZE</apiName><shortdesc>
      要求ハンドラーがサイズを無効にする必要があることを示すビットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      要求ハンドラーがサイズを無効にする必要があることを示すビットです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
  ButtonBar コントロール、LinkBar コントロール、TabBar コントロールなどのナビゲーションバー上のナビゲーションアイテムがクリックされたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  ButtonBar コントロール、LinkBar コントロール、TabBar コントロールなどのナビゲーションバー上のナビゲーションアイテムがクリックされたときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.controls.NavBar.xml"><linktext>mx.controls.NavBar</linktext></link><link href="" invalidHref="mx.controls.Button.xml"><linktext>mx.controls.Button</linktext></link><link href="" invalidHref="mx.controls.List.xml"><linktext>mx.controls.List</linktext></link></related-links><adobeApiEvent id="mx.events:ItemClickEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ItemClickEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ItemClickEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ItemClickEvent:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>関連付けられたナビゲーションアイテムのラベルです。 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>関連付けられたナビゲーションアイテムのインデックスです。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>イベントを生成した子オブジェクトです。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>関連付けられているナビゲーションアイテムのデータプロバイダー内のアイテムです。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ItemClickEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
	  ItemClickEvent.ITEM_CLICK 定数により、itemClick イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ItemClickEvent.ITEM_CLICK</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>itemClick</codeph> イベント用に定義されます。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>index</codeph></entry><entry>クリックされたナビゲーションアイテムのインデックスです。</entry></row><row><entry><codeph>item</codeph></entry><entry>クリックされたナビゲーションアイテムのデータプロバイダー内のアイテムです。</entry></row><row><entry><codeph>label</codeph></entry><entry>クリックされたナビゲーションアイテムのラベルです。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>イベントを生成した子オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:index"><apiName>index</apiName><shortdesc>
	  関連付けられたナビゲーションアイテムのインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  関連付けられたナビゲーションアイテムのインデックスです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:item"><apiName>item</apiName><shortdesc>
	  関連付けられているナビゲーションアイテムのデータプロバイダー内のアイテムです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  関連付けられているナビゲーションアイテムのデータプロバイダー内のアイテムです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:label"><apiName>label</apiName><shortdesc>
	  関連付けられたナビゲーションアイテムのラベルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  関連付けられたナビゲーションアイテムのラベルです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  イベントを生成した子オブジェクトです。例えば、ユーザーが ButtonBar コントロールでクリックしたボタンなどがあります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:InteractiveObject"/></apiValueDef><apiDesc>
	  イベントを生成した子オブジェクトです。例えば、ユーザーが ButtonBar コントロールでクリックしたボタンなどがあります。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
  IndexChangedEvent クラスは、インデックスが変更されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  IndexChangedEvent クラスは、インデックスが変更されたときに送出されるイベントを表します。このイベントは、コンテナの子のインデックス値が変更されたこと、Accordion や ViewStack などのナビゲーターコンテナの表示されている子が変更されたこと、または DataGrid コントロールにある列ヘッダーの順序が変更されたことを示します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.core.Container.xml"><linktext>mx.core.Container</linktext></link></related-links><adobeApiEvent id="mx.events:IndexChangedEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE_childIndexChange"><apiName>childIndexChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:IndexChangedEvent:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>インデックスの変更に関連付けられた子オブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>変更前の 0 から始まるインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>変更後の 0 から始まるインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>このイベントをトリガーしたイベントです。
      
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。通常は Flex コントロールによって呼び出され、アプリケーションコードでは使用されません。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:IndexChangedEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      IndexChangedEvent.CHANGE 定数は、Accordion コントロールにより表示パネルが変更されたとき、または ViewStack によりビューが変更されたときなど、インデックスが変更されたことを示す change イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      IndexChangedEvent.CHANGE 定数は、イベントオブジェクトの <codeph>type</codeph> プロパティ値を <codeph>change</codeph> イベント用に定義し、Accordion コントロールにより表示パネルが変更されたとき、または ViewStack によりビューが変更されたときなど、インデックスが変更されたことを示します。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>inputType</codeph></entry><entry>このイベントがマウスによって発生したものなのか、キーボード操作によって発生したものなのかを示します。</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>変更後の 0 から始まるインデックスです。</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>変更前の 0 から始まるインデックスです。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>新しいインデックスに対応する子オブジェクトへの参照が含まれています。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>このイベントをトリガーしたイベントです。</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangedEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE"><apiName>CHILD_INDEX_CHANGE</apiName><shortdesc>
      IndexChangedEvent.CHILD_INDEX_CHANGE 定数により、childIndexChange イベントのイベントオブジェクトの type プロパティ値が定義されます。このイベントは、コンテナの子の中にあるコンポーネントのインデックスが変更されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childIndexChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      IndexChangedEvent.CHILD_INDEX_CHANGE 定数により、childIndexChange イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。このイベントは、コンテナの子の中にあるコンポーネントのインデックスが変更されたことを示します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>inputType</codeph></entry><entry>このイベントがマウスによって発生したものなのか、キーボード操作によって発生したものなのかを示します。</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>変更後の子の 0 から始まるインデックスです。</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>変更前の子の 0 から始まるインデックスです。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>インデックスが変更された子オブジェクトへの参照が含まれています。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>null</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangedEvent.CHILD_INDEX_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:HEADER_SHIFT"><apiName>HEADER_SHIFT</apiName><shortdesc>
      IndexChangedEvent.HEADER_SHIFT 定数は headerShift イベントのイベントオブジェクトの type プロパティ値を定義し、ユーザーが DataGrid 列を新しい位置にドラッグしたときのように、ヘッダーのインデックスが変更されたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerShift</apiData><apiType value="String"/></apiValueDef><apiDesc>
      IndexChangedEvent.HEADER_SHIFT 定数は、イベントオブジェクトの <codeph>type</codeph> プロパティ値を <codeph>headerShift</codeph> イベント用に定義し、ユーザーが DataGrid 列を新しい位置にドラッグしたときのように、ヘッダーのインデックスが変更されたことを示します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>inputType</codeph></entry><entry>このイベントがマウスによって発生したものなのか、キーボード操作によって発生したものなのかを示します。</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>変更後のヘッダーの 0 から始まるインデックスです。</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>変更前のヘッダーの 0 から始まるインデックスです。</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>このイベントをトリガーしたイベントです。</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangedEvent.HEADER_SHIFT</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:newIndex"><apiName>newIndex</apiName><shortdesc>
      変更後の 0 から始まるインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      変更後の 0 から始まるインデックスです。 <codeph>change</codeph> イベントの場合は、現在の子のインデックスです。 <codeph>childIndexChange</codeph> イベントの場合は、子の新規インデックスです。 <codeph>headerShift</codeph> イベントの場合は、ヘッダーの新規インデックスです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:oldIndex"><apiName>oldIndex</apiName><shortdesc>
      変更前の 0 から始まるインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      変更前の 0 から始まるインデックスです。 <codeph>change</codeph> イベントの場合は、前の子のインデックスです。 <codeph>childIndexChange</codeph> イベントの場合は、子の前のインデックスです。 <codeph>headerShift</codeph> イベントの場合は、ヘッダーの前のインデックスです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
      インデックスが変更された子オブジェクトまたは新規インデックスに関連付けられたオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      インデックスが変更された子オブジェクトまたは新規インデックスに関連付けられたオブジェクトです。このプロパティは、ヘッダーの変更のための設定は行われません。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      このイベントをトリガーしたイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      このイベントをトリガーしたイベントです。 このイベントがマウスによって発生したものなのか、キーボード操作によって発生したものなのかを示します。 値が <codeph>null</codeph> になるのは、コンテナにより <codeph>childIndexChanged</codeph> イベントが送出される場合です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
  mx.events.CollectionEvent クラスは、関連付けられたコレクションが変更された場合に送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  mx.events.CollectionEvent クラスは、関連付けられたコレクションが変更された場合に送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#FlexEvent/CURSOR_UPDATE"><linktext>FlexEvent.CURSOR_UPDATE</linktext></link></related-links><adobeApiEvent id="mx.events:CollectionEvent:COLLECTION_CHANGE_collectionChange"><apiName>collectionChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CollectionEvent:COLLECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CollectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CollectionEvent:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントをトリガーしたアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>発生したイベントの種類を示します。 パラメーター値は CollectionEventKind クラスのいずれかの値、またはイベントの種類が不明であることを示す <codeph>null</codeph> になります。
     
      </apiDesc></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc><codeph>kind</codeph> が <codeph>CollectionEventKind.ADD</codeph>、<codeph>CollectionEventKind.MOVE</codeph>、<codeph>CollectionEventKind.REMOVE</codeph> または <codeph>CollectionEventKind.REPLACE</codeph> の場合、この値は、<codeph>items property</codeph> で指定されたアイテムが、ターゲットコレクション内のどの位置にあるかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldLocation</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc><codeph>kind</codeph> が <codeph>CollectionEventKind.MOVE</codeph> の場合、この値は、<codeph>items</codeph> プロパティで指定されたアイテムのターゲットコレクション内での以前の位置を示します。
      
      </apiDesc></apiParam><apiParam><apiItemName>items</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc><codeph>items</codeph> プロパティで説明しているように、イベントの影響を受けるアイテムの情報を持つオブジェクトの配列です。 <codeph>kind</codeph> が <codeph>CollectionEventKind.REFRESH</codeph> または <codeph>CollectionEventKind.RESET</codeph> の場合、この配列の長さは 0 です。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CollectionEvent:COLLECTION_CHANGE"><apiName>COLLECTION_CHANGE</apiName><shortdesc>
      CollectionEvent.COLLECTION_CHANGE 定数は、コレクションが変更されたときに送出されるイベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      CollectionEvent.COLLECTION_CHANGE 定数は、コレクションが変更されたときに送出されるイベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。 イベントの種類によっては無効なプロパティもあります。詳細については、各プロパティの説明を参照してください。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>items</codeph></entry><entry>イベントの影響を受けるアイテムの情報を持つオブジェクトの配列です。 このフィールドの内容はイベントの種類に応じて異なります。詳細については、<codeph>items</codeph> プロパティを参照してください。</entry></row><row><entry><codeph>kind</codeph></entry><entry>イベントの種類です。 有効な値が定数として CollectionEventKind クラスに定義されます。</entry></row><row><entry><codeph>location</codeph></entry><entry><codeph>items</codeph> プロパティで指定されたアイテムのターゲットコレクション内における位置です。</entry></row><row><entry><codeph>oldLocation</codeph></entry><entry><codeph>items</codeph> プロパティで指定されたアイテムのコレクション内における以前の位置です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>CollectionEvent.COLLECTION_CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEvent:items"><apiName>items</apiName><shortdesc>
	  kind が CollectionEventKind.ADD または CollectionEventKind.REMOVE の場合、items プロパティは追加または削除されたアイテムの配列になります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
	  <codeph>kind</codeph> が <codeph>CollectionEventKind.ADD</codeph> または <codeph>CollectionEventKind.REMOVE</codeph> の場合、<codeph>items</codeph> プロパティは追加または削除されたアイテムの配列になります。 <codeph>kind</codeph> が <codeph>CollectionEventKind.REPLACE</codeph> または <codeph>CollectionEventKind.UPDATE</codeph> の場合、<codeph>items</codeph> プロパティは、イベントの影響を受けるアイテムの情報を持つ PropertyChangeEvent オブジェクトの配列になります。 値が変更された場合は、PropertyChangeEvent オブジェクトの <codeph>newValue</codeph> フィールドおよび <codeph>oldValue</codeph> フィールドを調べて、古い値と新しい値を確認します。 <codeph>kind</codeph> が <codeph>CollectionEventKind.REFRESH</codeph> または <codeph>CollectionEventKind.RESET</codeph> の場合、この配列の長さは 0 です。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>PropertyChangeEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:kind"><apiName>kind</apiName><shortdesc>
      発生したイベントの種類を示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>null
	 
	  </apiDefaultValue></apiValueDef><apiDesc>
      発生したイベントの種類を示します。 プロパティ値は CollectionEventKind クラスのいずれかの値、またはイベントの種類が不明であることを示す <codeph>null</codeph> になります。
	 
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:location"><apiName>location</apiName><shortdesc>
      kind 値が CollectionEventKind.ADD、CollectionEventKind.MOVE、CollectionEventKind.REMOVE または CollectionEventKind.REPLACE の場合、このプロパティは、items プロパティで指定されたアイテムのコレクションの 0 から始まるインデックスになります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>kind</codeph> 値が <codeph>CollectionEventKind.ADD</codeph>、<codeph>CollectionEventKind.MOVE</codeph>、<codeph>CollectionEventKind.REMOVE</codeph> または <codeph>CollectionEventKind.REPLACE</codeph> の場合、このプロパティは、<codeph>items</codeph> プロパティで指定されたアイテムのコレクションの 0 から始まるインデックスになります。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:oldLocation"><apiName>oldLocation</apiName><shortdesc>
      kind 値が CollectionEventKind.MOVE の場合、このプロパティは、items プロパティで指定されたアイテムの以前の位置にあるターゲットコレクションの 0 から始まるインデックスになります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>kind</codeph> 値が <codeph>CollectionEventKind.MOVE</codeph> の場合、このプロパティは、<codeph>items</codeph> プロパティで指定されたアイテムの以前の位置にあるターゲットコレクションの 0 から始まるインデックスになります。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
  これは、異なるセキュリティサンドボックス内にあるアプリケーション間で送信されるイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  これは、異なるセキュリティサンドボックス内にあるアプリケーション間で送信されるイベントです。イベントでは、このサンドボックスで何が行われているかを他のサンドボックスのオブジェクトに知らせます。オブジェクトに処理の実行を要求する SWFBridgeRequest とは対照的に、このイベントは通知用です。
  
  <p>このクラスでは、"activation" を参照するイベント定数を定義します。この場合、activation とは、キーボード入力フォーカスを得ることができるアプリケーション内のコンポーネントの 1 つを意味します。アプリケーションがアクティベートされると、最後にフォーカスがあったコンポーネントが再びフォーカスを得ます。</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SWFBridgeEvent:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>デフォルトでは null のオブジェクトですが、イベントのタイプによっては、イベントに関する情報が含まれる場合があります。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeEvent:marshal"><apiName>marshal</apiName><shortdesc>
      リモート ApplicationDomain から現在の ApplicationDomain に SWFBridgeRequest をマーシャリングします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>呼び出し元の ApplicationDomain で作成された SWFBridgeEvent です。
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>別の ApplicationDomain で作成された可能性のある SWFBridgeRequest です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      リモート ApplicationDomain から現在の ApplicationDomain に SWFBridgeRequest をマーシャリングします。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_ACTIVATE"><apiName>BRIDGE_AIR_WINDOW_ACTIVATE</apiName><shortdesc>
	 親ブリッジまたはサンドボックスルートに送出され、AIR ウィンドウがアクティブになったことを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 親ブリッジまたはサンドボックスルートに送出され、AIR ウィンドウがアクティブになったことを通知します。
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_DEACTIVATE"><apiName>BRIDGE_AIR_WINDOW_DEACTIVATE</apiName><shortdesc>
	 親ブリッジまたはサンドボックスルートに送出され、AIR ウィンドウが非アクティブになったことを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 親ブリッジまたはサンドボックスルートに送出され、AIR ウィンドウが非アクティブになったことを通知します。
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_ACTIVATE"><apiName>BRIDGE_APPLICATION_ACTIVATE</apiName><shortdesc>
	 親ブリッジまたはサンドボックスルートに送出され、別のアプリケーションがアクティブになったことを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 親ブリッジまたはサンドボックスルートに送出され、別のアプリケーションがアクティブになったことを通知します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_UNLOADING"><apiName>BRIDGE_APPLICATION_UNLOADING</apiName><shortdesc>
      ブリッジを通じて子アプリケーションの SystemManager に送信され、SWF がアンロードされようとしていることを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationUnloading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ブリッジを通じて子アプリケーションの SystemManager に送信され、SWF がアンロードされようとしていることを通知します。SystemManager はイベントをマーシャリングおよび再送出するため、アプリケーションコードは、SWF ファイルのアンロードを妨害する参照を削除できます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_FOCUS_MANAGER_ACTIVATE"><apiName>BRIDGE_FOCUS_MANAGER_ACTIVATE</apiName><shortdesc>
	  ブリッジを通じて他のすべての FocusManager に送出され、別の FocusManager が現在アクティブであることを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeFocusManagerActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  ブリッジを通じて他のすべての FocusManager に送出され、別の FocusManager が現在アクティブであることを通知します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_NEW_APPLICATION"><apiName>BRIDGE_NEW_APPLICATION</apiName><shortdesc>
	  親ブリッジを通じて SWFLoader に送出され、SystemManager が初期化されたことを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeNewApplication</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  親ブリッジを通じて SWFLoader に送出され、SystemManager が初期化されたことを通知します。 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_ACTIVATE"><apiName>BRIDGE_WINDOW_ACTIVATE</apiName><shortdesc>
	 親ブリッジまたはサンドボックスルートに送出され、ウィンドウがアクティブになったことを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 親ブリッジまたはサンドボックスルートに送出され、ウィンドウがアクティブになったことを通知します。互換アプリケーションでは、<codeph>data</codeph> プロパティは <codeph>window</codeph> および <codeph>notifier</codeph> という 2 つのプロパティを持つオブジェクトです。<codeph>data.window</codeph> プロパティは、アクティブになった SystemManager プロキシです。信頼されていないアプリケーションでは、<codeph>data.window</codeph> プロパティはウィンドウのストリング ID です。<codeph>data.notifier</codeph> プロパティは、イベントを送出しているアプリケーションのブリッジです。イベントは、ブリッジ経由ではなくサンドボックスルートに直接送出できるため、<codeph>event.target</codeph> はイベントを送出しているアプリケーションのブリッジにはなりません。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_DEACTIVATE"><apiName>BRIDGE_WINDOW_DEACTIVATE</apiName><shortdesc>
	 親ブリッジまたはサンドボックスルートに送出され、プロキシ SystemManager が非アクティブになったことを通知します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>brdigeWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 親ブリッジまたはサンドボックスルートに送出され、プロキシ SystemManager が非アクティブになったことを通知します。互換アプリケーションでは、<codeph>data</codeph> プロパティは <codeph>window</codeph> および <codeph>notifier</codeph> という 2 つのプロパティを持つオブジェクトです。<codeph>data.window</codeph> プロパティは、アクティブになった SystemManager プロキシです。信頼されていないアプリケーションでは、<codeph>data.window</codeph> プロパティはウィンドウのストリング ID です。<codeph>data.notifier</codeph> プロパティは、イベントを送出しているアプリケーションのブリッジです。イベントは、ブリッジ経由ではなくサンドボックスルートに直接送出できるため、<codeph>event.target</codeph> はイベントを送出しているアプリケーションのブリッジにはなりません。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:data"><apiName>data</apiName><shortdesc>
	  イベントに関する情報。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  イベントに関する情報。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FocusRequestDirection"><apiName>FocusRequestDirection</apiName><shortdesc>
  FocusDirection クラスは、フォーカスが移動される方向の定数値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  FocusDirection クラスは、フォーカスが移動される方向の定数値を定義します。値は SWFBridgeRequest.MOVE_FOCUS_REQUEST 要求および FocusManager <codeph>moveFocus()</codeph> メソッドで使用されます。
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SWFBridgeRequest"><linktext>SWFBridgeRequest</linktext></link></related-links><apiValue id="mx.events:FocusRequestDirection:BACKWARD"><apiName>BACKWARD</apiName><shortdesc>
      Shit + Tab キーが押された場合にタブループ内の前のコントロールにフォーカスを移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>backward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Shit + Tab キーが押された場合にタブループ内の前のコントロールにフォーカスを移動します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
      タブループ内のどのオブジェクトにもフォーカスがないときに Shift + Tab キーが押された場合に、タブループ内の最後のコントロールにフォーカスを移動します。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
      タブループ内のどのオブジェクトにもフォーカスがないときに Shift + Tab キーが押された場合に、タブループ内の最後のコントロールにフォーカスを移動します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:FORWARD"><apiName>FORWARD</apiName><shortdesc>
      Tab キーが押された場合にタブループ内の次のコントロールにフォーカスを移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>forward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Tab キーが押された場合にタブループ内の次のコントロールにフォーカスを移動します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:TOP"><apiName>TOP</apiName><shortdesc>
      タブループ内のどのオブジェクトにもフォーカスがないときに Tab キーが押された場合に、タブループ内の先頭のコントロールにフォーカスを移動します。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
      タブループ内のどのオブジェクトにもフォーカスがないときに Tab キーが押された場合に、タブループ内の先頭のコントロールにフォーカスを移動します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
  ResourceEvent クラスは、ResourceManager が loadResourceModule() メソッドを呼び出してリソースモジュールのリソースバンドルをロードするときに送出するイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  ResourceEvent クラスは、ResourceManager が <codeph>loadResourceModule()</codeph> メソッドを呼び出してリソースモジュールのリソースバンドルをロードするときに送出するイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.resources.xml#ResourceManager"><linktext>mx.resources.ResourceManager</linktext></link></related-links><adobeApiEvent id="mx.events:ResourceEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResourceEvent:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントオブジェクトの <codeph>type</codeph> プロパティの値です。有効な値は次のとおりです。
      <ul>
         <li><codeph>"progress"</codeph> （<codeph>ResourceEvent.PROGRESS</codeph>）</li>
         <li><codeph>"complete"</codeph> （<codeph>ResourceEvent.COMPLETE</codeph>）</li>
         <li><codeph>"error"</codeph> （<codeph>ResourceEvent.ERROR</codeph>）</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Event オブジェクトがイベントフローのバブリング段階で処理されるかどうかを判断します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Event オブジェクトがキャンセル可能かどうかを判断します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>リスナーがイベントを処理しているときにロードされたバイト数です。
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>ロードプロセスが成功した場合に最終的にロードされるバイトの総数です。
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc><codeph>type</codeph> が <codeph>ResourceEvent.ERROR</codeph> の場合のエラーメッセージです。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResourceEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      リソースモジュール SWF のロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      リソースモジュール SWF のロードが完了すると送出されます。 ResourceEvent.COMPLETE 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>complete</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、<codeph>myButton</codeph> が <codeph>currentTarget</codeph> の値となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>空</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずイベントを受け取るオブジェクトとは限りません。イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用します。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      リソースモジュール SWF ファイルのロード中にエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      リソースモジュール SWF ファイルのロード中にエラーが発生した場合に送出されます。 ResourceEvent.ERROR 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>error</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>空</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>空</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> メソッドを使用すると、<codeph>myButton</codeph> は <codeph>currentTarget</codeph> の値となります。 </entry></row><row><entry><codeph>errorText</codeph></entry>エラーメッセージ。<entry/></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトはイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用します。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      リソースモジュール SWF ファイルのロード中に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      リソースモジュール SWF ファイルのロード中に送出されます。 ResourceEvent.PROGRESS 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>progress</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>ロードされたバイト数です。</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>ロードするバイト数の合計です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> メソッドを使用すると、<codeph>myButton</codeph> は <codeph>currentTarget</codeph> の値となります。</entry></row><row><entry><codeph>errorText</codeph></entry>空<entry/></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトはイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用します。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:errorText"><apiName>errorText</apiName><shortdesc>
      タイプが ERROR の場合のエラーメッセージです。それ以外の場合は、null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>type</codeph> が <codeph>ERROR</codeph> の場合のエラーメッセージです。それ以外の場合は、<codeph>null</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
  FlexMouseEvent クラスは、Flex 固有のマウス操作のイベントリスナーに渡されたイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  FlexMouseEvent クラスは、Flex 固有のマウス操作のイベントリスナーに渡されたイベントオブジェクトを表します。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE_mouseDownOutside"><apiName>mouseDownOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_WHEEL_CHANGING_mouseWheelChanging"><apiName>mouseWheelChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_WHEEL_CHANGING</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE_mouseWheelOutside"><apiName>mouseWheelOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexMouseEvent:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>イベントが発生した水平座標です。
	 
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>イベントが発生した垂直座標です。
	 
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>イベントに関連する表示リストオブジェクトです。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Ctrl キーが押されているかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Alt キーが押されているかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Shift キーが押されているかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Ctrl キーが押されているかどうかを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>ユーザーがマウスホイールを 1 目盛りスクロールさせるごとにスクロールされる行数を示します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE"><apiName>MOUSE_DOWN_OUTSIDE</apiName><shortdesc>
	  FlexMouseEvent.MOUSE_DOWN_OUTSIDE 定数により、mouseDownOutside イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>FlexMouseEvent.MOUSE_DOWN_OUTSIDE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>mouseDownOutside</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Alt キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>左マウスボタンが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Ctrl キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。PopUpManager イベントの場合、このオブジェクトはポップアップウィンドウです。</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>ユーザーがマウスホイールを 1 目盛りスクロールさせるごとにスクロールされる行数を示します。 PopUpManager イベントの場合、この値は 0 になります。</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>イベントが発生した水平座標です。 PopUpManager イベントの場合、この値はポップアップコントロールが基準になります。</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>イベントが発生した垂直座標です。 PopUpManager イベントの場合、この値はポップアップコントロールが基準になります。</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>イベントに関連する表示リストオブジェクトへの参照です。PopUpManager イベントの場合、このオブジェクトはマウスポインターが置かれたコンテナになります。</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Shift キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。 PopUpManager イベントの場合、このオブジェクトはポップアップウィンドウです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexMouseEvent:MOUSE_WHEEL_CHANGING"><apiName>MOUSE_WHEEL_CHANGING</apiName><shortdesc>
      FlexMouseEvent.MOUSE_WHEEL_CHANGING 定数により、mouseWheelChanging イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>FlexMouseEvent.MOUSE_WHEEL_CHANGING</codeph> 定数により、<codeph>mouseWheelChanging</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値が定義されます。
     
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
             <entry>Alt キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
             <entry>左マウスボタンが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
             <entry>Ctrl キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>currentTarget</codeph></entry>
             <entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 
           </entry></row><row><entry><codeph>delta</codeph></entry>
             <entry>ユーザーがマウスホイールを 1 目盛りスクロールさせるごとにスクロールされる行数を示します。  
                 </entry></row><row><entry><codeph>localX</codeph></entry>
             <entry>イベントが発生した水平座標です。 
                 </entry></row><row><entry><codeph>localY</codeph></entry>
             <entry>イベントが発生した垂直座標です。 
                 </entry></row><row><entry><codeph>relatedObject</codeph></entry>
             <entry>イベントに関連する表示リストオブジェクトへの参照です。このイベントの場合、このオブジェクトは mouseWheel イベントのターゲットのコンポーネントです。</entry></row><row><entry><codeph>shiftKey</codeph></entry>
             <entry>Shift キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。
           </entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE"><apiName>MOUSE_WHEEL_OUTSIDE</apiName><shortdesc>
	  FlexMouseEvent.MOUSE_WHEEL_OUTSIDE 定数により、mouseWheelOutside イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>FlexMouseEvent.MOUSE_WHEEL_OUTSIDE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>mouseWheelOutside</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Alt キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>左マウスボタンが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Ctrl キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>currentTarget</codeph></entry>
	         <entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。PopUpManager イベントの場合、このオブジェクトはポップアップウィンドウです。</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>ユーザーがマウスホイールを 1 目盛りスクロールさせるごとにスクロールされる行数を示します。 PopUpManager イベントの場合、この値は 0 になります。</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>イベントが発生した水平座標です。 PopUpManager イベントの場合、この値はポップアップコントロールが基準になります。</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>イベントが発生した垂直座標です。 PopUpManager イベントの場合、この値はポップアップコントロールが基準になります。</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>イベントに関連する表示リストオブジェクトへの参照です。PopUpManager イベントの場合、このオブジェクトはマウスポインターが置かれたコンテナになります。</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Shift キーが押されている（<codeph>true</codeph>）か押されていない（<codeph>false</codeph>）かを示します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。 PopUpManager イベントの場合、このオブジェクトはポップアップウィンドウです。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
  Flex エフェクト特有のイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Flex エフェクト特有のイベントオブジェクトを表します。Flex エフェクトは次のイベントを送出します。
  <ul>
    <li><codeph>effectStart</codeph></li>
    <li><codeph>effectStop</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
    <li><codeph>effectEnd</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links><adobeApiEvent id="mx.events:EffectEvent:EFFECT_END_effectEnd"><apiName>effectEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_END</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_REPEAT_effectRepeat"><apiName>effectRepeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_REPEAT</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_START_effectStart"><apiName>effectStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_START</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_STOP_effectStop"><apiName>effectStop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_STOP</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_UPDATE_effectUpdate"><apiName>effectUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.events:EffectEvent:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>effectInstance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiData>null</apiData><apiDesc>イベントをトリガーしたエフェクトインスタンスを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:EffectEvent:EFFECT_END"><apiName>EFFECT_END</apiName><shortdesc>
      EffectEvent.EFFECT_END 定数により、effectEnd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>EffectEvent.EFFECT_END</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>effectEnd</codeph> イベント用に定義されます。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>イベントのエフェクトインスタンスオブジェクトを表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_REPEAT"><apiName>EFFECT_REPEAT</apiName><shortdesc>
      EffectEvent.EFFECT_REPEAT 定数により、イベントオブジェクトの type プロパティ値が effectRepeat イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectRepeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>EffectEvent.EFFECT_REPEAT</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>effectRepeat</codeph> イベント用に定義されます。 
      
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>イベントのエフェクトインスタンスオブジェクトを表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_START"><apiName>EFFECT_START</apiName><shortdesc>
      EffectEvent.EFFECT_START 定数により、effectStart イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>EffectEvent.EFFECT_START</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>effectStart</codeph> イベント用に定義されます。 
      
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>イベントのエフェクトインスタンスオブジェクトを表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_STOP"><apiName>EFFECT_STOP</apiName><shortdesc>
      EffectEvent.EFFECT_STOP 定数により、イベントオブジェクトの type プロパティ値が effectStop イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStop</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>EffectEvent.EFFECT_STOP</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>effectStop</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>イベントのエフェクトインスタンスオブジェクトを表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_UPDATE"><apiName>EFFECT_UPDATE</apiName><shortdesc>
      EffectEvent.EFFECT_UPDATE 定数により、イベントオブジェクトの type プロパティ値が effectUpdate イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>EffectEvent.EFFECT_UPDATE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>effectUpdate</codeph> イベント用に定義されます。 
      
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>イベントのエフェクトインスタンスオブジェクトを表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:effectInstance"><apiName>effectInstance</apiName><shortdesc>
	  イベントのエフェクトインスタンスオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.effects:IEffectInstance</apiValueClassifier></apiValueDef><apiDesc>
	  イベントのエフェクトインスタンスオブジェクトを表します。このプロパティを使用すれば、イベントリスナー内からエフェクトインスタンスオブジェクトのプロパティにアクセスできます。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
  ValidationResultEvent クラスは、valid と invalid の各検証イベントに必要とされるリスナーに渡すイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  ValidationResultEvent クラスは、<codeph>valid</codeph> と <codeph>invalid</codeph> の各検証イベントに必要とされるリスナーに渡すイベントオブジェクトを表します。 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.validators.xml#Validator"><linktext>mx.validators.Validator</linktext></link><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link><link href="mx.validators.xml#RegExpValidationResult"><linktext>mx.validators.RegExpValidationResult</linktext></link></related-links><adobeApiEvent id="mx.events:ValidationResultEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ValidationResultEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ValidationResultEvent:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>検証に失敗し、イベントをトリガーしたフィールドの名前を表します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>results</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>ValidationResult オブジェクトの配列を表します。このオブジェクトは検証済みのフィールドに各自 1 つずつ格納されます。 
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ValidationResultEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
	  ValidationResultEvent.INVALID 定数により、invalid イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ValidationResultEvent.INVALID</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>invalid</codeph> イベント用に定義されます。 この定数の値は "invalid" です。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>field</codeph></entry><entry>検証に失敗したフィールドの名前を表します。</entry></row><row><entry><codeph>message</codeph></entry><entry>results 配列内のあらゆる ValidationResult オブジェクトから受け取ったエラーメッセージがすべて格納されている単独のストリングを表します。</entry></row><row><entry><codeph>results</codeph></entry><entry>ValidationResult オブジェクトの配列を表します。このオブジェクトは検証済みのフィールドに各自 1 つずつ格納されます。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:VALID"><apiName>VALID</apiName><shortdesc>
	  ValidationResultEvent.VALID 定数により、valid イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ValidationResultEvent.VALID</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>valid</codeph> イベント用に定義されます。 この定数の値は "valid" です。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>field</codeph></entry><entry>空のストリングを表します。</entry></row><row><entry><codeph>message</codeph></entry><entry>空のストリングを表します。</entry></row><row><entry><codeph>results</codeph></entry><entry>空の配列を表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:field"><apiName>field</apiName><shortdesc>
	  検証に失敗し、イベントをトリガーしたフィールドの名前を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  検証に失敗し、イベントをトリガーしたフィールドの名前を表します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:results"><apiName>results</apiName><shortdesc>
	  ValidationResult オブジェクトの配列を表します。このオブジェクトは検証済みのフィールドに各自 1 つずつ格納されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
	  ValidationResult オブジェクトの配列を表します。このオブジェクトは検証済みのフィールドに各自 1 つずつ格納されます。 
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link></related-links></apiValue><apiValue id="mx.events:ValidationResultEvent:message:get"><apiName>message</apiName><shortdesc>
	  results 配列内のあらゆる ValidationResult オブジェクトから受け取ったエラーメッセージがすべて格納されている単独のストリングを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  results 配列内のあらゆる ValidationResult オブジェクトから受け取ったエラーメッセージがすべて格納されている単独のストリングを表します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
  コントロールの子が作成または破棄されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  コントロールの子が作成または破棄されたときに送出されるイベントを表します。 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_ADD_childAdd"><apiName>childAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_ADD</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE_childRemove"><apiName>childRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_REMOVE</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED_overlayCreated"><apiName>overlayCreated</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ChildExistenceChangedEvent:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>作成または破棄された子オブジェクトへの参照です。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_ADD"><apiName>CHILD_ADD</apiName><shortdesc>
	  ChildExistenceChangedEvent.CHILD_ADD 定数により、childAdd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ChildExistenceChangedEvent.CHILD_ADD</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>childAdd</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>作成された子オブジェクトへの参照が含まれます。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE"><apiName>CHILD_REMOVE</apiName><shortdesc>
	  ChildExistenceChangedEvent.CHILD_REMOVE 定数により、childRemove イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ChildExistenceChangedEvent.CHILD_REMOVE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>childRemove</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>削除されようとしている子オブジェクトへの参照が含まれます。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED"><apiName>OVERLAY_CREATED</apiName><shortdesc>
	  ChildExistenceChangedEvent.OVERLAY_CREATED 定数により、overlayCreated イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>overlayCreated</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ChildExistenceChangedEvent.OVERLAY_CREATED</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>overlayCreated</codeph> イベント用に定義されます。
	 
     <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>オーバーレイが作成された子オブジェクトへの参照を格納します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  作成または破棄された子オブジェクトへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  作成または破棄された子オブジェクトへの参照です。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
  StateChangeEvent クラスは、コンポーネントの currentState プロパティが変更されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  StateChangeEvent クラスは、コンポーネントの <codeph>currentState</codeph> プロパティが変更されたときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link><link href="mx.states.xml#State"><linktext>mx.states.State</linktext></link></related-links><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE_currentStateChange"><apiName>currentStateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING_currentStateChanging"><apiName>currentStateChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGING</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StateChangeEvent:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>コンポーネントが終了しているビューステートの名前を表します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>コンポーネントが変更しているビューステートを示す名前を表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。通常は Flex コントロールによって呼び出され、アプリケーションコードでは使用されません。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE"><apiName>CURRENT_STATE_CHANGE</apiName><shortdesc>
	  StateChangeEvent.CURRENT_STATE_CHANGE 定数により、ビューステートが変更されたときに送出されるイベントの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  StateChangeEvent.CURRENT_STATE_CHANGE 定数により、ビューステートが変更されたときに送出されるイベントの <codeph>type</codeph> プロパティ値が定義されます。 この定数の値は "currentStateChange" です。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newState</codeph></entry><entry>変更後のビューステートの名前を表します。</entry></row><row><entry><codeph>oldState</codeph></entry><entry>終了されたビューステートの名前を表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent.CURRENT_STATE_CHANGE</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING"><apiName>CURRENT_STATE_CHANGING</apiName><shortdesc>
	  StateChangeEvent.CURRENT_STATE_CHANGING 定数により、ビューステートが変更されようとしているときに送出されるイベントの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  StateChangeEvent.CURRENT_STATE_CHANGING 定数により、ビューステートが変更されようとしているときに送出されるイベントの <codeph>type</codeph> プロパティ値が定義されます。 この定数の値は "currentStateChanging" です。
	 
	  <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newState</codeph></entry><entry>変更されるビューステートの名前を表します。</entry></row><row><entry><codeph>oldState</codeph></entry><entry>終了されるビューステートの名前を表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent.CURRENT_STATE_CHANGING</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:newState"><apiName>newState</apiName><shortdesc>
	  コンポーネントが変更しているビューステートを示す名前を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  コンポーネントが変更しているビューステートを示す名前を表します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:oldState"><apiName>oldState</apiName><shortdesc>
	  コンポーネントが終了しているビューステートの名前を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  コンポーネントが終了しているビューステートの名前を表します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
  CloseEvent クラスは、Alert コントロールなど、ポップアップウィンドウに固有のイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  CloseEvent クラスは、Alert コントロールなど、ポップアップウィンドウに固有のイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.controls.Alert.xml"><linktext>mx.controls.Alert</linktext></link></related-links><adobeApiEvent id="mx.events:CloseEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CloseEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:CloseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CloseEvent:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>detail プロパティの値です。この値は、ポップアップしたコントロールの中でクリックされたボタンを識別します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CloseEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      CloseEvent.CLOSE 定数により、close イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>CloseEvent.CLOSE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>close</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>detail</codeph></entry><entry>コントロールにボタンが複数個ある場合は、ポップアップしたコントロールの中でクリックされたボタンが <codeph>detail</codeph> によって識別されます。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CloseEvent:detail"><apiName>detail</apiName><shortdesc>
      ポップアップしたコントロールの中でクリックされたボタンを識別します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      ポップアップしたコントロールの中でクリックされたボタンを識別します。このプロパティは、コントロールに複数個のボタンがある場合のためのものです。Alert コントロールは、このプロパティを次の定数のいずれかに設定します。
      <ul>
        <li><codeph>Alert.YES</codeph></li>
        <li><codeph>Alert.NO</codeph></li>
        <li><codeph>Alert.OK</codeph></li>
        <li><codeph>Alert.CANCEL</codeph></li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
  ModuleEvent クラスは、動的にロードされるモジュールに関連するイベントのイベントリスナーに渡すイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  ModuleEvent クラスは、動的にロードされるモジュールに関連するイベントのイベントリスナーに渡すイベントオブジェクトを表します。 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ModuleEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:SETUP_setup"><apiName>setup</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:SETUP</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:UNLOAD_unload"><apiName>unload</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:UNLOAD</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ModuleEvent:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントのタイプです。有効な値は次のとおりです。
      <ul>
         <li>"progress" (<codeph>ModuleEvent.PROGRESS</codeph>);</li>
         <li>"ready" (<codeph>ModuleEvent.READY</codeph>);</li>
         <li>"setup" (<codeph>ModuleEvent.SETUP</codeph>);</li>
         <li>"error" (<codeph>ModuleEvent.ERROR</codeph>);</li>
         <li>"unload" (<codeph>ModuleEvent.UNLOAD</codeph>);</li>
      </ul>
           </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Event オブジェクトがイベントフローのバブリング段階で処理されるかどうかを判断します。
           </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントの伝播中に Event オブジェクトがキャンセル可能かどうかを判断します。
           </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>リスナーがイベントを処理しているときにロードされたバイト数です。
           </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>ロードプロセスが成功した場合にロードされるバイトの総数です。
           </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>イベントタイプが <codeph>ModuleEvent.ERROR</codeph> の場合のエラーメッセージです。
           </apiDesc></apiParam><apiParam><apiItemName>module</apiItemName><apiOperationClassifier>mx.modules:IModuleInfo</apiOperationClassifier><apiData>null</apiData><apiDesc>
           </apiDesc></apiParam><apiTipTexts><apiTipText><codeph>ModuleEvent</codeph> オブジェクトのコンストラクターです。
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ModuleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      モジュールのダウンロード中にエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モジュールのダウンロード中にエラーが発生した場合に送出されます。 <codeph>ModuleEvent.ERROR</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>error</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>空</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>空</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>エラーメッセージです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      モジュールのダウンロード処理中に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モジュールのダウンロード処理中に送出されます。このモジュールはダウンロード処理中に一定の間隔で送出されます。 <codeph>ModuleEvent.PROGRESS</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>progress</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>ロードされたバイト数です。</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>ロードするバイト数の合計です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>空</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:READY"><apiName>READY</apiName><shortdesc>
      モジュールのダウンロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モジュールのダウンロードが完了すると送出されます。 <codeph>ModuleEvent.READY</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>complete</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>ロードされたバイト数です。</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>ロードするバイト数の合計です。</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>空</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:SETUP"><apiName>SETUP</apiName><shortdesc>
      モジュールのうち、情報を取得するのに十分な部分がダウンロードされると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setup</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モジュールのうち、情報を取得するのに十分な部分がダウンロードされると送出されます。 情報の取得は、モジュールに対して <codeph>IFlexModuleFactory.info()</codeph> メソッドを呼び出すことによって行います。 <codeph>ModuleEvent.SETUP</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>setup</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>空</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>空</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>エラーメッセージ。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:UNLOAD"><apiName>UNLOAD</apiName><shortdesc>
      モジュールがアンロードされると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
      モジュールがアンロードされると送出されます。 <codeph>ModuleEvent.UNLOAD</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>unload</codeph> イベント用に定義されます。
           <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>空</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>空</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>errorText</codeph></entry><entry>エラーメッセージ。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      タイプが ModuleEvent.ERROR の場合のエラーメッセージです。それ以外の場合は、null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      タイプが <codeph>ModuleEvent.ERROR</codeph> の場合のエラーメッセージです。それ以外の場合は、<codeph>null</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:module:get"><apiName>module</apiName><shortdesc>
      target。これは、特定のモジュール用インターフェイスのインスタンスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.modules:IModuleInfo</apiValueClassifier></apiValueDef><apiDesc>
      <codeph>target</codeph>。これは、特定のモジュール用インターフェイスのインスタンスです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
  特定のマネージャーのアクティビティについてリスナーに通知するために、ApplicationDomain 間で送信されるイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  特定のマネージャーのアクティビティについてリスナーに通知するために、ApplicationDomain 間で送信されるイベントです。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterManagerRequest:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>プロパティ名、メソッド名、またはインスタンス化するマネージャーの名前です。
     	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>プロパティの値、またはメソッドのパラメーターの配列 (null でない場合) です。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。何も返しませんが、<codeph>value</codeph> プロパティはメソッドの戻り値を表すように変更できます。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterManagerRequest:CURSOR_MANAGER_REQUEST"><apiName>CURSOR_MANAGER_REQUEST</apiName><shortdesc>
      CursorManager 間の通信ではこの要求タイプが使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      CursorManager 間の通信ではこの要求タイプが使用されます。<codeph>name</codeph> プロパティは、CursorManager プロパティの名前です。<codeph>value</codeph> プロパティは、そのプロパティの値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:DRAG_MANAGER_REQUEST"><apiName>DRAG_MANAGER_REQUEST</apiName><shortdesc>
      DragManager 間の通信ではこの要求タイプが使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DragManager 間の通信ではこの要求タイプが使用されます。<codeph>name</codeph> プロパティは、DragManager プロパティの名前です。<codeph>value</codeph> プロパティは、そのプロパティの値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:INIT_MANAGER_REQUEST"><apiName>INIT_MANAGER_REQUEST</apiName><shortdesc>
      他の ApplicationDomain に、その ApplicationDomain のマネージャーがまだインスタンス化されていない場合はインスタンス化するよう要求して、後続の InterManagerRequest の監視に使用できるようにします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      他の ApplicationDomain に、その ApplicationDomain のマネージャーがまだインスタンス化されていない場合はインスタンス化するよう要求して、後続の InterManagerRequest の監視に使用できるようにします。<codeph>name</codeph> プロパティは、インスタンス化するマネージャーの名前です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:SYSTEM_MANAGER_REQUEST"><apiName>SYSTEM_MANAGER_REQUEST</apiName><shortdesc>
      何らかのアクションを実行するよう SystemManager に要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>systemManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      何らかのアクションを実行するよう SystemManager に要求します。<codeph>name</codeph> プロパティは、実行するアクションの名前です。<codeph>value</codeph> プロパティは、そのアクションの実行に必要な値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:TOOLTIP_MANAGER_REQUEST"><apiName>TOOLTIP_MANAGER_REQUEST</apiName><shortdesc>
      ToolTipManager 間の通信ではこの要求タイプが使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tooltipManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ToolTipManager 間の通信ではこの要求タイプが使用されます。<codeph>name</codeph> プロパティは、ToolTipManager プロパティの名前です。<codeph>value</codeph> プロパティは、そのプロパティの値です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:name"><apiName>name</apiName><shortdesc>
      プロパティ名、メソッド名、またはインスタンス化するマネージャーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      プロパティ名、メソッド名、またはインスタンス化するマネージャーです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:value"><apiName>value</apiName><shortdesc>
      プロパティの値、またはメソッドのパラメーターの配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      プロパティの値、またはメソッドのパラメーターの配列です。		
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:Request"><apiName>Request</apiName><shortdesc>
  これは、data プロパティが応答リスナーによって設定される必要のあるイベントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  これは、data プロパティが応答リスナーによって設定される必要のあるイベントです。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:Request:Request"><apiName>Request</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>プロパティ名、メソッド名、またはインスタンス化するマネージャーの名前です。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。何も返しませんが、<codeph>value</codeph> プロパティはメソッドの戻り値を表すように変更できます。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:Request:GET_PARENT_FLEX_MODULE_FACTORY_REQUEST"><apiName>GET_PARENT_FLEX_MODULE_FACTORY_REQUEST</apiName><shortdesc>
      親アプリケーションまたは親モジュールのモジュールファクトリを検索するため、サブアプリケーションまたはサブモジュールから送出されます。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getParentFlexModuleFactoryRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      親アプリケーションまたは親モジュールのモジュールファクトリを検索するため、サブアプリケーションまたはサブモジュールから送出されます。この要求の受信者は、data プロパティをモジュールファクトリに設定する必要があります。メッセージは、ロードされたモジュールまたはアプリケーションの内容から送出されます。
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:Request:value"><apiName>value</apiName><shortdesc>
      プロパティの値、またはメソッドのパラメーターの配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      プロパティの値、またはメソッドのパラメーターの配列です。       
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>