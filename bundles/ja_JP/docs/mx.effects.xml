<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.effects"><apiName>mx.effects</apiName><apiDetail/><apiClassifier id="mx.effects:EffectManager"><apiName>EffectManager</apiName><shortdesc>
  EffectManager クラスは、Flex アプリケーションのオブジェクトにより送出されるイベント（show や move など）を受け取ります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  EffectManager クラスは、Flex アプリケーションのオブジェクトにより送出されるイベント（<codeph>show</codeph> や <codeph>move</codeph> など）を受け取ります。 イベントトリガーに対応して、各イベントでエフェクトがオブジェクトに対し割り当てられているかどうかを判断します。 エフェクトが定義されていれば、エフェクトを再生します。 
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.effects:EffectManager:endEffectsForTarget"><apiName>endEffectsForTarget</apiName><shortdesc>
      ターゲットで現在再生中のエフェクトをすぐに終了します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiDesc>すべてのエフェクトを終了するターゲットコンポーネントを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ターゲットで現在再生中のエフェクトをすぐに終了します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectManager:resumeEventHandling"><apiName>resumeEventHandling</apiName><shortdesc>
      suspendEventHandling() メソッドの呼び出し後、EffectManager クラスによってイベントの処理が再開されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>suspendEventHandling()</codeph> メソッドの呼び出し後、EffectManager クラスによってイベントの処理が再開されます。 画面を更新するエフェクトによって別のエフェクトがトリガーされないように、<codeph>suspendEventHandling()</codeph> メソッドと連動して内部的に使用されます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectManager:suspendEventHandling"><apiName>suspendEventHandling</apiName><shortdesc>
      このメソッドが呼び出されると、resumeEventHandling() が呼び出されるまで、EffectManager クラスはすべてのイベントを無視し、またトリガーされるエフェクトもありません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      このメソッドが呼び出されると、<codeph>resumeEventHandling()</codeph> が呼び出されるまで、EffectManager クラスはすべてのイベントを無視し、またトリガーされるエフェクトもありません。 画面を更新するエフェクトによって別のエフェクトがトリガーされないように内部的に使用されます。
      
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.effects:Effect"><apiName>Effect</apiName><shortdesc>
  Effect クラスはすべての Flex エフェクトの基本的な機能を定義する抽象基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The Effect class defines the following properties,
  which all of its subclasses inherit:</p>
  
  <pre>
  &lt;mx:<i>tagname</i>
    <b>Properties</b>
    customFilter=""
    duration="500"
    filter=""
    hideFocusRing="false"
    perElementOffset="0"
    repeatCount="1"
    repeatDelay="0"
    startDelay="0"
    suspendBackgroundProcessing="false|true"
    target="<i>effect target</i>"
    targets="<i>array of effect targets</i>"
     
    <b>Events</b>
    effectEnd="<i>No default</i>"
    efectStart="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.effects:IEffect</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Effect クラスはすべての Flex エフェクトの基本的な機能を定義する抽象基本クラスです。 Effect クラスはすべてのエフェクトの基本ファクトリクラスを定義します。 EffectInstance クラスはエフェクトインスタンスのすべてのサブクラスについての基本クラスを定義します。
 
  <p>アプリケーションで Effect クラス自体のインスタンスを作成することはありません。 その代わり、Fade、WipeLeft などのいずれかのサブクラスのインスタンスを作成します。</p>
  
  </apiDesc><example conref="SimpleEffectExample.mxml"><swfblock conref="examples/SimpleEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.xml#EffectInstance"><linktext>mx.effects.EffectInstance</linktext></link></related-links><adobeApiEvent id="mx.effects:Effect_mx.events.EffectEvent.EFFECT_START_effectStart"><apiName>effectStart</apiName><shortdesc>
  エフェクトの再生開始時に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_START</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  エフェクトの再生開始時に送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:Effect_mx.events.EffectEvent.EFFECT_STOP_effectStop"><apiName>effectStop</apiName><shortdesc>
  エフェクトが停止されると送出されます。これが発生するのは、stop() メソッドの呼び出しによってエフェクトが中断された場合のみです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_STOP</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  エフェクトが停止されると送出されます。これが発生するのは、<codeph>stop()</codeph> メソッドの呼び出しによってエフェクトが中断された場合のみです。また、エフェクトが終了したことを示すために、EFFECT_END イベントも送出されます。この特別なイベントは、エフェクトが終了状態に到達しなかったことを示すインジケーターとして最初にリスナーへ送信されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:Effect_mx.events.EffectEvent.EFFECT_END_effectEnd"><apiName>effectEnd</apiName><shortdesc>
  エフェクトのインスタンスの 1 つが再生を停止したとき（インスタンスの再生完了時、またはエフェクトが end() メソッドの呼び出しにより中断されたとき）に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_END</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  エフェクトのインスタンスの 1 つが再生を停止したとき（インスタンスの再生完了時、またはエフェクトが <codeph>end()</codeph> メソッドの呼び出しにより中断されたとき）に送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.effects:Effect:Effect"><apiName>Effect</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      <p>通常、エフェクトの開始は次の 3 つの手順から成るプロセスです。</p>
     
      <ul>
        <li><codeph>new</codeph> 演算子を使用してエフェクトオブジェクトのインスタンスを作成します。</li>
        <li><codeph>duration</codeph> など、エフェクトオブジェクトのプロパティを設定します。</li>
        <li><codeph>play()</codeph> メソッドを呼び出すか、またはエフェクトをトリガーに割り当てます。</li>
      </ul>
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:Effect:protected:applyValueToTarget"><apiName>applyValueToTarget</apiName><shortdesc>
      エフェクトインフラストラクチャによって内部的に使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>エフェクトターゲットを表します。
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/><apiDesc>ターゲットプロパティを表します。
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/><apiDesc>プロパティの値です。 
     
      </apiDesc></apiParam><apiParam><apiItemName>props</apiItemName><apiType value="Object"/><apiDesc>オブジェクトの配列です。各配列にはエフェクトが監視しているプロパティの <codeph>start</codeph> および <codeph>end</codeph> オブジェクトが含まれます。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      エフェクトインフラストラクチャによって内部的に使用されます。 <codeph>captureStartValues()</codeph> が呼び出されているときに Flex が <codeph>play()</codeph> メソッドを呼び出す場合、この関数を使用してターゲットを開始状態に戻します。 デフォルトのビヘイビアーでは、<codeph>getValueFromTarget()</codeph> メソッドを使用してキャプチャした値を、ターゲットのプロパティに直接的に設定します。 次に実際の使用例を示します。 <pre>
      
      target[property] = value;</pre>
     
      <p>キャプチャした値を異なる方法で適用する必要がある場合のみ、このメソッドをオーバーライドしてください。 ターゲットのスタイルプロパティは別のメカニズムで設定されます。 キャプチャし、適用するスタイルを指定するには、<codeph>relevantStyles</codeph> プロパティを使用します。 </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:captureEndValues"><apiName>captureEndValues</apiName><shortdesc conref="mx.effects.IEffect#captureEndValues()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#captureEndValues()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:captureMoreStartValues"><apiName>captureMoreStartValues</apiName><shortdesc conref="mx.effects.IEffect#captureMoreStartValues()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>targets</apiItemName><apiType value="Array"/><apiDesc>値がキャプチャされるターゲットの配列を表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffect#captureMoreStartValues()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:captureStartValues"><apiName>captureStartValues</apiName><shortdesc conref="mx.effects.IEffect#captureStartValues()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#captureStartValues()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:createInstance"><apiName>createInstance</apiName><shortdesc conref="mx.effects.IEffect#createInstance()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiDesc>エフェクトのエフェクトインスタンスオブジェクトを表します。
      
      </apiDesc></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffect#createInstance()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:createInstances"><apiName>createInstances</apiName><shortdesc conref="mx.effects.IEffect#createInstances()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc>ターゲットごとに 1 つで、かつエフェクト用でもあるエフェクトインスタンスオブジェクトの配列を表します。
      
      </apiDesc></apiReturn><apiParam><apiItemName>targets</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトの配列を表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffect#createInstances()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:deleteInstance"><apiName>deleteInstance</apiName><shortdesc conref="mx.effects.IEffect#deleteInstance()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>instance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiDesc>エフェクトのインスタンスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffect#deleteInstance()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:protected:effectEndHandler"><apiName>effectEndHandler</apiName><shortdesc>
      エフェクトインスタンスの再生終了時に呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:EffectEvent</apiOperationClassifier><apiDesc>EffectEvent 型のイベントオブジェクトを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      エフェクトインスタンスの再生終了時に呼び出されます。 このメソッドをオーバーライドする場合、必ずスーパーメソッドを呼び出すようにしてください。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:protected:effectStartHandler"><apiName>effectStartHandler</apiName><shortdesc>
      このメソッドは、エフェクトインスタンスの再生開始時に呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:EffectEvent</apiOperationClassifier><apiDesc>EffectEvent 型のイベントオブジェクトを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      このメソッドは、エフェクトインスタンスの再生開始時に呼び出されます。 このメソッドをオーバーライドする場合、必ずスーパーメソッドを呼び出すようにしてください。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:protected:effectStopHandler"><apiName>effectStopHandler</apiName><shortdesc>
      エフェクトインスタンスが stop() メソッドの呼び出しによって停止されると呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:EffectEvent</apiOperationClassifier><apiDesc>EffectEvent 型のイベントオブジェクトを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      エフェクトインスタンスが <codeph>stop()</codeph> メソッドの呼び出しによって停止されると呼び出されます。このメソッドをオーバーライドする場合、必ずスーパーメソッドを呼び出すようにしてください。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:end"><apiName>end</apiName><shortdesc conref="mx.effects.IEffect#end()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>effectInstance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiData>null</apiData><apiDesc>終了する EffectInstance を表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffect#end()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:protected:filterInstance"><apiName>filterInstance</apiName><shortdesc>
      エフェクトインスタンスをフィルタリングするために必要なロジックを決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>エフェクトインスタンスを再生する必要がある場合は、<codeph>true</codeph> を返します。
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>propChanges</apiItemName><apiType value="Array"/><apiDesc>エフェクトによって変更されるプロパティを表します。
     
      </apiDesc></apiParam><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>エフェクトターゲットを表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      エフェクトインスタンスをフィルタリングするために必要なロジックを決定します。 このメソッドは、CompositeEffect クラスによってオーバーライドされます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:getAffectedProperties"><apiName>getAffectedProperties</apiName><shortdesc conref="mx.effects.IEffect#getAffectedProperties()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc>このエフェクトで変更されたプロパティの名前を指定するストリングの配列を表します。
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#getAffectedProperties()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:protected:getValueFromTarget"><apiName>getValueFromTarget</apiName><shortdesc>
      ターゲットからプロパティの値を取得するために captureStartValues() メソッドによって呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>ターゲットプロパティの値です。 
      
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>エフェクトターゲットを表します。
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/><apiDesc>ターゲットプロパティを表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ターゲットからプロパティの値を取得するために <codeph>captureStartValues()</codeph> メソッドによって呼び出されます。 この関数は、エフェクトフレームワークによってのみ内部的に呼び出されます。 デフォルトのビヘイビアーでは、<codeph>target[property]</codeph> だけを返します。 エフェクトの開発時に異なるビヘイビアーが必要な場合は、この関数をオーバーライドできます。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:protected:initInstance"><apiName>initInstance</apiName><shortdesc>
      エフェクトインスタンスにエフェクトのプロパティをコピーします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>instance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiDesc>初期化するエフェクトインスタンスを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      エフェクトインスタンスにエフェクトのプロパティをコピーします。 
     
      <p>Flex は <codeph>Effect.createInstance()</codeph> メソッドからこのメソッドを呼び出します。ユーザーが呼び出す必要はありません。 </p>
     
      <p>カスタムエフェクトを作成する際は、このメソッドをオーバーライドして、Effect クラスからエフェクトインスタンスクラスにプロパティをコピーします。 オーバーライドするときは、<codeph>super.initInstance()</codeph> を呼び出します。 </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:pause"><apiName>pause</apiName><shortdesc conref="mx.effects.IEffect#pause()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#pause()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:play"><apiName>play</apiName><shortdesc conref="mx.effects.IEffect#play()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc>ターゲットごとに 1 つで、かつエフェクト用でもある EffectInstance オブジェクトの配列を表します。
      
      </apiDesc></apiReturn><apiParam><apiItemName>targets</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>このエフェクトを再生するターゲットオブジェクトの配列を表します。 このパラメーターを指定した場合、エフェクトの <codeph>targets</codeph> プロパティは使用されません。
     
      </apiDesc></apiParam><apiParam><apiItemName>playReversedFromEnd</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph> の場合、エフェクトを逆順に再生します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffect#play()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:resume"><apiName>resume</apiName><shortdesc conref="mx.effects.IEffect#resume()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#resume()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:reverse"><apiName>reverse</apiName><shortdesc conref="mx.effects.IEffect#reverse()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#reverse()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Effect:stop"><apiName>stop</apiName><shortdesc conref="mx.effects.IEffect#stop()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffect#stop()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:Effect:protected:applyTransitionEndProperties"><apiName>applyTransitionEndProperties</apiName><shortdesc>
     このフラグは、エフェクトがトランジションで実行された場合に、エフェクト自体が設定した値をそのまま使用するのではなく、その終了状態に応じてプロパティ値を自動的に適用するかどうかを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
     このフラグは、エフェクトがトランジションで実行された場合に、エフェクト自体が設定した値をそのまま使用するのではなく、その終了状態に応じてプロパティ値を自動的に適用するかどうかを制御します。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:protected:endValuesCaptured"><apiName>endValuesCaptured</apiName><shortdesc>
      エフェクトの終了値が既に決定されている場合は true を含むフラグ、エフェクトの実行時にエフェクトターゲットの現在のプロパティから終了値を取得する必要がある場合は false を含むフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトの終了値が既に決定されている場合は <codeph>true</codeph> を含むフラグ、エフェクトの実行時にエフェクトターゲットの現在のプロパティから終了値を取得する必要がある場合は <codeph>false</codeph> を含むフラグです。 このプロパティがデータエフェクトで必要なのは、データエフェクト（DefaultListEffect や DefaultTileListEffect など）を設定する順序が通常のエフェクトよりも複雑なためです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:instanceClass"><apiName>instanceClass</apiName><shortdesc>
      このエフェクトクラスのエフェクトインスタンスクラスを指定する Class 型のオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/></apiValueDef><apiDesc>
      このエフェクトクラスのエフェクトインスタンスクラスを指定する Class 型のオブジェクトを表します。 
      
      <p>Effect クラスのすべてのサブクラスによって、コンストラクター内のこのプロパティが必ず設定されます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:repeatCount"><apiName>repeatCount</apiName><shortdesc>
      エフェクトを繰り返す回数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="int"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを繰り返す回数を表します。 有効な値は 0 以上の整数です。値が 1 の場合、エフェクトは 1 回再生されます。値 0 を設定すると、<codeph>end()</codeph> メソッドを呼び出して停止するまで、エフェクトは無制限に再生されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:repeatDelay"><apiName>repeatDelay</apiName><shortdesc>
      エフェクトを繰り返す前の待機時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを繰り返す前の待機時間を表します（ミリ秒単位）。 有効な値は 0 以上の整数です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:startDelay"><apiName>startDelay</apiName><shortdesc>
      エフェクトを開始する前の待機時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを開始する前の待機時間を表します（ミリ秒単位）。 有効な値は 0 以上の整数です。 <codeph>repeatCount</codeph> プロパティの使用によりエフェクトが繰り返される場合は、エフェクトの初回再生時にのみ <codeph>startDelay</codeph> プロパティが適用されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:suspendBackgroundProcessing"><apiName>suspendBackgroundProcessing</apiName><shortdesc>
      true の場合、エフェクトの再生中にすべてのバックグラウンド処理をブロックします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、エフェクトの再生中にすべてのバックグラウンド処理をブロックします。 バックグラウンド処理では、測定、レイアウト、および、サーバーから受信した応答の処理が行われます。 デフォルト値は <codeph>false</codeph> です。
     
      <p>ほとんどの場合、このプロパティを <codeph>true</codeph> に設定することをお勧めします。true に設定すると、アプリケーションのパフォーマンスが向上するためです。 ただし、次のいずれかが成り立つ場合はプロパティを <codeph>false</codeph> に設定してください。</p>
      <ul>
        <li>エフェクトの再生中にユーザー入力を受信する可能性があり、エフェクトの再生が完了する前にアプリケーションでユーザー入力に応答する必要がある場合。</li>
        <li>エフェクトの再生中にサーバーから応答を受信する可能性があり、エフェクトをまだ再生している間にアプリケーションで応答を処理する必要がある場合。</li>
      </ul>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:className:get"><apiName>className</apiName><shortdesc conref="mx.effects.IEffect#className">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.effects.IEffect#className">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:customFilter:get"><apiName>customFilter</apiName><shortdesc conref="mx.effects.IEffect#customFilter">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:EffectTargetFilter</apiValueClassifier></apiValueDef><apiDesc conref="mx.effects.IEffect#customFilter">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:duration:get"><apiName>duration</apiName><shortdesc conref="mx.effects.IEffect#duration"> 
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.effects.IEffect#duration"> 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:effectTargetHost:get"><apiName>effectTargetHost</apiName><shortdesc conref="mx.effects.IEffect#effectTargetHost">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:IEffectTargetHost</apiValueClassifier></apiValueDef><apiDesc conref="mx.effects.IEffect#effectTargetHost">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:filter:get"><apiName>filter</apiName><shortdesc conref="mx.effects.IEffect#filter">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.effects.IEffect#filter">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:hideFocusRing:get"><apiName>hideFocusRing</apiName><shortdesc conref="mx.effects.IEffect#hideFocusRing">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.effects.IEffect#hideFocusRing">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:isPlaying:get"><apiName>isPlaying</apiName><shortdesc conref="mx.effects.IEffect#isPlaying">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.effects.IEffect#isPlaying">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:perElementOffset:get"><apiName>perElementOffset</apiName><shortdesc conref="mx.effects.IEffect#perElementOffset">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.effects.IEffect#perElementOffset">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      エフェクトの現在の時間位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      エフェクトの現在の時間位置です。このプロパティの値の範囲は、0 から合計継続時間（Effect の <codeph>startDelay</codeph>、<codeph>repeatCount</codeph> および <codeph>repeatDelay</codeph> を含む）までです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:relevantProperties:get"><apiName>relevantProperties</apiName><shortdesc conref="mx.effects.IEffect#relevantProperties">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.effects.IEffect#relevantProperties">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:relevantStyles:get"><apiName>relevantStyles</apiName><shortdesc conref="mx.effects.IEffect#relevantStyles">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.effects.IEffect#relevantStyles">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:target:get"><apiName>target</apiName><shortdesc conref="mx.effects.IEffect#target"> 
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc conref="mx.effects.IEffect#target"> 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:targets:get"><apiName>targets</apiName><shortdesc conref="mx.effects.IEffect#targets">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.effects.IEffect#targets">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Effect:triggerEvent:get"><apiName>triggerEvent</apiName><shortdesc conref="mx.effects.IEffect#triggerEvent">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.events:Event"/></apiValueDef><apiDesc conref="mx.effects.IEffect#triggerEvent">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:MaskEffect"><apiName>MaskEffect</apiName><shortdesc>
  MaskEffect クラスは、Wipe エフェクトや Iris エフェクトなどのようにマスクをアニメーション化するすべてのエフェクトの抽象基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The MaskEffect class defines the following properties, 
  which all of its subclasses inherit:</p>
  
  <pre>
  &lt;mx:<i>tagname</i>
    createMaskFunction=""
    moveEasingFunction=""
    scaleEasingFunction=""
    scaleXFrom=""
    scaleXTo=""
    scaleYFrom=""
    scaleYTo=""
    show="true|false"
    xFrom=""
    xTo=""
    yFrom=""
    yTo=""
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  MaskEffect クラスは、Wipe エフェクトや Iris エフェクトなどのようにマスクをアニメーション化するすべてのエフェクトの抽象基本クラスです。 このクラスは、マスクベースのエフェクトすべてに共通のメソッドとプロパティをカプセル化します。
 
  <p>マスクエフェクトでは、マスクと呼ばれるオーバーレイによってエフェクトが実行されます。 デフォルトでは、マスクはターゲットコンポーネントと同じサイズの矩形です。 </p>
 
  <p>マスクエフェクトでは、エフェクト適用前または適用後のターゲットコンポーネントの状態を不可視にする必要があります。 つまり、マスクエフェクトを適用すると、ターゲットコンポーネントが常に画面上に表示されるか、非表示になります。</p>
 
  <p>マスクの初期倍率と最終倍率は、<codeph>scaleXFrom</codeph>、<codeph>scaleYFrom</codeph>、<codeph>scaleXTo</codeph>、<codeph>scaleX</codeph> の各プロパティを使用して指定します。たとえば、1.0 を指定するとマスクのサイズはターゲットコンポーネントと同じになります。2.0 を指定するとマスクのサイズはコンポーネントの 2 倍になります。0.5 を指定するとマスクのサイズはコンポーネントの半分になります。 4 つのプロパティすべてを指定すると、どのプロパティも使用できるようになります。</p>
 
  <p>ターゲットコンポーネントに対するマスクの初期相対位置と最終相対位置の座標は、<codeph>xFrom</codeph>、<codeph>yFrom</codeph>、<codeph>xTo</codeph>、<codeph>yTo</codeph> の各プロパティを使用して指定します。（0, 0）はターゲットの左上隅を表します。 4 つのプロパティすべてを指定すると、どのプロパティも使用できるようになります。</p>
 
  <p>マスクの初期位置と最終位置の座標は、エフェクトの種類と、<codeph>show</codeph> プロパティの値が <codeph>true</codeph> と <codeph>false</codeph> のどちらであるかによって異なります。 たとえば、WipeLeft エフェクトで <codeph>show</codeph> の値が <codeph>false</codeph> に設定されている場合、マスクの初期位置の座標は（0, 0）、つまりターゲットの左上隅になります。また、最終位置の座標はターゲットの右上の隅、つまり（ターゲットの幅, 0）になります。</p>
 
  <p>WipeLeft エフェクトで <codeph>show</codeph> の値が <codeph>true</codeph> に設定されている場合、マスクの初期位置は（ターゲットの幅, 0）で、最終位置は（0, 0）になります。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#MaskEffectInstance"><linktext>mx.effects.effectClasses.MaskEffectInstance</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link></related-links><adobeApiEvent id="mx.effects:MaskEffect_mx.events.TweenEvent.TWEEN_END_tweenEnd"><apiName>tweenEnd</apiName><shortdesc>
  エフェクトの終了時に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TweenEvent.TWEEN_END</apiEventType><adobeApiEventClassifier>mx.events.TweenEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  エフェクトの終了時に送出されます。
 
  <p>エフェクトが 1 度だけ再生された場合、このイベントは <codeph>effectEnd</codeph> イベントと同時に発生します。 エフェクトを繰り返し再生させる場合、このイベントはエフェクトが繰り返されるたびに発生し、最後のエフェクトの再生後に <codeph>endEffect</codeph> イベントが発生します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:MaskEffect_mx.events.TweenEvent.TWEEN_UPDATE_tweenUpdate"><apiName>tweenUpdate</apiName><shortdesc>
  エフェクトでターゲットが更新されるたびに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TweenEvent.TWEEN_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.TweenEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  エフェクトでターゲットが更新されるたびに送出されます。 このイベントの送出は、<codeph>onMoveTweenUpdate()</codeph> および <codeph>onScaleTweenUpdate()</codeph> メソッドの呼び出しに対応します。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:MaskEffect_mx.events.TweenEvent.TWEEN_START_tweenStart"><apiName>tweenStart</apiName><shortdesc>
  エフェクトの開始時に送出されます。これは onMoveTweenUpdate() および onScaleTweenUpdate() メソッドの最初の呼び出しに対応します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TweenEvent.TWEEN_START</apiEventType><adobeApiEventClassifier>mx.events.TweenEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  エフェクトの開始時に送出されます。これは <codeph>onMoveTweenUpdate()</codeph> および <codeph>onScaleTweenUpdate()</codeph> メソッドの最初の呼び出しに対応します。 同時に、Flex によって、エフェクトの最初の <codeph>tweenUpdate</codeph> イベントも送出されます。
 
  <p><codeph>Effect.effectStart</codeph> イベントは <codeph>tweenStart</codeph> イベントの前に送出されます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.effects:MaskEffect:MaskEffect"><apiName>MaskEffect</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:MaskEffect:getAffectedProperties"><apiName>getAffectedProperties</apiName><shortdesc>
      このエフェクトによって変更されたコンポーネントプロパティを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>このエフェクトで変更されたプロパティの名前を指定するストリングの配列を表します。
     
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      このエフェクトによって変更されたコンポーネントプロパティを返します。 このメソッドは、<codeph>[ "visible", "width", "height" ]</codeph> を含む配列を返します。 WipeDown、WipeLeft、WipeRight、および WipeDown のすべてのエフェクトサブクラスが同一のプロパティを変更するため、これらのクラスではこのメソッドを実装しません。 
     
      <p>MaskEffect をサブクラス化してカスタムエフェクトを作成し、ターゲットの別のプロパティ一式を変更する場合は、このメソッドをオーバーライドして、サブクラスで変更されたプロパティリストを含む配列を返す必要があります。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.effects.xml#Effect/getAffectedProperties()"><linktext>mx.effects.Effect.getAffectedProperties()</linktext></link></related-links></apiOperation><apiOperation id="mx.effects:MaskEffect:protected:tweenEventHandler"><apiName>tweenEventHandler</apiName><shortdesc>
      TweenEffect から TweenEvent が送出されたときに呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:TweenEvent</apiOperationClassifier><apiDesc>TweenEvent 型のイベントオブジェクトを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      TweenEffect から TweenEvent が送出されたときに呼び出されます。 このメソッドをオーバーライドする場合、必ずスーパーメソッドを呼び出すようにしてください。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:MaskEffect:createMaskFunction"><apiName>createMaskFunction</apiName><shortdesc>
      エフェクトによってマスクが作成される際に呼び出される関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      エフェクトによってマスクが作成される際に呼び出される関数を表します。 デフォルト値は、ターゲットと同じサイズの矩形を返す関数です。 
     
      <p>カスタムマスク関数には、次のシグネチャがあります。</p>
     
      <pre>
      public function createLargeMask(targ:Object, boundp:Rectangle):Shape
      {
          var myMask:Shape = new FlexShape();
     
          // Create mask.
     
          return myMask;
      }
      </pre>
     
      <p>カスタムマスク関数は、エフェクトのターゲットコンポーネントに対応する引数を受け取ります。次に、ターゲットのサイズを定義する引数を受け取るため、正確にマスクのサイズを設定できます。 この引数を使用して、<codeph>width</codeph> や <codeph>height</codeph> などのターゲットコンポーネントのプロパティにアクセスすることができます。このため、正しいサイズのマスクを作成できます。</p>
     
      <p>関数により、マスクを定義する 1 つの Shape オブジェクトが返されます。</p>   
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:moveEasingFunction"><apiName>moveEasingFunction</apiName><shortdesc>
      マスクを移動させるのに使用するイージング関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      マスクを移動させるのに使用するイージング関数を表します。
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:scaleEasingFunction"><apiName>scaleEasingFunction</apiName><shortdesc>
      マスクの伸縮に使用するイージング関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      マスクの伸縮に使用するイージング関数を表します。
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:scaleXFrom"><apiName>scaleXFrom</apiName><shortdesc>
      マスクの初期 scaleX を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      マスクの初期 scaleX を表します。
     
      <p>このプロパティを指定するには、<codeph>scaleXFrom</codeph>、<codeph>scaleYFrom</codeph>、<codeph>scaleXTo</codeph> および<codeph>scaleX</codeph> の 4 つのプロパティをすべて指定する必要があります。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:scaleXTo"><apiName>scaleXTo</apiName><shortdesc> 
      マスクの終了 scaleX を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      マスクの終了 scaleX を表します。
     
      <p>このプロパティを指定するには、<codeph>scaleXFrom</codeph>、<codeph>scaleYFrom</codeph>、<codeph>scaleXTo</codeph> および<codeph>scaleX</codeph> の 4 つのプロパティをすべて指定する必要があります。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:scaleYFrom"><apiName>scaleYFrom</apiName><shortdesc> 
      マスクの初期 scaleY を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      マスクの初期 scaleY を表します。
     
      <p>このプロパティを指定するには、<codeph>scaleXFrom</codeph>、<codeph>scaleYFrom</codeph>、<codeph>scaleXTo</codeph> および<codeph>scaleX</codeph> の 4 つのプロパティをすべて指定する必要があります。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:scaleYTo"><apiName>scaleYTo</apiName><shortdesc>
      マスクの終了 scaleY を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      マスクの終了 scaleY を表します。
     
      <p>このプロパティを指定するには、<codeph>scaleXFrom</codeph>、<codeph>scaleYFrom</codeph>、<codeph>scaleXTo</codeph> および<codeph>scaleX</codeph> の 4 つのプロパティをすべて指定する必要があります。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:xFrom"><apiName>xFrom</apiName><shortdesc> 
      マスクの初期位置の x 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      マスクの初期位置の x 座標を表します。
     
      <p>このプロパティを指定するには、<codeph>xFrom</codeph>、<codeph>yFrom</codeph>、<codeph>xTo</codeph> および <codeph>yTo</codeph> の 4 つのプロパティをすべて指定する必要があります。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:xTo"><apiName>xTo</apiName><shortdesc> 
      マスクの移動先の位置の x 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      マスクの移動先の位置の x 座標を表します。
     
      <p>このプロパティを指定するには、<codeph>xFrom</codeph>、<codeph>yFrom</codeph>、<codeph>xTo</codeph> および <codeph>yTo</codeph> の 4 つのプロパティをすべて指定する必要があります。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:yFrom"><apiName>yFrom</apiName><shortdesc>
      マスクの初期位置の y 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      マスクの初期位置の y 座標を表します。 
     
      <p>このプロパティを指定するには、<codeph>xFrom</codeph>、<codeph>yFrom</codeph>、<codeph>xTo</codeph> および <codeph>yTo</codeph> の 4 つのプロパティをすべて指定する必要があります。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:yTo"><apiName>yTo</apiName><shortdesc> 
      マスクの移動先の位置の y 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      マスクの移動先の位置の y 座標を表します。
     
      <p>このプロパティを指定するには、<codeph>xFrom</codeph>、<codeph>yFrom</codeph>、<codeph>xTo</codeph> および <codeph>yTo</codeph> の 4 つのプロパティをすべて指定する必要があります。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:MaskEffect:showTarget:get"><apiName>showTarget</apiName><shortdesc>
      ターゲットコンポーネントを可視にする場合は true に設定し、不可視にする場合は false に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ターゲットコンポーネントを可視にする場合は <codeph>true</codeph> に設定し、不可視にする場合は <codeph>false</codeph> に設定します。 このエフェクトを <codeph>showEffect</codeph> または <codeph>hideEffect</codeph> トリガーで使用するよう指定した場合、<codeph>showTarget</codeph> プロパティが Flex により有効になります。コンポーネントが可視の場合は <codeph>true</codeph> に、不可視の場合は <codeph>false</codeph> に設定されます。 このエフェクトを異なるエフェクトトリガーで使用する場合は、<codeph>startEffect</codeph> イベントのイベントリスナー内でこのエフェクトを設定する必要がある場合があります。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:SoundEffect"><apiName>SoundEffect</apiName><shortdesc>
  SoundEffect クラスは MP3 オーディオファイルを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:SoundEffect&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:SoundEffect
    <b>Properties</b>
    id="ID"
    autoLoad="true|false"
    bufferTime="1000"
    loops="0"
    panEasingFunction=""
    panFrom="0"
    source=""
    startTime="0"
    useDuration="true|false"
    volumeEasingFunction="true|false"
    volumeTo="1"
     
    <b>Events</b>
    complete="<i>No default</i>"
    id3="<i>No default</i>"
    ioError="<i>No default</i>"
    progress="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  SoundEffect クラスは MP3 オーディオファイルを再生します。 たとえば、ユーザーが Button コントロールをクリックしたときに、サウンドを再生することができます。 このエフェクトでは、サウンドの繰り返し再生、ソースファイルの選択、およびボリュームとパンの制御が可能です。 
 
  <p>MP3 ファイルを指定するには、<codeph>source</codeph> プロパティを使用します。 MP3 ファイルを既に埋め込んでいる場合は、<codeph>Embed</codeph> キーワードを使用して、MP3 ファイルの Class オブジェクトを <codeph>source</codeph> プロパティに渡すことができます。 それ以外の場合は、MP3 ファイルへの完全な URL を指定します。</p>
  
  </apiDesc><example conref="SoundEffectExample.mxml"><swfblock conref="examples/SoundEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#SoundEffectInstance"><linktext>mx.effects.effectClasses.SoundEffectInstance</linktext></link><link href="" invalidHref="flash.media.Sound.xml"><linktext>flash.media.Sound</linktext></link></related-links><adobeApiEvent id="mx.effects:SoundEffect_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  サウンドファイルのロード時に定期的に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  サウンドファイルのロード時に定期的に送出されます。
 
  <p>イベントオブジェクトでは、現在ロードされているバイト数とロード対象の合計バイト数にアクセスできます。 このイベントは常に送出されるとは限りません。<codeph>complete</codeph> イベントは、<codeph>progress</codeph> イベントが送出されていなくても送出される場合もあります。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:SoundEffect_flash.events.IOErrorEvent.IO_ERROR_ioError"><apiName>ioError</apiName><shortdesc>
  サウンドファイルのロード中にエラーが発生すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier>flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  サウンドファイルのロード中にエラーが発生すると送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:SoundEffect_flash.events.Event.ID3_id3"><apiName>id3</apiName><shortdesc>
  ID3 データが MP3 サウンドファイルで使用できるようになると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.ID3</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ID3 データが MP3 サウンドファイルで使用できるようになると送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:SoundEffect_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  サウンドファイルのロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  サウンドファイルのロードが完了すると送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.effects:SoundEffect:SoundEffect"><apiName>SoundEffect</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:SoundEffect:load"><apiName>load</apiName><shortdesc>
      source プロパティに URL が指定されている場合は、MP3 をロードします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>source</codeph> プロパティに URL が指定されている場合は、MP3 をロードします。
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:SoundEffect:bufferTime"><apiName>bufferTime</apiName><shortdesc> 
      SoundEffect クラスは、内部の Sound オブジェクトを使用して、MP3 ファイルを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1000</apiData><apiType value="Number"/><apiDefaultValue>1000
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      SoundEffect クラスは、内部 Sound オブジェクトを使用して MP3 ファイルを制御します。 このプロパティは、Sound オブジェクトのバッファーに保持するサウンドデータに応じた最小時間をミリ秒単位で指定します。 Sound オブジェクトは、再生の開始前およびネットワーク停止後の再生の再開前に、少なくともこの大量のデータを取得するまで待機します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:loops"><apiName>loops</apiName><shortdesc>
      ループ内でサウンドを再生する回数を表します。値が 0 の場合、エフェクトは 1 回再生され、値が 1 の場合、エフェクトは 2 回再生されます。以降も同様です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ループ内でサウンドを再生する回数を表します。値が 0 の場合、エフェクトは 1 回再生され、値が 1 の場合、エフェクトは 2 回再生されます。以降も同様です。 MP3 ファイルを繰り返す場合も、<codeph>useDuration</codeph> プロパティの設定により再生時間が決まります。
     
      <p><codeph>duration</codeph> プロパティは、このプロパティよりも優先されます。 エフェクトの継続時間がサウンドを最低 1 回再生するために必要な時間に満たない場合、サウンドはループ処理されません。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:panEasingFunction"><apiName>panEasingFunction</apiName><shortdesc>
      パンエフェクトのイージング関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      パンエフェクトのイージング関数を表します。 この関数を使用して、<codeph>panFrom</codeph> と <codeph>panTo</codeph> の範囲の値を補間します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:panFrom"><apiName>panFrom</apiName><shortdesc>
      Sound オブジェクトの初期パンを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>0.0     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Sound オブジェクトの初期パンを表します。 値の範囲は -1.0 ～ 1.0 です。ここで、-1.0 は左のチャネルのみを使用し、1.0 は右のチャネルのみを使用します。0.0 は 2 つのチャネル間でサウンドが均一になるようにバランスをとります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:panTo"><apiName>panTo</apiName><shortdesc>
      Sound オブジェクトの最終パンを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>0.0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Sound オブジェクトの最終パンを表します。 値の範囲は -1.0 ～ 1.0 です。ここで、-1.0 は左のチャネルのみを使用し、1.0 は右のチャネルのみを使用します。0.0 は 2 つのチャネル間でサウンドが均一になるようにバランスをとります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:startTime"><apiName>startTime</apiName><shortdesc> 
      再生を開始する MP3 ファイルの初期位置を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      再生を開始する MP3 ファイルの初期位置を表します（ミリ秒単位）。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:useDuration"><apiName>useDuration</apiName><shortdesc>
      true の場合、duration プロパティで指定された時間の経過後にエフェクトを停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true    
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、<codeph>duration</codeph> プロパティで指定された時間の経過後にエフェクトを停止します。 <codeph>false</codeph> の場合、MP3 の再生またはループの完了後にエフェクトを停止します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:volumeEasingFunction"><apiName>volumeEasingFunction</apiName><shortdesc>
      ボリュームエフェクトのイージング関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      ボリュームエフェクトのイージング関数を表します。 この関数を使用して、<codeph>volumeFrom</codeph> と <codeph>volumeTo</codeph> の範囲の値を補間します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:volumeFrom"><apiName>volumeFrom</apiName><shortdesc>
      Sound オブジェクトの初期ボリュームを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>1   
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Sound オブジェクトの初期ボリュームを表します。 値の範囲は 0.0 ～ 1.0 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:volumeTo"><apiName>volumeTo</apiName><shortdesc>
      Sound オブジェクトの最終ボリュームを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>1   
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Sound オブジェクトの最終ボリュームを表します。 値の範囲は 0.0 ～ 1.0 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:autoLoad:get"><apiName>autoLoad</apiName><shortdesc> 
      true の場合、source が指定されたら MP3 ファイルをロードします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      <codeph>true</codeph> の場合、<codeph>source</codeph> が指定されたら MP3 ファイルをロードします。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:isLoading:get"><apiName>isLoading</apiName><shortdesc>
      このプロパティは、MP3 がロードされている場合は、true です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      このプロパティは、MP3 がロードされている場合は、<codeph>true</codeph> です。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:sound:get"><apiName>sound</apiName><shortdesc>
      MP3 ファイルがロードされた Sound オブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.media:Sound"/></apiValueDef><apiDesc>
      MP3 ファイルがロードされた Sound オブジェクトを表します。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SoundEffect:source:get"><apiName>source</apiName><shortdesc>
      再生する MP3 ファイルの URL またはクラスを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      再生する MP3 ファイルの URL またはクラスを表します。 MP3 ファイルを既に埋め込んでいる場合は、<codeph>Embed</codeph> キーワードを使用して、MP3 ファイルの Class オブジェクトを <codeph>source</codeph> プロパティに渡すことができます。 それ以外の場合は、MP3 ファイルへの完全な URL を指定します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:TweenEffect"><apiName>TweenEffect</apiName><shortdesc>
  TweenEffect クラスは、Tween オブジェクトを基にしたすべてのエフェクトのスーパークラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:TweenEffect" replacement="spark.effects.Animate" since="4.0">
<description>
  TweenEffect は、Flex 3 のアニメーション化エフェクトのスーパークラスです。Flex 4 で導入された Spark エフェクトは、TweenEffect ではなく、spark.effects.Animate クラスを拡張します。
 </description>
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TweenEffect&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:TagName
    <b>Properties</b>
    easingFunction="<i>easing function name; no default</i>"
     
    <b>Events</b>
    tweenEnd="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  TweenEffect クラスは、Tween オブジェクトを基にしたすべてのエフェクトのスーパークラスです。 このクラスでは、Tween ベースのエフェクトすべてに共通のメソッドとプロパティをカプセル化して、コードの無駄な繰り返しを防止しています。
 
  <p>TweenEffect クラスのサブクラスを作成して、アニメーションを長時間再生するエフェクトを定義できます。 例えば、Resize エフェクトを使用すると、ターゲットのサイズ変更が指定した時間分だけ有効になります。</p>
 
  </apiDesc><example conref="SimpleTweenEffectExample.mxml"><swfblock conref="examples/SimpleTweenEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.effects.effectClasses.xml#TweenEffectInstance"><linktext>mx.effects.effectClasses.TweenEffectInstance</linktext></link></related-links><adobeApiEvent id="mx.effects:TweenEffect_mx.events.TweenEvent.TWEEN_END_tweenEnd"><apiName>tweenEnd</apiName><shortdesc>
  トゥイーンエフェクトの終了時に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TweenEvent.TWEEN_END</apiEventType><adobeApiEventClassifier>mx.events.TweenEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  トゥイーンエフェクトの終了時に送出されます。 このイベントは、<codeph>TweenEffectInstance.onTweenEnd()</codeph> メソッドの呼び出しに対応しています。
 
  <p>トゥイーンエフェクトが 1 度だけ再生された場合、このイベントは <codeph>effectEnd</codeph> イベントと同時に発生します。 トゥイーンエフェクトを繰り返し再生させる場合、このイベントはエフェクトが繰り返されるたびに発生し、最後のエフェクトの再生後に <codeph>endEffect</codeph> イベントが発生します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:TweenEffect_mx.events.TweenEvent.TWEEN_UPDATE_tweenUpdate"><apiName>tweenUpdate</apiName><shortdesc>
  トゥイーンエフェクトでターゲットが更新されるたびに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TweenEvent.TWEEN_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.TweenEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  トゥイーンエフェクトでターゲットが更新されるたびに送出されます。 このイベントは、<codeph>TweenEffectInstance.onTweenUpdate()</codeph> メソッドの呼び出しに対応しています。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.effects:TweenEffect_mx.events.TweenEvent.TWEEN_START_tweenStart"><apiName>tweenStart</apiName><shortdesc>
  トゥイーンエフェクトの開始時に送出されます。これは onTweenUpdate() メソッドの最初の呼び出しに対応します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TweenEvent.TWEEN_START</apiEventType><adobeApiEventClassifier>mx.events.TweenEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  トゥイーンエフェクトの開始時に送出されます。これは <codeph>onTweenUpdate()</codeph> メソッドの最初の呼び出しに対応します。 同時に、Flex によって、エフェクトの最初の <codeph>tweenUpdate</codeph> イベントも送出されます。
 
  <p><codeph>Effect.effectStart</codeph> イベントは <codeph>tweenStart</codeph> イベントの前に送出されます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.effects:TweenEffect:TweenEffect"><apiName>TweenEffect</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:TweenEffect:protected:tweenEventHandler"><apiName>tweenEventHandler</apiName><shortdesc>
      TweenEffect から TweenEvent が送出されたときに呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:TweenEvent</apiOperationClassifier><apiDesc>TweenEvent 型のイベントオブジェクトを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      TweenEffect から TweenEvent が送出されたときに呼び出されます。 このメソッドをオーバーライドする場合、必ずスーパーメソッドを呼び出すようにしてください。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:TweenEffect:easingFunction"><apiName>easingFunction</apiName><shortdesc>
      アニメーションのイージング関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiType value="Function"/></apiValueDef><apiDesc>
      アニメーションのイージング関数を表します。 イージング関数は初期値と終了値の間の補間に使用されます。 一般のイージング関数は線形補間を実行するだけですが、より高度なイージング関数では加速と減速の効果を生成して、アニメーションがより自然になるようにします。
     
      <p>イージング関数を指定しない場合は、<codeph>Math.sin()</codeph> メソッドに基づくイージング関数が使用されます。</p>
     
      <p>イージング関数は、Robert Penner 氏が普及に尽力した関数シグネチャに従っています。 この関数では、4 つの引数を使用できます。 1 番目の引数は、アニメーションの開始時刻を 0 とした "現在の時刻" です。 2 番目の引数は、アニメーション開始時の初期値（数値）です。 3 番目の引数は、終了値から初期値を引いた値です。 4 番目の引数は、アニメーションの再生時間です。 戻り値は、現在の時刻に対する補間値になります。 通常、この値は初期値と終了値の間の値になります。</p>
     
      <p>このプロパティの値は、必ず関数オブジェクトとなります。</p>
     
      <p>Flex は、mx.effects.easing パッケージにイージング関数を一式含んでいます。</p>
     
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Tween"><apiName>Tween</apiName><shortdesc>
  Tween クラスは、トゥイーン、つまり一定時間にターゲットオブジェクト上で実行されるプロパティアニメーションを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:Tween" replacement="spark.effects.animation.Animation" since="4.0">
<description>
  Tween は、Flex 3 のエフェクトの基本アニメーションクラスです。Flex 4 で導入された Spark エフェクトでは、同様の機能を提供する spark.effects.animation.Animation クラスが使用されます。
 </description>
	</Alternative></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Tween クラスは、トゥイーン、つまり一定時間にターゲットオブジェクト上で実行されるプロパティアニメーションを定義します。 Move エフェクトによって実行される位置の変更、Resize や Zoom エフェクトによって実行されるサイズの変更、または Fade や Dissolve エフェクトによって実行される可視性の変更がアニメーションである場合もあれば、その他のタイプのアニメーションである場合もあります。
 
  <p>トゥイーンエフェクトを定義する場合、通常、<codeph>EffectInstance.play()</codeph> メソッドのオーバーライドで Tween クラスのインスタンスを作成します。 Tween インスタンスでは、アニメーションを定義するための <codeph>startValue</codeph>、<codeph>endValue</codeph> および <codeph>duration</codeph> プロパティとオプションのイージング関数を使用できます。</p> 
 
  <p>Tween オブジェクトは、エフェクトインスタンスで、エフェクトの持続時間の間、<codeph>mx.effects.effectClasses.TweenEffectInstance.onTweenUpdate()</codeph> コールバック関数を一定の間隔で呼び出し、<codeph>onTweenUpdate()</codeph> メソッドに <codeph>startValue</codeph> と <codeph>endValue</codeph> の間の補間値を渡します。 通常、コールバック関数はターゲットオブジェクトのプロパティをいくつか更新することで、エフェクトの持続時間の間、そのオブジェクトをアニメーション化します。</p>
 
  <p>エフェクトの再生が終了すると、Tween オブジェクトは <codeph>mx.effects.effectClasses.TweenEffectInstance.onTweenEnd()</codeph> コールバック関数を呼び出します（定義されている場合）。 </p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.effects.effectClasses.xml#TweenEffectInstance"><linktext>mx.effects.effectClasses.TweenEffectInstance</linktext></link></related-links><apiConstructor id="mx.effects:Tween:Tween"><apiName>Tween</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>listener</apiItemName><apiType value="Object"/><apiDesc>アニメーションの間隔ごとに通知されるオブジェクトを表します。 通常は、<codeph>this</codeph> キーワードを値として渡します。 <codeph>listener</codeph> で <codeph>onTweenUpdate()</codeph> メソッドを定義する必要があり、場合によっては <codeph>onTweenEnd()</codeph> メソッドも定義する必要があります。 前者のメソッドはアニメーションの間隔ごとに呼び出され、後者はアニメーションが完了した後にのみ呼び出されます。
     
      </apiDesc></apiParam><apiParam><apiItemName>startValue</apiItemName><apiType value="Object"/><apiDesc>アニメーションの初期値を表します（1 つまたは複数）。 数値、または数値の配列のいずれかになります。 数値が渡された場合、Tween は、その数値と <codeph>endValue</codeph> パラメーターで渡された数値との間で補間を実行します。 数値の配列が渡された場合は、配列内の各数値が補間されます。
     
      </apiDesc></apiParam><apiParam><apiItemName>endValue</apiItemName><apiType value="Object"/><apiDesc>アニメーションの終了値を表します（1 つまたは複数）。 この引数の型は <codeph>startValue</codeph> パラメーターの型と同じである必要があります。
     
      </apiDesc></apiParam><apiParam><apiItemName>duration</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>アニメーションの再生時間を表します（ミリ秒単位）。
     
      </apiDesc></apiParam><apiParam><apiItemName>minFps</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc><codeph>onTweenUpdate()</codeph> メソッドを呼び出す必要がある 1 秒ごとの最小回数を表します。 トゥイーンコードは、できるだけ頻繁に <codeph>onTweenUpdate()</codeph> メソッドを呼び出そうとします（1 秒あたり最大 100 回）。 ただし、頻度が <codeph>minFps</codeph> よりも少なくなった場合は、アニメーションの再生時間が自動的に増やされます。 その結果、CPU サイクルが得られずに一時的にフリーズしたアニメーションは、フリーズした位置から再生が再開されます。フリーズした位置よりも後の位置から突然再開することはありません。 
     
      </apiDesc></apiParam><apiParam><apiItemName>updateFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc><codeph>listener.OnTweenUpdate()</codeph> の代わりに使用される代替更新コールバック関数を指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>endFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc><codeph>listener.OnTweenEnd()</codeph> の代わりに使用される代替更新コールバック関数を指定します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      <p>コンストラクターが呼び出されると、アニメーションの再生が自動的に開始されます。</p>
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:Tween:endTween"><apiName>endTween</apiName><shortdesc>
      トゥイーンを中断し、直ちにトゥイーンの終わりにジャンプし、onTweenEnd() コールバック関数を呼び出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      トゥイーンを中断し、直ちにトゥイーンの終わりにジャンプし、<codeph>onTweenEnd()</codeph> コールバック関数を呼び出します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Tween:pause"><apiName>pause</apiName><shortdesc>
      resume() メソッドを呼び出すまで、エフェクトを一時停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>resume()</codeph> メソッドを呼び出すまで、エフェクトを一時停止します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Tween:resume"><apiName>resume</apiName><shortdesc>
      pause() メソッドを呼び出し、エフェクトを一時停止した後、再開させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>pause()</codeph> メソッドを呼び出してエフェクトを一時停止した後、再開させます。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Tween:reverse"><apiName>reverse</apiName><shortdesc>
      エフェクトの現在位置から開始して、逆順でエフェクトを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトの現在位置から開始して、逆順でエフェクトを再生します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Tween:seek"><apiName>seek</apiName><shortdesc>
      トゥイーンエフェクトを指定の位置に移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>playheadTime</apiItemName><apiType value="Number"/><apiDesc>0 から <codeph>duration</codeph> プロパティの値の範囲に収まる位置を指定します（ミリ秒単位）。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      トゥイーンエフェクトを指定の位置に移動します。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Tween:setTweenHandlers"><apiName>setTweenHandlers</apiName><shortdesc>
      デフォルトでは、Tween クラスはエフェクトインスタンスでエフェクトの持続時間の間、mx.effects.effectClasses.TweenEffectInstance.onTweenUpdate() コールバック関数を一定の間隔で呼び出し、さらにエフェクトの持続時間の終了時に、オプションの mx.effects.effectClasses.TweenEffectInstance.onTweenEnd() コールバック関数を呼び出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>updateFunction</apiItemName><apiType value="Function"/><apiDesc>更新コールバック関数を指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>endFunction</apiItemName><apiType value="Function"/><apiDesc>終了コールバック関数を指定します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      デフォルトでは、Tween クラスはエフェクトインスタンスでエフェクトの持続時間の間、<codeph>mx.effects.effectClasses.TweenEffectInstance.onTweenUpdate()</codeph> コールバック関数を一定の間隔で呼び出し、さらにエフェクトの持続時間の終了時に、オプションの <codeph>mx.effects.effectClasses.TweenEffectInstance.onTweenEnd()</codeph> コールバック関数を呼び出します。 
     
      <p>このメソッドによって、異なるメソッドを、更新コールバック関数と終了コールバック関数として指定することができます。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:Tween:stop"><apiName>stop</apiName><shortdesc>
      イベントを送出したり、Tween の endFunction や onTweenEnd() を呼び出したりせずに、トゥイーンを停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      イベントを送出したり、Tween の endFunction や <codeph>onTweenEnd()</codeph> を呼び出したりせずに、トゥイーンを停止します。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:Tween:duration"><apiName>duration</apiName><shortdesc>
      アニメーションの継続時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>3000</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      アニメーションの継続時間を表します（ミリ秒単位）。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Tween:listener"><apiName>listener</apiName><shortdesc>
      アニメーションの間隔ごとに通知されるオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      アニメーションの間隔ごとに通知されるオブジェクトを表します。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Tween:easingFunction:set"><apiName>easingFunction</apiName><shortdesc>
      アニメーションのイージング関数を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Function"/></apiValueDef><apiDesc>
      アニメーションのイージング関数を設定します。 イージング関数は <codeph>startValue</codeph> 値と <codeph>endValue</codeph> 値の間の補間に使用されます。 一般のイージング関数は線形補間を実行しますが、より高度なイージング関数では加速と減速の効果を生成して、アニメーションがより自然になるようにします。
     
      <p>イージング関数を指定しない場合は、<codeph>Math.sin()</codeph> メソッドに基づくイージング関数が使用されます。</p>
     
      <p>イージング関数は、Robert Penner 氏が普及に尽力した関数シグネチャに従っています。 この関数では、4 つの引数を使用できます。 1 番目の引数は、アニメーションの開始時刻を 0 とした "現在の時刻" です。 2 番目の引数は、アニメーション開始時の初期値（数値）です。 3 番目の引数は、終了値から初期値を引いた値です。 4 番目の引数は、アニメーションの再生時間です。 戻り値は、現在の時刻に対する補間値になります。通常は、初期値と終了値の間の値になります。</p>
     
      <p>Flex は、mx.effects.easing パッケージにイージング関数を一式含んでいます。</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:EffectInstance"><apiName>EffectInstance</apiName><shortdesc>
  EffectInstance クラスはターゲットで再生されるエフェクトのインスタンスを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.effects:IEffectInstance</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  EffectInstance クラスはターゲットで再生されるエフェクトのインスタンスを表します。 各ターゲットには個別のエフェクトインスタンスが関連付けられています。 エフェクトインスタンスは一時的に有効になるインスタンスです。 インスタンスはエフェクトがターゲットで再生される場合に作成され、再生が終了するとそのインスタンスは破棄されます。 ターゲットで複数のエフェクトが同時に再生されている場合（例えば、Parallel エフェクト）は、エフェクトごとに別々のエフェクトインスタンスが作成されます。
 
  <p>エフェクトの開発時には、カスタムエフェクト用のインスタンスクラスを作成する必要があります。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links><apiConstructor id="mx.effects:EffectInstance:EffectInstance"><apiName>EffectInstance</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>このエフェクトでアニメーション化する UIComponent オブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:EffectInstance:end"><apiName>end</apiName><shortdesc conref="mx.effects.IEffectInstance#end()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#end()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:finishEffect"><apiName>finishEffect</apiName><shortdesc conref="mx.effects.IEffectInstance#finishEffect()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#finishEffect()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:finishRepeat"><apiName>finishRepeat</apiName><shortdesc conref="mx.effects.IEffectInstance#finishRepeat()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#finishRepeat()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:initEffect"><apiName>initEffect</apiName><shortdesc conref="mx.effects.IEffectInstance#initEffect()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>エフェクトをトリガーするために送出されたイベントオブジェクトを表します。 たとえば、トリガーが mouseDownEffect の場合、イベントは MouseEvent となり、タイプは MouseEvent.MOUSEDOWN と同じになります。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#initEffect()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:pause"><apiName>pause</apiName><shortdesc conref="mx.effects.IEffectInstance#pause()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#pause()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:play"><apiName>play</apiName><shortdesc conref="mx.effects.IEffectInstance#play()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#play()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:resume"><apiName>resume</apiName><shortdesc conref="mx.effects.IEffectInstance#resume()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#resume()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:reverse"><apiName>reverse</apiName><shortdesc conref="mx.effects.IEffectInstance#reverse()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#reverse()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:startEffect"><apiName>startEffect</apiName><shortdesc conref="mx.effects.IEffectInstance#startEffect()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#startEffect()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:EffectInstance:stop"><apiName>stop</apiName><shortdesc conref="mx.effects.IEffectInstance#stop()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.effects.IEffectInstance#stop()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:EffectInstance:protected:playCount"><apiName>playCount</apiName><shortdesc> 
      インスタンスが再生された回数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> 
      インスタンスが再生された回数です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:className:get"><apiName>className</apiName><shortdesc conref="mx.effects.IEffectInstance#className">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#className">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:duration:get"><apiName>duration</apiName><shortdesc conref="mx.effects.IEffectInstance#duration"> 
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#duration"> 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:effectTargetHost:get"><apiName>effectTargetHost</apiName><shortdesc conref="mx.effects.IEffectInstance#effectTargetHost">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:IEffectTargetHost</apiValueClassifier></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#effectTargetHost">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:effect:get"><apiName>effect</apiName><shortdesc conref="mx.effects.IEffectInstance#effect">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:IEffect</apiValueClassifier></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#effect">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:hideFocusRing:get"><apiName>hideFocusRing</apiName><shortdesc conref="mx.effects.IEffectInstance#hideFocusRing">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#hideFocusRing">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      エフェクトの現在の時間位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      エフェクトの現在の時間位置です。このプロパティの値の範囲は、0 から合計継続時間（Effect の <codeph>startDelay</codeph>、<codeph>repeatCount</codeph> および <codeph>repeatDelay</codeph> を含む）までです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:propertyChanges:get"><apiName>propertyChanges</apiName><shortdesc conref="mx.effects.IEffectInstance#propertyChanges">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects.effectClasses:PropertyChanges</apiValueClassifier></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#propertyChanges">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:repeatCount:get"><apiName>repeatCount</apiName><shortdesc conref="mx.effects.IEffectInstance#repeatCount">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#repeatCount">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:repeatDelay:get"><apiName>repeatDelay</apiName><shortdesc conref="mx.effects.IEffectInstance#repeatDelay">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#repeatDelay">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:startDelay:get"><apiName>startDelay</apiName><shortdesc conref="mx.effects.IEffectInstance#startDelay">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#startDelay">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:suspendBackgroundProcessing:get"><apiName>suspendBackgroundProcessing</apiName><shortdesc conref="mx.effects.IEffectInstance#suspendBackgroundProcessing">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#suspendBackgroundProcessing">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:target:get"><apiName>target</apiName><shortdesc conref="mx.effects.IEffectInstance#target">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#target">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectInstance:triggerEvent:get"><apiName>triggerEvent</apiName><shortdesc conref="mx.effects.IEffectInstance#triggerEvent">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.events:Event"/></apiValueDef><apiDesc conref="mx.effects.IEffectInstance#triggerEvent">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Zoom"><apiName>Zoom</apiName><shortdesc>
  Zoom エフェクトは、中心点を基準にオブジェクトを拡大または縮小します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:Zoom" replacement="spark.effects.Scale" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Zoom&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Zoom
    id="ID"
    captureRollEvents="false|true"
    originX="Calculated"
    originY="Calculated"
    zoomWidthFrom="0.01"
    zoomWidthTo="1.0"
    zoomHeightFrom="0.01"
    zoomHeightTo="1.0"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Zoom エフェクトは、中心点を基準にオブジェクトを拡大または縮小します。
 
  <p>システムフォントを使用してレンダリングされたテキストに Zoom エフェクトを適用すると、Flex では整数ポイントサイズ単位でテキストを拡大・縮小します。 テキストに Zoom エフェクトを適用する際に埋め込みフォントを使用する必要はありません。しかし、埋め込みフォントを使用すれば、滑らかな Zoom エフェクトが得られます。 </p>
 
  <p><b>メモ：</b><codeph>Container.autoLayout</codeph> プロパティが <codeph>false</codeph> の場合、Zoom エフェクトは機能しません。</p>
  
  </apiDesc><example conref="ZoomEffectExample.mxml"><swfblock conref="examples/ZoomEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#ZoomInstance"><linktext>mx.effects.effectClasses.ZoomInstance</linktext></link><link href="mx.managers.xml#LayoutManager"><linktext>mx.managers.LayoutManager</linktext></link></related-links><apiConstructor id="mx.effects:Zoom:Zoom"><apiName>Zoom</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Zoom:captureRollEvents"><apiName>captureRollEvents</apiName><shortdesc>
	  true の場合、マウスが移動されていなければ Flex は rollOut および rollOver イベントを送出しません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/><apiDefaultValue>false
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  <codeph>true</codeph> の場合、マウスが移動されていなければ Flex は <codeph>rollOut</codeph> および <codeph>rollOver</codeph> イベントを送出しません。 Zoom エフェクトを使用してターゲットのサイズを切り替える場合は、このプロパティを <codeph>true</codeph> に設定します。 
	  
	  <p>たとえば、<codeph>rollOverEffect</codeph> で Zoom エフェクトをトリガーして、ターゲットのサイズを縮小するとします。 ターゲットが縮小してマウスポインターがターゲット上から外れると、<codeph>rollOut</codeph> イベントおよび対応する <codeph>rollOutEffect</codeph> がトリガーされます。 <codeph>captureRollEvents</codeph> プロパティを <codeph>true</codeph> に設定することによって、マウスを移動させた場合を除き、Flex が <codeph>rollOut</codeph> イベントを送出しないようにできます。 </p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Zoom:originX"><apiName>originX</apiName><shortdesc>
	  この数値は、Canvas コンテナなど、絶対配置をサポートするコンテナにエフェクトターゲットがある場合にズーム原点の X 位置を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  この数値は、Canvas コンテナなど、絶対配置をサポートするコンテナにエフェクトターゲットがある場合にズーム原点の X 位置を表します。 ズーム原点とは、Zoom エフェクトが中心点の基準とするターゲット上の位置のことです。
	 
	  <p>値の範囲は 0 からターゲットコンポーネントの幅になります。</p> 
	 
	  デフォルト値は <codeph>target.width</codeph> / 2 で、これは、ターゲットの中心です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Zoom:originY"><apiName>originY</apiName><shortdesc>
	  この数値は、Canvas コンテナなど、絶対配置をサポートするコンテナにエフェクトターゲットがある場合にズーム原点の Y 位置を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  この数値は、Canvas コンテナなど、絶対配置をサポートするコンテナにエフェクトターゲットがある場合にズーム原点の Y 位置を表します。 ズーム原点とは、Zoom エフェクトが中心点の基準とするターゲット上の位置のことです。
	 
	  <p>値の範囲は 0 からターゲットコンポーネントの高さになります。</p> 
	 
	  デフォルト値は <codeph>target.height</codeph> / 2 で、これは、ターゲットの中心です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Zoom:zoomHeightFrom"><apiName>zoomHeightFrom</apiName><shortdesc>
	  0.01 から 1.0 のパーセント表記で、高さズーム開始時の倍率を示す数値を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  0.01 ～ 1.0 のパーセント表記で、高さズーム開始時の倍率を表す数値です。 デフォルト値は 0.01 です。これは非常に小さな倍率です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Zoom:zoomHeightTo"><apiName>zoomHeightTo</apiName><shortdesc>
	  0.01 ～ 1.0 のパーセント表記で、高さズーム終了時の倍率を表す数値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  0.01 ～ 1.0 のパーセント表記で、高さズーム終了時の倍率を表す数値です。 デフォルト値は 1.0 です。これはオブジェクトの標準サイズです。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Zoom:zoomWidthFrom"><apiName>zoomWidthFrom</apiName><shortdesc>
	  0.01 ～ 1.0 のパーセント表記で、幅ズーム開始時の倍率を表す数値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  0.01 ～ 1.0 のパーセント表記で、幅ズーム開始時の倍率を表す数値です。 デフォルト値は 0.01 です。これは非常に小さな倍率です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Zoom:zoomWidthTo"><apiName>zoomWidthTo</apiName><shortdesc>
	  0.01 ～ 1.0 のパーセント表記で、幅ズーム終了時の倍率を表す数値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  0.01 ～ 1.0 のパーセント表記で、幅ズーム終了時の倍率を表す数値です。 デフォルト値は 1.0 です。これはオブジェクトの標準サイズです。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:AnimateProperty"><apiName>AnimateProperty</apiName><shortdesc>
  AnimateProperty エフェクトは、コンポーネントのプロパティまたはスタイルを推移させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:AnimateProperty&gt;</code> tag
  inherits all the tag attributes of its superclass
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:AnimateProperty 
    id="ID"
   fromValue="0"
    isStyle="false|true"	 
    property="<i>required</i>"
    roundValue="false|true"
    toValue="0" 
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  AnimateProperty エフェクトは、コンポーネントのプロパティまたはスタイルを推移させます。 ユーザーは、アニメーション化するプロパティのプロパティ名、開始値、および終了値を指定します。 このエフェクトはまずプロパティを開始値に設定し、エフェクトの継続中はプロパティの値が終了値に達するまで値を更新し続けます。 
 
  <p>たとえば、Button コントロールの幅を変化させる場合は、推移させるプロパティとして <codeph>width</codeph> を指定し、さらにエフェクトの開始時と終了時の幅をそれぞれ指定します。</p> 
 
  </apiDesc><example conref="AnimatePropertyEffectExample.mxml"><swfblock conref="examples/AnimatePropertyEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#AnimatePropertyInstance"><linktext>mx.effects.effectClasses.AnimatePropertyInstance</linktext></link></related-links><apiConstructor id="mx.effects:AnimateProperty:AnimateProperty"><apiName>AnimateProperty</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:AnimateProperty:fromValue"><apiName>fromValue</apiName><shortdesc>
	  エフェクトのプロパティの開始値を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  エフェクトのプロパティの開始値を表します。 デフォルト値は、ターゲットの現在のプロパティ値です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:AnimateProperty:isStyle"><apiName>isStyle</apiName><shortdesc>
	  true の場合、プロパティ属性はスタイルとなり、setStyle() メソッドを使用して設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  <codeph>true</codeph> の場合、プロパティ属性はスタイルとなり、<codeph>setStyle()</codeph> メソッドを使用して設定します。 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:AnimateProperty:property"><apiName>property</apiName><shortdesc>
	  アニメーション化するターゲットのプロパティの名前を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  アニメーション化するターゲットのプロパティの名前を表します。 この属性は必須です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:AnimateProperty:roundValue"><apiName>roundValue</apiName><shortdesc>
	  true の場合、補間されたトゥイーン値を最も近い整数に四捨五入します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  <codeph>true</codeph> の場合、補間されたトゥイーン値を最も近い整数に四捨五入します。 このプロパティは、アニメーション化するプロパティが整数または符号なし整数の場合に役立ちます。
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:AnimateProperty:toValue"><apiName>toValue</apiName><shortdesc>
	  エフェクトの終了値を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  エフェクトの終了値を表します。 デフォルト値は、ターゲットの現在のプロパティ値です。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Move"><apiName>Move</apiName><shortdesc>
  Move エフェクトは、指定された時間間隔でコンポーネントの位置を変更します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:Move" replacement="spark.effects.Move" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Move&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Move
    id="ID"
    xFrom="val" 
    yFrom="val"
    xTo="val"
    yTo="val"
    xBy="val"
    yBy="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Move エフェクトは、指定された時間間隔でコンポーネントの位置を変更します。 初期位置は <codeph>xFrom</codeph> と <codeph>yFrom</codeph> の値、移動先の位置は <codeph>xTo</codeph> と <codeph>yTo</codeph> の値でそれぞれ指定できます。また、コンポーネントの移動ピクセル数は <codeph>xBy</codeph> と <codeph>yBy</codeph> で指定できます。 
 
  <p>初期位置、移動先の位置、または移動量のうち、2 つを指定すると、残りの 1 つは Flex で計算されます。 3 つの値をすべて指定すると、<codeph>xBy</codeph> と <codeph>yBy</codeph> の値が無視されます。 <codeph>xTo</codeph> と <codeph>yTo</codeph> の値、または <codeph>xBy</codeph> と <codeph>yBy</codeph> の値のみを指定すると、<codeph>xFrom</codeph> と <codeph>yFrom</codeph> はオブジェクトの現在の位置に設定されます。</p>
  
  <p><codeph>moveEffect</codeph> トリガーに Move エフェクトを指定し、From、To、By の 6 つのプロパティ値をどれも設定しない場合、オブジェクトが現在の位置から新しい位置にスムーズに移動するように、これらのプロパティの値が設定されます。</p>
 
  <p>通常、このエフェクトは Canvas コンテナ、<codeph>"layout=absolute"</codeph> が指定された Application コンテナや Panel コンテナなど、絶対配置を使用するコンテナのターゲットに適用します。 VBox コンテナや Grid コンテナなど、自動レイアウトを実行するコンテナのターゲットに適用した場合、移動は実行されますが、コンテナのレイアウトが次回更新されるとターゲットが元の位置に戻ってしまいます。 コンテナの <codeph>autoLayout</codeph> プロパティを <codeph>false</codeph> に設定すると元の位置への移動を無効にできますが、コンテナのすべてのコントロールのレイアウトが無効になります。</p>
  
  </apiDesc><example conref="MoveEffectExample.mxml"><swfblock conref="examples/MoveEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#MoveInstance"><linktext>mx.effects.effectClasses.MoveInstance</linktext></link></related-links><apiConstructor id="mx.effects:Move:Move"><apiName>Move</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Move:xBy"><apiName>xBy</apiName><shortdesc> 
      コンポーネントを x 軸に沿って移動する際のピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      コンポーネントを x 軸に沿って移動する際のピクセル数を表します。 負の値を指定することもできます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Move:xFrom"><apiName>xFrom</apiName><shortdesc> 
      初期位置の x 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      初期位置の x 座標を表します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Move:xTo"><apiName>xTo</apiName><shortdesc> 
      移動先の位置の x 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      移動先の位置の x 座標を表します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Move:yBy"><apiName>yBy</apiName><shortdesc> 
      コンポーネントを y 軸に沿って移動する際のピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      コンポーネントを y 軸に沿って移動する際のピクセル数を表します。 負の値を指定することもできます。     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Move:yFrom"><apiName>yFrom</apiName><shortdesc>
      初期位置の y 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      初期位置の y 座標を表します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Move:yTo"><apiName>yTo</apiName><shortdesc> 
      移動先の位置の y 座標を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      移動先の位置の y 座標を表します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Iris"><apiName>Iris</apiName><shortdesc>
  Iris エフェクトは、ターゲットの中央に設定されている矩形マスクを伸縮させて、ターゲットをアニメーション化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Iris&gt;</code> tag
  inherits all of the tag attributes of its superclass, 
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Iris
    id="ID"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:MaskEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Iris エフェクトは、ターゲットの中央に設定されている矩形マスクを伸縮させて、ターゲットをアニメーション化します。 このエフェクトにより、ターゲットの中心を基点としてマスクを拡大してターゲットを表示したり、ターゲットの中心に向かってマスクを縮小させてターゲットを覆い隠したりすることができます。
 
  </apiDesc><example conref="IrisEffectExample.mxml"><swfblock conref="examples/IrisEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#IrisInstance"><linktext>mx.effects.effectClasses.IrisInstance</linktext></link></related-links><apiConstructor id="mx.effects:Iris:Iris"><apiName>Iris</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.effects:Sequence"><apiName>Sequence</apiName><shortdesc>
  Sequence エフェクトは、複数の子エフェクトを、追加された順番に再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="children"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Sequence&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Sequence id="<i>identifier</i>"&gt;
    &lt;mx:children&gt;
      &lt;!-- Specify child effect tags --&gt; 
    &lt;/mx:children&gt;
  &lt;/mx:Sequence&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:CompositeEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Sequence エフェクトは、複数の子エフェクトを、追加された順番に再生します。
  
  <p>MXML では次の例のように Sequence エフェクトを作成できます。</p>
 
  <pre>
  &lt;mx:Sequence id="WipeRightUp">
    &lt;mx:children>
      &lt;mx:WipeRight duration="1000"/>
      &lt;mx:WipeUp duration="1000"/>
    &lt;/mx:children>
  &lt;/mx:Sequence>
  
  &lt;mx:VBox id="myBox" hideEffect="{WipeRightUp}">
    &lt;mx:TextArea id="aTextArea" text="hello"/>
  &lt;/mx:VBox>
  </pre>
 
  <p><codeph>&lt;mx:children></codeph> タグはオプションです。</p>
  
  <p>通常、ActionScript において組み合わせたエフェクトの開始は、次の 5 つの手順で行います。</p>
 
  <ol>
    <li>組み合わせるエフェクトオブジェクトのインスタンスを、次の例のように作成します。 
    <pre>myFadeEffect = new mx.effects.Fade(target);</pre></li>
    <li><codeph>duration</codeph> など、個々のエフェクトオブジェクトのプロパティを設定します。</li>
    <li>Sequence エフェクトオブジェクトを、次の例のように作成します。 
    <pre>mySequenceEffect = new mx.effects.Sequence();</pre></li>
    <li>各エフェクトオブジェクトについて、<codeph>addChild()</codeph> メソッドを次の例のように呼び出します。 
    <pre>mySequenceEffect.addChild(myFadeEffect);</pre></li>
    <li>Sequence エフェクトの <codeph>play()</codeph> メソッドを次の例のように呼び出します。 
    <pre>mySequenceEffect.play();</pre></li>
  </ol>
  
  </apiDesc><example conref="SequenceEffectExample.mxml"><swfblock conref="examples/SequenceEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#SequenceInstance"><linktext>mx.effects.effectClasses.SequenceInstance</linktext></link></related-links><apiConstructor id="mx.effects:Sequence:Sequence"><apiName>Sequence</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Sequence エフェクトの場合、この引数は無視されます。 このパラメーターは、他の種類のエフェクトとの一貫性を保つことだけを目的として用意されています。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Sequence:compositeDuration:get"><apiName>compositeDuration</apiName><shortdesc>
     
     すべての子エフェクトの継続時間によって定義される、このエフェクトの継続時間を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     
     すべての子エフェクトの継続時間によって定義される、このエフェクトの継続時間を返します。すべての子エフェクトの startDelay および繰り返しの情報を継続時間と共に考慮して、適切な結果を返します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Dissolve"><apiName>Dissolve</apiName><shortdesc>
  コンポーネントが透明から不透明に、または不透明から透明に推移するようなアニメーション効果を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Dissolve&gt;</code> tag
  inherits the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Dissolve
    id="ID"
    alphaFrom="val"
    alphaTo="val"
    color="val"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  コンポーネントが透明から不透明に、または不透明から透明に推移するようなアニメーション効果を設定します。 Dissolve エフェクトを再生すると、次のことが実行されます。
  
  <ol>
    <li>エフェクトの開始時に、不透明な矩形が作成されます。 矩形はターゲットコンポーネントの上に浮かびます。矩形の色は <codeph>Dissolve.color</codeph> プロパティに一致し、<codeph>alpha</codeph> プロパティの初期値は（1.0 - <codeph>Dissolve.alphaFrom</codeph>）に設定されます。</li>
    <li>エフェクトの再生に伴い、矩形の <codeph>alpha</codeph> プロパティが（1.0 - <codeph>alphaFrom</codeph>）から（1.0 - <codeph>alphaTo</codeph>）に変化します。 徐々に矩形が不透明になり、その下に表示されるコンテンツが消えていきます。</li>
    <li>エフェクトが終了すると、矩形が破棄されます。</li>
  </ol>
  
  <p>ターゲットオブジェクトがコンテナの場合、Dissolve エフェクトはコンテナのコンテンツ領域に適用されます。 コンテンツ領域は、コンテナの背景色が可視になっている領域です。</p>
 
  <p><b>メモ</b>： Dissolve エフェクトを DataGrid コントロールの <codeph>creationCompleteEffect</codeph> トリガーで使用するには、DataGrid コントロールの子タグまたはデータバインディングを使用してコントロールインラインのデータプロバイダーを定義する必要があります。 この問題の原因は、<codeph>creationComplete</codeph> イベントが送出されるまでデータプロバイダーが設定されないことにあります。 そのため、エフェクトの再生開始時には、Flex による DataGrid コントロールのサイズ調整は完了していません。 </p>
  
  </apiDesc><example conref="DissolveEffectExample.mxml"><swfblock conref="examples/DissolveEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#DissolveInstance"><linktext>mx.effects.effectClasses.DissolveInstance</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link></related-links><apiConstructor id="mx.effects:Dissolve:Dissolve"><apiName>Dissolve</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Dissolve:alphaFrom"><apiName>alphaFrom</apiName><shortdesc> 
	  最初の透明度レベルは 0.0 から 1.0 の範囲です（0.0 = 透明、1.0 = 完全に不透明）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
	  最初の透明度レベルは 0.0 から 1.0 の範囲です（0.0 = 透明、1.0 = 完全に不透明）。 
	 
	  <p>エフェクトによってターゲットコンポーネントが非表示になる場合、デフォルト値はターゲットの <codeph>alpha</codeph> プロパティの現在値です。 エフェクトによってターゲットコンポーネントが表示される場合、デフォルト値は 0.0 です。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Dissolve:alphaTo"><apiName>alphaTo</apiName><shortdesc> 
	  最終的な透明度レベルは 0.0 から 1.0 の範囲です（0.0 = 透明、1.0 = 完全に不透明）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
	  最終的な透明度レベルは 0.0 から 1.0 の範囲です（0.0 = 透明、1.0 = 完全に不透明）。 
	 
	  <p>エフェクトによってターゲットコンポーネントが非表示になる場合、デフォルト値は 0.0 です。エフェクトによってターゲットコンポーネントが表示される場合、デフォルト値はターゲットの <codeph>alpha</codeph> プロパティの現在値です。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Dissolve:color"><apiName>color</apiName><shortdesc> 
	  エフェクトによってターゲットオブジェクトの上に浮いて表示される矩形の色を表す 16 進値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0xFFFFFFFF</apiData><apiType value="uint"/></apiValueDef><apiDesc> 
	  エフェクトによってターゲットオブジェクトの上に浮いた状態で表示される矩形の色を表す 16 進値です。 デフォルト値は、ターゲットコンポーネントの <codeph>backgroundColor</codeph> スタイルプロパティで指定された色です。<codeph>backgroundColor</codeph> が設定されていない場合は 0xFFFFFF です。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Dissolve:targetArea"><apiName>targetArea</apiName><shortdesc>
	  エフェクトを再生するターゲットの領域を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.geom:RoundedRectangle</apiValueClassifier><apiDefaultValue>null
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  エフェクトを再生するターゲットの領域を表します。 Dissolve オーバーレイは、このプロパティのサイズを使用して描画されます。 UIComponent は、コンポーネント全体にわたるオーバーレイを作成します。 コンテナは、クロムではなくコンテンツ領域上にオーバーレイを作成します。 
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Blur"><apiName>Blur</apiName><shortdesc>
  Blur エフェクトを使用すると、コンポーネントにぼかし効果を適用できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:Blur" replacement="spark.effects.AnimateFilter" since="4.0">
<description>
  Flex 4 では、Blur ビットマップフィルターと組み合わせて AnimateFilter エフェクトを使用します。
 </description>
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Blur&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Blur
    id="ID"
    blurXFrom="val"
    blurXTo="val"
    blurYFrom="val"
    blurYTo="val"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Blur エフェクトを使用すると、コンポーネントにぼかし効果を適用できます。 Blur エフェクトは画像の詳細部分の表示をやわらかくします。 ソフトフォーカスがかかっているように見えるぼかしから、半透明ガラスを通してイメージを見るようにかすんで見えるガウスぼかしまで作成できます。 
 
  <p>Blur エフェクトでは、実装の一部として Flash BlurFilter クラスが使用されます。 詳細については、「flash.filters.BlurFilter」を参照してください。</p>
  
  <p>コンポーネントに Blur エフェクトを適用する場合、BlurFilter を適用したり、同じコンポーネントに他の Blur エフェクトを適用することはできません。 </p> 
 
  </apiDesc><example conref="BlurEffectExample.mxml"><swfblock conref="examples/BlurEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="flash.filters.BlurFilter.xml"><linktext>flash.filters.BlurFilter</linktext></link><link href="mx.effects.effectClasses.xml#BlurInstance"><linktext>mx.effects.effectClasses.BlurInstance</linktext></link></related-links><apiConstructor id="mx.effects:Blur:Blur"><apiName>Blur</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Blur:blurXFrom"><apiName>blurXFrom</apiName><shortdesc> 
	  水平方向のぼかしの開始量を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>4</apiData><apiType value="Number"/><apiDefaultValue>4
	  
	  </apiDefaultValue></apiValueDef><apiDesc> 
	  水平方向のぼかしの開始量を表します。 有効な値の範囲は 0.0 ～ 255.0 です。 
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Blur:blurXTo"><apiName>blurXTo</apiName><shortdesc> 
	  水平方向のぼかしの終了量を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0 
	  
	  </apiDefaultValue></apiValueDef><apiDesc> 
	  水平方向のぼかしの終了量を表します。 有効な値の範囲は 0.0 ～ 255.0 です。
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Blur:blurYFrom"><apiName>blurYFrom</apiName><shortdesc> 
	  垂直方向のぼかしの開始量を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>4</apiData><apiType value="Number"/><apiDefaultValue>4
	  
	  </apiDefaultValue></apiValueDef><apiDesc> 
	  垂直方向のぼかしの開始量を表します。 有効な値の範囲は 0.0 ～ 255.0 です。 
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Blur:blurYTo"><apiName>blurYTo</apiName><shortdesc> 
	  垂直方向のぼかしの終了量を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0 
	  
	  </apiDefaultValue></apiValueDef><apiDesc> 
	  垂直方向のぼかしの終了量を表します。 有効な値の範囲は 0.0 ～ 255.0 です。
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:IEffect"><apiName>IEffect</apiName><shortdesc>
  IEffect インターフェイスは、すべての Flex エフェクトの基本インターフェイスを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.effects:IAbstractEffect</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IEffect インターフェイスは、すべての Flex エフェクトの基本インターフェイスを定義します。 EffectInstance インターフェイスは、エフェクトインスタンスのすべてのサブクラスについての基本インターフェイスを定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#IEffectInstance"><linktext>mx.effects.IEffectInstance</linktext></link></related-links><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:captureEndValues"><apiName>captureEndValues</apiName><shortdesc>
      エフェクトのターゲットにおいて関連するプロパティの現在値をキャプチャし、終了値として保存します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトのターゲットにおいて関連するプロパティの現在値をキャプチャし、終了値として保存します。
      
      <p>エフェクトがデータ変更エフェクトに含まれる場合に、<codeph>captureEndValues()</codeph> メソッドが自動的に Flex から呼び出されます。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:captureMoreStartValues"><apiName>captureMoreStartValues</apiName><shortdesc>
      ターゲットの追加セットの関連するプロパティの現在値をキャプチャします。この機能は、データ変更エフェクトを実行したときに Flex によって使用されます。
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>targets</apiItemName><apiType value="Array"/><apiDesc>値がキャプチャされるターゲットの配列を表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ターゲットの追加セットの関連するプロパティの現在値をキャプチャします。
     
      <p>Flex は、データ変更エフェクトの実行時にこの機能を使用します。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:captureStartValues"><apiName>captureStartValues</apiName><shortdesc>
      エフェクトのターゲットにおいて関連するプロパティの現在値をキャプチャします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトのターゲットにおいて関連するプロパティの現在値をキャプチャします。 エフェクトがトランジションに含まれる場合に、<codeph>captureStartValues()</codeph> メソッドが自動的に Flex から呼び出されます。
      
      <p>エフェクトの開始値および終了値を把握するためにエフェクトが必要とされる場合は、この関数を使用します。 この関数を正しく使用するには、次の手順に従います。</p>
      
      <ol>
        <li><codeph>captureStartValues()</codeph> メソッドを呼び出します。 エフェクトはエフェクトの開始値をキャプチャします。</li>
        <li>子の追加または削除、プロパティの変更、位置の変更、またはサイズの変更など、エフェクトターゲットを変更します。</li>
        <li><codeph>play()</codeph> メソッドを呼び出します。 エフェクトは終了値をキャプチャします。 この関数によって、このエフェクトで作成されたエフェクトインスタンスごとの <codeph>EffectInstance.propertyChanges</codeph> プロパティが作成されます。 エフェクト開発者は、<codeph>propertyChanges</codeph> プロパティを使用して、そのエフェクトの開始値および終了値を取得できます。</li>
      </ol>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:createInstance"><apiName>createInstance</apiName><shortdesc>
      1 つのエフェクトインスタンスを作成し、それを初期化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>エフェクトのエフェクトインスタンスオブジェクトを表します。
      
      </apiDesc><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      1 つのエフェクトインスタンスを作成し、それを初期化します。 <codeph>play()</codeph> メソッドの代わりにこのメソッドを使用して、エフェクトインスタンスの再生前にエフェクトインスタンスのプロパティを操作します。 
      
      <p>エフェクトインスタンスは、<codeph>instanceClass</codeph> プロパティで指定された型で作成されます。 次に、<codeph>initInstance()</codeph> メソッドを使用して初期化されます。 インスタンスが EffectManager によって作成されている場合（エフェクトがエフェクトトリガーによってトリガーされる場合）、エフェクトは <codeph>EffectInstance.initEffect()</codeph> メソッドの呼び出しによりさらに初期化されます。</p>
     
      <p><codeph>createInstance()</codeph> メソッドが呼び出されると、エフェクトは再生されません。 返されたエフェクトインスタンスで <codeph>startEffect()</codeph> メソッドを呼び出します。 </p>
     
      <p>この関数は、<codeph>Effect.play()</codeph> メソッドによって自動的に呼び出されます。 </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:createInstances"><apiName>createInstances</apiName><shortdesc>
      ターゲットオブジェクトの配列を取得し、各ターゲットで createInstance() メソッドを呼び出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>ターゲットごとに 1 つで、かつエフェクト用でもあるエフェクトインスタンスオブジェクトの配列を表します。
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>targets</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトの配列を表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ターゲットオブジェクトの配列を取得し、各ターゲットで <codeph>createInstance()</codeph> メソッドを呼び出します。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:deleteInstance"><apiName>deleteInstance</apiName><shortdesc>
      インスタンスからイベントリスナーを削除し、インスタンスのリストからインスタンスを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>instance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiDesc>エフェクトのインスタンスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      インスタンスからイベントリスナーを削除し、インスタンスのリストからインスタンスを削除します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:end"><apiName>end</apiName><shortdesc>
      現在再生中のエフェクトをすべて中断し、直ちにエフェクトの終わりにジャンプします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>effectInstance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiData>null</apiData><apiDesc>終了する EffectInstance を表します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      現在再生中のエフェクトをすべて中断し、直ちにエフェクトの終わりにジャンプします。 このメソッドが呼び出されると、<codeph>EffectInstance.end()</codeph> メソッドも呼び出されます。
     
      <p>エフェクトの終了処理の一環としてこのメソッドが呼び出されると、エフェクトインスタンスにより <codeph>effectEnd</codeph> イベントが送出されます。</p>
     
      <p>エフェクトインスタンスを引数として渡すと、そのインスタンスは中断されます。 引数が渡されないと、そのときエフェクトから生成されたすべてのエフェクトインスタンスが中断されます。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.effects.xml#EffectInstance/end()"><linktext>mx.effects.EffectInstance.end()</linktext></link></related-links></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:getAffectedProperties"><apiName>getAffectedProperties</apiName><shortdesc>
      ストリングの配列を返します。各ストリングは、このエフェクトによって変更されるプロパティの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>このエフェクトで変更されたプロパティの名前を指定するストリングの配列を表します。
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      ストリングの配列を返します。各ストリングは、このエフェクトによって変更されるプロパティの名前です。たとえば、Move エフェクトは <codeph>"x"</codeph> と <codeph>"y"</codeph> から成る配列を返します。
     
      <p>Effect のサブクラスはすべてこのメソッドを実装する必要があります。 このメソッドは、2 つのエフェクトが同時に同一オブジェクトの同一プロパティをアニメーション化しないように EffectManager で使用されます。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:pause"><apiName>pause</apiName><shortdesc>
      resume() メソッドを呼び出すまで、エフェクトを一時停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>resume()</codeph> メソッドを呼び出すまで、エフェクトを一時停止します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:play"><apiName>play</apiName><shortdesc>
      エフェクトの再生を開始します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>ターゲットごとに 1 つで、かつエフェクト用でもある EffectInstance オブジェクトの配列を表します。
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>targets</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>このエフェクトを再生するターゲットオブジェクトの配列を表します。 このパラメーターを指定した場合、エフェクトの <codeph>targets</codeph> プロパティは使用されません。
     
      </apiDesc></apiParam><apiParam><apiItemName>playReversedFromEnd</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph> の場合、エフェクトを逆順に再生します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      エフェクトの再生を開始します。 通常は <codeph>end()</codeph> メソッドを <codeph>play()</codeph> メソッドの前に呼び出します。これは、エフェクトの以前のインスタンスを確実に終了させてから新しいインスタンスを開始するためです。
     
      <p>すべてのサブクラスではこのメソッドを実装する必要があります。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:resume"><apiName>resume</apiName><shortdesc>
      pause() メソッドを呼び出し、エフェクトを一時停止した後、再開させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>pause()</codeph> メソッドを呼び出してエフェクトを一時停止した後、再開させます。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:reverse"><apiName>reverse</apiName><shortdesc>
      エフェクトが現在再生中の場合に、エフェクトの現在位置から開始して、逆順でエフェクトを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトが現在再生中の場合に、エフェクトの現在位置から開始して、逆順でエフェクトを再生します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffect:mx.effects:IEffect:stop"><apiName>stop</apiName><shortdesc>
      エフェクトターゲットを現在の状態にしたまま、エフェクトを停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトターゲットを現在の状態にしたまま、エフェクトを停止します。 <codeph>pause()</codeph> メソッドの呼び出しと異なり、<codeph>resume()</codeph> メソッドを <codeph>stop()</codeph> メソッドの後に呼び出すことはできません。 ただし、<codeph>play()</codeph> メソッドを呼び出してエフェクトを再開できます。
     
      <p>エフェクトの終了処理の一環としてこのメソッドが呼び出されると、エフェクトインスタンスにより <codeph>effectEnd</codeph> イベントが送出されます。</p>
     
      <p>マスクエフェクトの場合、エフェクトを停止してもマスクは自動的に削除されません。 最初のマスクを削除せずに、同じターゲット上でマスクエフェクトをさらに実行すると、予期しない結果が生じる可能性があります。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:IEffect:mx.effects:IEffect:className:get"><apiName>className</apiName><shortdesc>
      このエフェクトクラスの名前です。たとえば、"Fade" などがあります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      このエフェクトクラスの名前です。たとえば、<codeph>"Fade"</codeph> などがあります。
     
      <p>これは短い形式または無修飾の名前で、パッケージ名は含まれません。 修飾名が必要な場合は、flash.utils パッケージに含まれる <codeph>getQualifiedClassName()</codeph> メソッドを使用します。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:customFilter:get"><apiName>customFilter</apiName><shortdesc>
      エフェクトを再生するターゲットを特定するために、エフェクトによって使用されるタイプ EffectTargetFilter のカスタムフィルターオブジェクトを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:EffectTargetFilter</apiValueClassifier><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを再生するターゲットを特定するために、エフェクトによって使用されるタイプ EffectTargetFilter のカスタムフィルターオブジェクトを指定します。 
      
      <p>ターゲットへのフィルタリングは、エフェクトの再生前に <codeph>captureStartValues()</codeph> を呼び出した場合にのみ実行されます。 エフェクトがトランジションに含まれる場合に、<codeph>captureStartValues()</codeph> メソッドが自動的に Flex から呼び出されます。</p>
      
      <p>単純なフィルタリングには、<codeph>filter</codeph> プロパティを使用します。 <codeph>customFilter</codeph> プロパティが null 以外の場合、<codeph>filter</codeph> プロパティは無視されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#EffectTargetFilter"><linktext>mx.effects.EffectTargetFilter</linktext></link></related-links></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:duration:get"><apiName>duration</apiName><shortdesc> 
      エフェクトの継続時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>500
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      エフェクトの継続時間を表します（ミリ秒単位）。 
     
      <p>Parallel エフェクトまたは Sequence エフェクトでは、<codeph>duration</codeph> プロパティによって各エフェクトの継続時間が設定されます。 たとえば、Sequence エフェクトの <codeph>duration</codeph> プロパティが 3000 に設定されている場合、Sequence の各エフェクトの再生時間は 3000 ミリ秒となります。</p>
     
      <p>繰り返されるエフェクトの場合、<codeph>duration</codeph> プロパティによって、エフェクトの 1 つあたりのインスタンスの継続時間が指定されます。 したがって、エフェクトで <codeph>duration</codeph> プロパティが 2000 に設定され、<codeph>repeatCount</codeph> プロパティが 3 に設定されている場合、エフェクトの総再生時間は 6000 ミリ秒（6 秒）となります。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:effectTargetHost:get"><apiName>effectTargetHost</apiName><shortdesc>
      データエフェクトのターゲットリストコントロールにアクセスできるプロパティです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:IEffectTargetHost</apiValueClassifier></apiValueDef><apiDesc>
      データエフェクトのターゲットリストコントロールにアクセスできるプロパティです。 このプロパティにより、エフェクトクラスのインスタンスは、エフェクトが再生されているリストコントロールと通信できます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:filter:get"><apiName>filter</apiName><shortdesc>
      エフェクトのターゲットをフィルタリングするアルゴリズムを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトのターゲットをフィルタリングするアルゴリズムを指定します。 値が <codeph>null</codeph> の場合、フィルタリングは指定されません。
      
      <p>ターゲットへのフィルタリングは、エフェクトの再生前に <codeph>captureStartValues()</codeph> を呼び出した場合にのみ実行されます。 エフェクトがトランジションに含まれる場合、またはリストコントロールのデータエフェクトに含まれる場合に、<codeph>captureStartValues()</codeph> メソッドが自動的に Flex から呼び出されます。</p>
      
      <p>単純なフィルタリングには、このプロパティを使用します。 複雑なフィルタリングには、<codeph>customFilter</codeph> プロパティを使用します。 <codeph>customFilter</codeph> プロパティに null 以外の値が含まれている場合、このプロパティは無視されます。</p> 
     
      <p><codeph>filter</codeph> プロパティについては、次の値を使用できます。</p>
     
      <ul>
        <li>値が <codeph>"add"</codeph> の場合、子としてコンテナに追加されるターゲットでエフェクトが再生されます。</li>
        <li>値が <codeph>"addItem"</codeph> の場合、List または TileList コントロールに追加されるリストアイテムのアイテムレンダラーでエフェクトが再生されます。</li>
        <li>値が <codeph>"hide"</codeph> の場合、visible プロパティが <codeph>true</codeph> から <codeph>false</codeph> に変更されたターゲットでエフェクトが再生されます。</li>
        <li>値が <codeph>"move"</codeph> の場合、<codeph>x</codeph> または <codeph>y</codeph> プロパティが変更されたターゲットでエフェクトが再生されます。</li>
        <li>値が <codeph>"remove"</codeph> の場合、コンテナの子として削除されるターゲットでエフェクトが再生されます。</li>
        <li>値が <codeph>"removeItem"</codeph> の場合、List または TileList コントロールから削除されるリストアイテムのアイテムレンダラーでエフェクトが再生されます。</li>
        <li>値が <codeph>"replacedItem"</codeph> の場合、List または TileList コントロール内で新しいアイテムに置換されるリストアイテムのアイテムレンダラーでエフェクトが再生されます。</li>
        <li>値が <codeph>"replacementItem"</codeph> の場合、既存のアイテムを置換する List または TileList コントロールに追加されるリストアイテムのアイテムレンダラーでエフェクトが再生されます。</li>
        <li>値が <codeph>"resize"</codeph> の場合、<codeph>width</codeph> または <codeph>height</codeph> プロパティが変更されたターゲットでエフェクトが再生されます。</li>
        <li>値が <codeph>"show"</codeph> の場合、visible プロパティが <codeph>false</codeph> から <codeph>true</codeph> に変更されたターゲットでエフェクトが再生されます。</li>
        <li>値が <codeph>""</codeph> の場合、フィルタリングは指定されません。</li>
      </ul>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:hideFocusRing:get"><apiName>hideFocusRing</apiName><shortdesc>
      エフェクトの開始時にエフェクトがフォーカス枠を非表示にするかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      エフェクトの開始時にエフェクトがフォーカス枠を非表示にするかどうかを指定します。エフェクトターゲットは、フォーカス枠を非表示にします。UIComponent クラスのサブクラスは、フォーカス枠を自動的に非表示にします。エフェクトターゲットが UIComponent クラスのサブクラスではない場合は、フォーカス枠を非表示にするための機能を追加します。
     
      <p>エフェクトの再生中にフォーカス枠を非表示にするには、このプロパティを <codeph>true</codeph> に設定します。</p>
      
      <p>Effect のサブクラスのデフォルト値は <codeph>false</codeph> です。 MaskEffect のサブクラスのデフォルト値は <codeph>true</codeph> です。
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:isPlaying:get"><apiName>isPlaying</apiName><shortdesc>
      エフェクトのインスタンスのいずれかが現在再生中の場合に true、そうでない場合に false となる読み取り専用フラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      エフェクトのインスタンスのいずれかが現在再生中の場合に true、そうでない場合に false となる読み取り専用フラグです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:perElementOffset:get"><apiName>perElementOffset</apiName><shortdesc>
      エフェクトの最初のターゲットの後に発生する、エフェクトターゲットの追加遅延（ミリ秒）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      エフェクトの最初のターゲットの後に発生する、エフェクトターゲットの追加遅延（ミリ秒）です。 この値は、<codeph>startDelay</codeph> プロパティの値に加算されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      エフェクトの現在の時間位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      エフェクトの現在の時間位置です。このプロパティの値の範囲は、0 から合計継続時間（Effect の <codeph>startDelay</codeph>、<codeph>repeatCount</codeph> および <codeph>repeatDelay</codeph> を含む）までです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:relevantProperties:get"><apiName>relevantProperties</apiName><shortdesc>
      フィルタリング実行時に使用するプロパティ名の配列を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      フィルタリング実行時に使用するプロパティ名の配列を表します。 このプロパティは内部的に使用され、エフェクトユーザーは設定する必要がありません。 
     
      <p>デフォルト値は、<codeph>getAffectedProperties()</codeph> メソッドで返される配列と等しくなります。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:relevantStyles:get"><apiName>relevantStyles</apiName><shortdesc>
      フィルタリング実行時に使用するスタイル名の配列を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      フィルタリング実行時に使用するスタイル名の配列を表します。 このプロパティは内部的に使用され、エフェクトユーザーは設定する必要がありません。 
     
      <p>デフォルト値は、<codeph>getAffectedProperties()</codeph> メソッドで返される配列と等しくなります。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:target:get"><apiName>target</apiName><shortdesc> 
      このエフェクトが適用されるオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc> 
      このエフェクトが適用されるオブジェクトを表します。エフェクトトリガーによってエフェクトがトリガーされると、<codeph>target</codeph> プロパティはエフェクトをトリガーするオブジェクトとなるように自動的に設定されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:targets:get"><apiName>targets</apiName><shortdesc>
      エフェクトのターゲットであるオブジェクトの配列を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      エフェクトのターゲットであるオブジェクトの配列を表します。エフェクトの再生時、各ターゲットのエフェクトがパラレル処理で実行されます。 <codeph>target</codeph> プロパティを設定すると、この配列中のすべてのオブジェクトが置換されます。 <codeph>targets</codeph> プロパティが設定されていると、<codeph>target</codeph> プロパティによってこの配列の最初の項目が返されます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffect:mx.effects:IEffect:triggerEvent:get"><apiName>triggerEvent</apiName><shortdesc>
      エフェクトがトリガーされたときに EffectManager によってこの Effect に渡される Event オブジェクトです。EffectManager によってエフェクトが再生されていない場合は null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      エフェクトがトリガーされたときに EffectManager によってこの Effect に渡される Event オブジェクトです。EffectManager によってエフェクトが再生されていない場合は <codeph>null</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Pause"><apiName>Pause</apiName><shortdesc>
  Pause エフェクトは、エフェクトをシーケンス再生するときに便利です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Pause&gt;</code> tag
  inherits all the tag attributes of its superclass, 
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Pause 
    id="ID" 
    eventName="null"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Pause エフェクトは、エフェクトをシーケンス再生するときに便利です。 指定した期間が経過するまで、または指定したイベントがターゲットによって送出されるまでは、何も実行されません。Sequence エフェクトの子として Pause エフェクトを追加すると、他の 2 つのエフェクトの間に一時停止を作成できます。
  
  </apiDesc><example conref="PauseEffectExample.mxml"><swfblock conref="examples/PauseEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#PauseInstance"><linktext>mx.effects.effectClasses.PauseInstance</linktext></link></related-links><apiConstructor id="mx.effects:Pause:Pause"><apiName>Pause</apiName><shortdesc>
     コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc><codeph>eventName</codeph> 属性が割り当てられていない場合、この引数は Pause エフェクトで無視されます。<codeph>eventName</codeph> が割り当てられている場合は、指定されたイベントをターゲットから送出する必要があるので、ターゲットは IEventDispatcher 型のオブジェクトである必要があります。<codeph>duration</codeph> プロパティだけが指定された Pause エフェクトは特定のターゲットに対して動作しないので、ターゲットを必要としません。そのため、このエフェクトでは、ターゲットとして null を指定できます。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
     コンストラクターです。
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Pause:eventName"><apiName>eventName</apiName><shortdesc> 
     終了するまで Pause が待機しているイベントの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> 
     終了するまで Pause が待機しているイベントの名前です。このパラメーターは、<codeph>target</codeph> プロパティと組み合わせて使用する必要があり、ターゲットは IEventDispatcher 型である必要があります。また、すべてのイベントは、いずれかのディスパッチャーから生成されている必要があります。
     
     <p><codeph>eventName</codeph> のリスニングは、イベントのタイムアウトとして機能する <codeph>duration</codeph> プロパティにも関連しています。<codeph>duration</codeph> で指定された時間内にイベントを受け取らなかった場合でも、エフェクトは終了します。</p>
     
     <p>このプロパティはオプションです。デフォルトのアクションでは、イベントを待たずに再生します。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Pause:duration:get"><apiName>duration</apiName><shortdesc> 
     duration プロパティは、このエフェクトを一時停止する時間を制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>500
     
     </apiDefaultValue></apiValueDef><apiDesc> 
     duration プロパティは、このエフェクトを一時停止する時間を制御します。このエフェクトで <codeph>eventName</codeph> が設定されている場合、duration はイベントが発行されるまで待機する時間のタイムアウトとしても機能します。duration が 0 未満の場合、エフェクトはイベントが発行されるまで無期限に待機します。他の値（0 も含む）に設定されている場合、エフェクトは、その時間が経過したとき、または指定されたイベントが発行されたときのいずれか早い時期に終了します。
     
     </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#IEffect/duration"><linktext>mx.effects.IEffect.duration</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.effects:CompositeEffect"><apiName>CompositeEffect</apiName><shortdesc>
  CompositeEffect クラスは、Parallel クラスと Sequence クラスの親クラスであり、これらの親クラスでは MXML タグの &amp;lt;mx:Parallel&amp;gt; と &amp;lt;mx:Sequence&amp;gt; を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="children"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The CompositeEffect class adds the following tag attributes,
  and all the subclasses of the CompositeEffect class
  inherit these tag attributes:</p>
  
  <pre>
  &lt;mx:<i>tagname</i>&gt;
    &lt;mx:children&gt;
      &lt;!-- Specify child effect tags --&gt; 
    &lt;/mx:children&gt;
  &lt;/mx:<i>tagname</i>&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  CompositeEffect クラスは、Parallel クラスと Sequence クラスの親クラスであり、<codeph>&lt;mx:Parallel></codeph> と <codeph>&lt;mx:Sequence></codeph> の各 MXML タグを定義します。 Flex では、エフェクトを組み合わせる方法として、パラレル処理とシーケンス処理の 2 つをサポートしています。 パラレルに合成されたエフェクトは同時に再生されます。 複数のエフェクトをシーケンス処理で組み合わせると、1 つのエフェクトの再生が終了してから、別のエフェクトの再生が始まります。
 
  <p>MXML では次の例のように組み合わせたエフェクトを作成できます。</p>
 
  <pre>
  &lt;mx:Parallel id="WipeRightUp">
    &lt;mx:children>
      &lt;mx:WipeRight duration="1000"/>
      &lt;mx:WipeUp duration="1000"/>
    &lt;/mx:children>
  &lt;/mx:Parallel>
   
  &lt;mx:VBox id="myBox" hideEffect="WipeRightUp">
    &lt;mx:TextArea id="aTextArea" text="hello"/>
  &lt;/mx:VBox>
  </pre>
 
  <p><codeph>&lt;mx:children></codeph> タグは必須ではありません。</p>
  
  <p>通常、ActionScript において組み合わせたエフェクトの開始は、次の 5 つの手順で行います。</p>
 
  <ol>
    <li>組み合わせるエフェクトオブジェクトのインスタンスを、次の例のように作成します。 
    <pre>myFadeEffect = new mx.effects.Fade(target);</pre></li>
    <li><codeph>duration</codeph> など、個々のエフェクトオブジェクトのプロパティを設定します。</li>
    <li>Parallel エフェクトオブジェクトまたは Sequence エフェクトオブジェクトのインスタンスを、次の例のように作成します。 
    <pre>mySequenceEffect = new mx.effects.Sequence();</pre></li>
    <li>各エフェクトオブジェクトについて、<codeph>addChild()</codeph> メソッドを次の例のように呼び出します。 
    <pre>mySequenceEffect.addChild(myFadeEffect);</pre></li>
    <li>組み合わせたエフェクトの <codeph>play()</codeph> メソッドを次の例のように呼び出します。 
    <pre>mySequenceEffect.play();</pre></li>
  </ol>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.effects:CompositeEffect:CompositeEffect"><apiName>CompositeEffect</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>組み合わせたエフェクトの場合、この引数は無視されます。 このパラメーターは、他の種類のエフェクトとの一貫性を保つことだけを目的として用意されています。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:CompositeEffect:addChild"><apiName>addChild</apiName><shortdesc>
      新しい子エフェクトを、この組み合わせたエフェクトに追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>childEffect</apiItemName><apiOperationClassifier>mx.effects:IEffect</apiOperationClassifier><apiDesc>組み合わせたエフェクトに追加する子エフェクトを表します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      新しい子エフェクトを、この組み合わせたエフェクトに追加します。 Sequence エフェクトでは、それぞれの子エフェクトが、追加された順序で一度に 1 つずつ再生されます。 Parallel エフェクトでは、すべての子エフェクトが、追加された順序に関係なく同時に再生されます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:CompositeEffect:children:get"><apiName>children</apiName><shortdesc>
      この CompositeEffect の子エフェクトが含まれる配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      この CompositeEffect の子エフェクトが含まれる配列です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:CompositeEffect:compositeDuration:get"><apiName>compositeDuration</apiName><shortdesc>
     すべての子エフェクトの継続時間によって定義される、このエフェクトの継続時間を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     すべての子エフェクトの継続時間によって定義される、このエフェクトの継続時間を返します。すべての子エフェクトの startDelay および繰り返しの情報を継続時間と共に考慮して、適切な結果を返します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:IEffectTargetHost"><apiName>IEffectTargetHost</apiName><shortdesc>
  IEffectTargetHost インターフェイスは、データエフェクトのターゲットリストコントロールにアクセスできるインターフェイスを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IEffectTargetHost インターフェイスは、データエフェクトのターゲットリストコントロールにアクセスできるインターフェイスを定義します。 すべてのリストコントロールがこのインターフェイスを実装します。 このインターフェイスにより、エフェクトクラスのインスタンスは、エフェクトが再生されているリストコントロールと通信できます。 このインターフェイスは、ターゲットコントロール内でデータアイテムの追加、削除、置換のどれが行われたかに基づいて、エフェクトを再生するかどうかを指定する場合にも使用されます。 
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.controls.listClasses.ListBase.xml"><linktext>mx.controls.listClasses.ListBase</linktext></link></related-links><apiOperation id="mx.effects:IEffectTargetHost:mx.effects:IEffectTargetHost:addDataEffectItem"><apiName>addDataEffectItem</apiName><shortdesc>
      データ変更エフェクトが実行されている場合に、アイテムレンダラーを追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>コントロールのレイアウトに追加するアイテムレンダラーです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データ変更エフェクトが実行されている場合、アイテムレンダラーを追加します。 アイテムレンダラーは、まだ表示されていないデータプロバイダーのコレクションに最近追加されたデータアイテムに対応している必要があります。
     
      <p>この関数は、データ変更エフェクトの一部として <codeph>AddItemAction</codeph> エフェクトによって呼び出されます。この関数により、コントロールでアイテムレンダラーを使用して、コレクションに追加されたデータアイテムの表示を開始するポイントが指定されます。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectTargetHost:mx.effects:IEffectTargetHost:getRendererSemanticValue"><apiName>getRendererSemanticValue</apiName><shortdesc>
      true または false を返して、エフェクトがターゲットで再生されるかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph> または <codeph>false</codeph> で、エフェクトがターゲットで再生されるかどうかを示します。 
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>アイテムレンダラーです。
     
      </apiDesc></apiParam><apiParam><apiItemName>semanticProperty</apiItemName><apiType value="String"/><apiDesc>レンダラーのセマンティックプロパティです。このプロパティの値が返されることになります。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>true</codeph> または <codeph>false</codeph> を返して、エフェクトがターゲットで再生されるかどうかを示します。 EffectTargetFilter クラスは、データエフェクトで <codeph>filter</codeph> プロパティを設定した場合にこのメソッドを呼び出します。 たとえば、<codeph>filter</codeph> プロパティを <codeph>addItem</codeph> または <codeph>removeItem</codeph> に設定します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectTargetHost:mx.effects:IEffectTargetHost:removeDataEffectItem"><apiName>removeDataEffectItem</apiName><shortdesc>
      データ変更エフェクトが実行されている場合に、アイテムレンダラーを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>コントロールのレイアウトから削除するアイテムレンダラーです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データ変更エフェクトが実行されている場合に、アイテムレンダラーを削除します。 このアイテムレンダラーは、データプロバイダーのコレクションから既に削除されているデータに対応している必要があります。 この関数は、データ変更エフェクトの一部として <codeph>RemoveItemAction</codeph> エフェクトによって呼び出されます。この関数により、コントロールでアイテムレンダラーを使用してデータアイテムを表示することを中止するポイントが指定されます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectTargetHost:mx.effects:IEffectTargetHost:unconstrainRenderer"><apiName>unconstrainRenderer</apiName><shortdesc>
      特定のデータアイテムに対応するアイテムレンダラーが、コントロール内のアイテムレンダラーの通常の位置の外側に移動する必要がある場合、データ変更エフェクトの一部として UnconstrainItemAction エフェクトによって呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>エフェクトのターゲットであるアイテムレンダラーです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      特定のデータアイテムに対応するアイテムレンダラーが、コントロール内のアイテムレンダラーの通常の位置の外側に移動する必要がある場合、データ変更エフェクトの一部として <codeph>UnconstrainItemAction</codeph> エフェクトによって呼び出されます。 コントロールは、エフェクトの持続時間の間はアイテムレンダラーを配置しません。
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.effects:SetStyleAction"><apiName>SetStyleAction</apiName><shortdesc>
  SetStyleAction クラスでは、ビューステートを定義する SetStyle プロパティに対応したアクションエフェクトを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:SetStyleAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:SetStyleAction
    <b>Properties</b>
    id="ID"
    style=""
    value=""
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  SetStyleAction クラスでは、ビューステートを定義する SetStyle プロパティに対応したアクションエフェクトを定義します。 SetStyleAction エフェクトをトランジションの定義範囲で使用することにより、<codeph>SetStyle</codeph> プロパティで定義されたビューステートの変化がトランジションで発生する時期を制御できます。
  
  </apiDesc><example conref="TransitionExample.mxml"><swfblock conref="../states/examples/TransitionExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#SetStyleActionInstance"><linktext>mx.effects.effectClasses.SetStyleActionInstance</linktext></link><link href="mx.states.xml#SetStyle"><linktext>mx.states.SetStyle</linktext></link></related-links><apiConstructor id="mx.effects:SetStyleAction:SetStyleAction"><apiName>SetStyleAction</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:SetStyleAction:name"><apiName>name</apiName><shortdesc> 
	  変更されるスタイルプロパティの名前を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> 
	  変更されるスタイルプロパティの名前を表します。 デフォルトでは、ビューステートを定義したもののうち <codeph>SetStyle</codeph> プロパティの定義からこの値が決定されます。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SetStyleAction:value"><apiName>value</apiName><shortdesc> 
	  スタイルプロパティの新しい値を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc> 
	  スタイルプロパティの新しい値を表します。 デフォルトでは、ビューステートを定義したもののうち <codeph>SetStyle</codeph> プロパティの定義からこの値が決定されます。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:SetStyleAction:relevantStyles:get"><apiName>relevantStyles</apiName><shortdesc>
	  このエフェクトによって変更されたスタイルプロパティを含みます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
	  このエフェクトによって変更されたスタイルプロパティを含みます。 この getter メソッドによって、スーパークラスメソッドがオーバーライドされます。
	 
	  <p>このクラスのサブクラスを作成してカスタムエフェクトを作成する場合は、このメソッドをオーバーライドして、サブクラスによって変更されたスタイルプロパティリストを含む配列を返す必要があります。</p>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect/getAffectedProperties()"><linktext>mx.effects.Effect.getAffectedProperties()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.effects:Rotate"><apiName>Rotate</apiName><shortdesc>
  Rotate エフェクトは、特定の点を中心としてコンポーネントを回転させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:Rotate" replacement="spark.effects.Rotate" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Rotate&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Rotate
    id="ID"
    angleFrom="0"
    angleTo="360"
    originX="0"
    originY="0"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Rotate エフェクトは、特定の点を中心としてコンポーネントを回転させます。 回転の中心点を座標で指定したり、回転の開始時と終了時の角度を指定することができます。 角度には正の値または負の値を指定できます。 
 
  <p><b>メモ：</b> Rotate エフェクトをテキストに対して使用する場合は、埋め込みフォントを使用する必要があります。デバイスフォントは使用できません。</p> 
 
  </apiDesc><example conref="RotateEffectExample.mxml"><swfblock conref="examples/RotateEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#RotateInstance"><linktext>mx.effects.effectClasses.RotateInstance</linktext></link></related-links><apiConstructor id="mx.effects:Rotate:Rotate"><apiName>Rotate</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Rotate:angleFrom"><apiName>angleFrom</apiName><shortdesc> 
	  ターゲットオブジェクトの回転の開始角度を度単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc> 
	  ターゲットオブジェクトの回転の開始角度を度単位で表します。 有効な値の範囲は 0 ～ 360 です。
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Rotate:angleTo"><apiName>angleTo</apiName><shortdesc> 
	  ターゲットオブジェクトの回転の終了角度を度単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>360</apiData><apiType value="Number"/><apiDefaultValue>360
	  
	  </apiDefaultValue></apiValueDef><apiDesc> 
	  ターゲットオブジェクトの回転の終了角度を度単位で表します。 正数または負数を指定できます。
	 
	  <p><codeph>angleTo</codeph> の値が <codeph>angleFrom</codeph> の値以下の場合、ターゲットは反時計回りに回転します。 そうでない場合は、時計回りに回転します。 ターゲットを複数回回転させる場合は、この値を大きい正数または小さい負数に設定します。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Rotate:originX"><apiName>originX</apiName><shortdesc>
	  回転の中心点の x 方向の位置を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  回転の中心点の x 方向の位置を表します。 ターゲットはこの点を中心に回転します。 有効な値の範囲は、0 からターゲットの幅までです。
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Rotate:originY"><apiName>originY</apiName><shortdesc>
	  回転の中心点の y 方向の位置を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  回転の中心点の y 方向の位置を表します。 ターゲットはこの点を中心に回転します。 有効な値の範囲は 0 からターゲットの高さになります。
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Rotate:hideFocusRing:set"><apiName>hideFocusRing</apiName><shortdesc>
	  エフェクトの開始時にエフェクトがフォーカス枠を非表示にするかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  エフェクトの開始時にエフェクトがフォーカス枠を非表示にするかどうかを指定します。フォーカスリングを実際に非表示にするのは、ターゲット自体です。 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:EffectTargetFilter"><apiName>EffectTargetFilter</apiName><shortdesc>
  EffectTargetFilter クラスでは、各トランジションエフェクトのそれぞれターゲットにおいてそのエフェクトが実行するカスタムフィルターを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  EffectTargetFilter クラスでは、各トランジションエフェクトのそれぞれターゲットにおいてそのエフェクトが実行するカスタムフィルターを定義します。 
 
  <p>EffectTargetFilter クラスでは、<codeph>defaultFilterFunction()</codeph> メソッド（<codeph>filterProperties</codeph> および <codeph>defaultFilterFunction()</codeph> プロパティを使用する）を定義することによって、各エフェクトターゲット上でエフェクトを再生するかどうかを決定します。</p>
  
  <p>また、カスタムフィルター関数を定義して、独自のフィルタリングロジックを実装することもできます。 この処理を行うには、カスタムフィルター関数を定義し、<codeph>filterFunction</codeph> プロパティを使用して EffectTargetFilter オブジェクトにその関数を指定します。</p>
  
  <p>エフェクトにカスタムフィルターを使用するような設定を行うには、EffectTargetFilter オブジェクトをエフェクトの <codeph>Effect.customFilter</codeph> プロパティに渡します。</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.effects:EffectTargetFilter:EffectTargetFilter"><apiName>EffectTargetFilter</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.effects:EffectTargetFilter:protected:defaultFilterFunction"><apiName>defaultFilterFunction</apiName><shortdesc>
      EffectTargetFilter クラスのデフォルトのフィルター関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph> を返して、エフェクトインスタンスの再生を可能にします。 
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>propChanges</apiItemName><apiType value="Array"/><apiDesc>PropertyChanges オブジェクトの配列を表します。 各 PropertyChanges オブジェクトの <codeph>target</codeph> プロパティは、エフェクトのターゲットと等しくなります。 ターゲットのプロパティがトランジションによって変更されない場合、対応する PropertyChanges オブジェクトはこの配列に含まれません。
      
      </apiDesc></apiParam><apiParam><apiItemName>instanceTarget</apiItemName><apiType value="Object"/><apiDesc>この関数を呼び出す EffectInstance のターゲットを表します。 エフェクトに複数のターゲットが含まれる場合、関数はターゲットごとに 1 度だけ呼び出されます。 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      EffectTargetFilter クラスのデフォルトのフィルター関数を表します。 <codeph>instanceTarget</codeph> の開始値や終了値が、<codeph>filterProperties</codeph> プロパティまたは <codeph>filterStyles</codeph> プロパティで指定されたいずれかの値に対して異なる場合は、ターゲットでエフェクトを再生します。
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.effects.effectClasses.xml#PropertyChanges"><linktext>mx.effects.effectClasses.PropertyChanges</linktext></link></related-links></apiOperation><apiOperation id="mx.effects:EffectTargetFilter:filterInstance"><apiName>filterInstance</apiName><shortdesc> 
      ターゲットをフィルター処理するかどうかを指定します。ターゲットをエフェクトに含める必要がある場合は、true を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>ターゲットをエフェクトに含める必要がある場合は <codeph>true</codeph>、それ以外の場合は <codeph>false</codeph> を返します。
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>propChanges</apiItemName><apiType value="Array"/><apiDesc>PropertyChanges オブジェクトの配列を表します。 各 PropertyChanges オブジェクトの target プロパティは、エフェクトのターゲットと等しくなります。ターゲットのプロパティがトランジションによって変更されない場合、対応する PropertyChanges オブジェクトはこの配列に含まれません。
     
      </apiDesc></apiParam><apiParam><apiItemName>semanticsProvider</apiItemName><apiOperationClassifier>mx.effects:IEffectTargetHost</apiOperationClassifier><apiDesc>ターゲットの requiredSemantics で指定されたプロパティの評価に使用される IEffectTargetHost。通常、エフェクトの effectTargetHost です。アイテム変更エフェクトの場合、エフェクトのターゲットがアイテムレンダラーのときは、アイテムレンダラーを含む List または TileList になります。
     
      </apiDesc></apiParam><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>この関数を呼び出す EffectInstance のターゲットを表します。 エフェクトに複数のターゲットが含まれる場合、関数はターゲットごとに 1 度だけ呼び出されます。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      ターゲットをフィルター処理するかどうかを指定します。ターゲットをエフェクトに含める必要がある場合は、true を返します。 この指定は filterFunction と semanticFilterFunction の呼び出しによって行われ、両方の関数が true を返す場合のみ true を返します。 デフォルト値を持つデフォルト関数は常に true を返します。 通常、EffectTargetFilter は一方のフィルターのみを使用し、両方は使用しません。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:EffectTargetFilter:filterFunction"><apiName>filterFunction</apiName><shortdesc>
      カスタムフィルター処理を定義する関数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      カスタムフィルター処理を定義する関数を表します。 このメソッドは、エフェクトのすべてのターゲットで呼び出されます。 この関数によって <codeph>true</codeph> が返される場合、エフェクトはターゲットで再生されます。<codeph>false</codeph> が返される場合、ターゲットはエフェクトによりスキップされます。 カスタムフィルター関数によって、<codeph>Effect.filter</codeph> プロパティを使用する場合に比べ、フィルタリング処理全般をさらに制御できます。 
     
      <p>このフィルター関数のシグネチャは次のとおりです。</p>
     
      <pre>
      filterFunc(propChanges:Array, instanceTarget:Object):Boolean
      {
          // Return true to play the effect on instanceTarget, 
          // or false to not play the effect.
      } 
      </pre>
     
      <p>次に、各指定項目について説明します。</p>
      
      <p><codeph>propChanges</codeph> - PropertyChanges オブジェクトの配列で、エフェクトのターゲットコンポーネントごとに 1 つのオブジェクトを持ちます。 ターゲットのプロパティがトランジションによって変更されない場合、このプロパティはこの配列に含まれません。</p>
      
      <p><codeph>instanceTarget</codeph> - フィルター処理を実行するエフェクト特有のターゲットコンポーネント。 カスタムフィルター関数内では、<codeph>propChanges</codeph> 配列で <codeph>instanceTarget</codeph> 引数と一致する PropertyChanges オブジェクトを最初に検索します（<codeph>instanceTarget</codeph> 引数を <codeph>propChanges.target</codeph> プロパティと比較して検索します）。</p> 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.effectClasses.xml#PropertyChanges"><linktext>mx.effects.effectClasses.PropertyChanges</linktext></link></related-links></apiValue><apiValue id="mx.effects:EffectTargetFilter:filterProperties"><apiName>filterProperties</apiName><shortdesc> 
      コンポーネントプロパティを指定するストリングの配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc> 
      コンポーネントプロパティを指定するストリングの配列です。 この配列内のいずれかのプロパティがターゲットコンポーネントで変更された場合、ターゲットでエフェクトを再生します。 
     
      <p>カスタムフィルター関数を定義する場合、関数内から <codeph>filterProperties</codeph> プロパティを調べることができます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectTargetFilter:filterStyles"><apiName>filterStyles</apiName><shortdesc> 
      スタイルプロパティを指定するストリングの配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc> 
      スタイルプロパティを指定するストリングの配列です。 配列内のいずれかのスタイルプロパティがターゲットコンポーネントで変更された場合、ターゲットでエフェクトを再生します。 
     
      <p>カスタムフィルター関数を定義する場合、関数内から <codeph>filterStyles</codeph> プロパティを調べることができます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:EffectTargetFilter:requiredSemantics"><apiName>requiredSemantics</apiName><shortdesc>
      再生されるエフェクトのターゲットに関連付ける必要がある、プロパティと関連する値のコレクションです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      再生されるエフェクトのターゲットに関連付ける必要がある、プロパティと関連する値のコレクションです。
     
      <p>データエフェクトを操作するときに、このプロパティを使用してエフェクトをフィルター処理できます。 リストコントロールの、エフェクトによって追加されていないすべてのターゲット（つまりその他の方法で削除、置換、移動されたり影響を受けたりするターゲット）でデータエフェクトを再生する場合、次のようにエフェクト定義を作成できます。 </p>
     
      <pre>
      &lt;mx:Blur>
          &lt;mx:customFilter>
              &lt;mx:EffectTargetFilter requiredSemantics="{{'added':false}}"/>
          &lt;/mx:customFilter>
      &lt;/mx:Blur> </pre>
     
      <p>エフェクトによって追加または削除されていないすべてのターゲットでデータエフェクトを再生する場合、次のようにエフェクト定義を作成できます。</p>
     
      <pre>
      &lt;mx:Blur>
          &lt;mx:customFilter>
              &lt;mx:EffectTargetFilter requiredSemantics="{{'added':false}, {'removed':false}}"/>
          &lt;/mx:customFilter>
      &lt;/mx:Blur></pre>
     
      <p>指定できるプロパティのリストには、<codeph>added</codeph>、<codeph>removed</codeph>、<codeph>replaced</codeph> および <codeph>replacement</codeph> が含まれます。 プロパティに設定できる値は、<codeph>true</codeph> と <codeph>false</codeph> です。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Fade"><apiName>Fade</apiName><shortdesc>
  Fade エフェクトはコンポーネントの alpha プロパティを、透明から不透明に、または不透明から透明に変化するようにアニメーション化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Alternative owner="mx.effects:Fade" replacement="spark.effects.Fade" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Fade&gt;</code> tag
  inherits the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Fade 
    id="ID"
    alphaFrom="val"
    alphaTo="val"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:TweenEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Fade エフェクトはコンポーネントの <codeph>alpha</codeph> プロパティを、透明から不透明に、または不透明から透明に変化するようにアニメーション化します。 
  
  <p><codeph>showEffect</codeph> トリガーまたは <codeph>hideEffect</codeph> トリガーで Fade エフェクトを指定し、<codeph>alphaFrom</codeph> プロパティと <codeph>alphaTo</codeph> プロパティで値を省略すると、このエフェクトにより <codeph>alpha</codeph> の値が 0 からターゲットの現在の <codeph>alpha</codeph> 値に（<codeph>showEffect</codeph> トリガーの場合）、またターゲットの現在の <codeph>alpha</codeph> 値から 0 に（<codeph>hideEffect</codeph> トリガーの場合）、それぞれ自動的に推移します。</p> 
 
  <p><b>メモ：</b> Fade エフェクトをテキストに対して使用する場合は、埋め込みフォントを使用する必要があります。デバイスフォントは使用できません。 </p> 
 
  </apiDesc><example conref="FadeEffectExample.mxml"><swfblock conref="examples/FadeEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#FadeInstance"><linktext>mx.effects.effectClasses.FadeInstance</linktext></link></related-links><apiConstructor id="mx.effects:Fade:Fade"><apiName>Fade</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Fade:alphaFrom"><apiName>alphaFrom</apiName><shortdesc> 
      最初の透明度レベルは 0.0 から 1.0 の範囲です（0.0 = 透明、1.0 = 完全に不透明）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      最初の透明度レベルは 0.0 から 1.0 の範囲です（0.0 = 透明、1.0 = 完全に不透明）。 
     
      <p>エフェクトによってターゲットコンポーネントが非表示になる場合、デフォルト値はターゲットの <codeph>alpha</codeph> プロパティの現在値です。 エフェクトによってターゲットコンポーネントが表示される場合、デフォルト値は 0.0 です。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:Fade:alphaTo"><apiName>alphaTo</apiName><shortdesc> 
      最終的な透明度レベルを表します（0.0 = 透明、1.0 = 完全に不透明）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      最終的な透明度レベルを表します（0.0 = 透明、1.0 = 完全に不透明）。
     
      <p>エフェクトによってターゲットコンポーネントが非表示になる場合、デフォルト値は 0.0 です。エフェクトによってターゲットコンポーネントが表示される場合、デフォルト値はターゲットの <codeph>alpha</codeph> プロパティの現在値です。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:Parallel"><apiName>Parallel</apiName><shortdesc>
  Parallel エフェクトは複数の子エフェクトを同時に再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="children"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The &lt;mx:Parallel&gt; tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:Parallel id="<i>identifier</i>"&gt;
    &lt;mx:children&gt;
      &lt;!-- Specify child effect tags --&gt; 
    &lt;/mx:children&gt;
  &lt;/mx:Parallel&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:CompositeEffect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Parallel エフェクトは複数の子エフェクトを同時に再生します。
  
  <p>MXML では次の例のように Paralell エフェクトを作成できます。</p>
 
  <pre>
  &lt;mx:Parallel id="WipeRightUp">
    &lt;mx:children>
      &lt;mx:WipeRight duration="1000"/>
      &lt;mx:WipeUp duration="1000"/>
    &lt;/mx:children>
  &lt;/mx:Parallel>
  
  &lt;mx:VBox id="myBox" hideEffect="{WipeRightUp}" >
    &lt;mx:TextArea id="aTextArea" text="hello"/>
  &lt;/mx:VBox>
  </pre>
 
  <p><codeph>&lt;mx:children></codeph> タグはオプションです。</p>
  
  <p>通常、ActionScript での Parallel エフェクトの開始は次の 5 つの手順で行います。</p>
 
  <ol>
    <li>組み合わせるエフェクトオブジェクトのインスタンスを、次の例のように作成します。 
    <pre>myFadeEffect = new mx.effects.Fade(target);</pre></li>
    <li><codeph>duration</codeph> など、個々のエフェクトオブジェクトのプロパティを設定します。</li>
    <li>Parallel エフェクトオブジェクトを、次の例のように作成します。 
    <pre>myParallelEffect = new mx.effects.Parallel();</pre></li>
    <li>各エフェクトオブジェクトについて、<codeph>addChild()</codeph> メソッドを次の例のように呼び出します。 
    <pre>myParallelEffect.addChild(myFadeEffect);</pre></li>
    <li>Parallel エフェクトの <codeph>play()</codeph> メソッドを次の例のように呼び出します。 
    <pre>myParallelEffect.play();</pre></li>
  </ol>
 
  </apiDesc><example conref="ParallelEffectExample.mxml"><swfblock conref="examples/ParallelEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.effects.effectClasses.xml#ParallelInstance"><linktext>mx.effects.effectClasses.ParallelInstance</linktext></link></related-links><apiConstructor id="mx.effects:Parallel:Parallel"><apiName>Parallel</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Parallel エフェクトの場合、この引数は無視されます。 このパラメーターは、他の種類のエフェクトとの一貫性を保つことだけを目的として用意されています。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  コンストラクターです。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.effects:Parallel:compositeDuration:get"><apiName>compositeDuration</apiName><shortdesc>
     
     すべての子エフェクトの継続時間によって定義される、このエフェクトの継続時間を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     
     すべての子エフェクトの継続時間によって定義される、このエフェクトの継続時間を返します。すべての子エフェクトの startDelay および繰り返しの情報を継続時間と共に考慮して、適切な結果を返します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.effects:IAbstractEffect"><apiName>IAbstractEffect</apiName><shortdesc>
  IAbstractEffect インターフェイスは、プロパティまたはパラメーターが Effect 型でなければならないが、実際には IEffect インターフェイスの API を実装していないことを表すために使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IAbstractEffect インターフェイスは、プロパティまたはパラメーターが Effect 型でなければならないが、実際には IEffect インターフェイスの API を実装していないことを表すために使用されます。 AbstractEffect インターフェイスを実装するプロパティが変更されると、UIComponent クラスがこれを認識し、このプロパティを EffectManager クラスに渡します。EffectManager クラスは、このプロパティを処理します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#IEffect"><linktext>mx.effects.IEffect</linktext></link></related-links></apiClassifier><apiClassifier id="mx.effects:IEffectInstance"><apiName>IEffectInstance</apiName><shortdesc>
  IEffectInstance インターフェイスはターゲットで再生されるエフェクトのインスタンスを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IEffectInstance インターフェイスはターゲットで再生されるエフェクトのインスタンスを表します。 各ターゲットには個別のエフェクトインスタンスが関連付けられています。 エフェクトインスタンスは一時的に有効になるインスタンスです。 インスタンスはエフェクトがターゲットで再生される場合に作成され、再生が終了するとそのインスタンスは破棄されます。 ターゲットで複数のエフェクトが同時に再生されている場合（例えば、Parallel エフェクト）は、エフェクトごとに別々のエフェクトインスタンスが作成されます。
 
  <p>エフェクトの開発時には、カスタムエフェクト用のインスタンスクラスを作成する必要があります。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:end"><apiName>end</apiName><shortdesc>
      現在再生中のエフェクトインスタンスを中断し、直ちにエフェクトの終わりにジャンプします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      現在再生中のエフェクトインスタンスを中断し、直ちにエフェクトの終わりにジャンプします。 このメソッドは、<codeph>Effect.end()</codeph> メソッドの呼び出しにより、呼び出されます。 実装時に、<codeph>finishEffect()</codeph> メソッドが呼び出されます。
     
      <p>エフェクトの終了処理の一環としてこのメソッドが呼び出されると、エフェクトインスタンスにより <codeph>effectEnd</codeph> イベントが送出されます。</p>
     
      <p>EffectInstance のサブクラスでは、このメソッドを任意でオーバーライドできます。オーバーライドの一部として、ロジックの後、つまりオーバーライドの終わりで <codeph>super.end()</codeph> メソッドを呼び出す必要があります。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.effects.xml#Effect/end()"><linktext>mx.effects.Effect.end()</linktext></link></related-links></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:finishEffect"><apiName>finishEffect</apiName><shortdesc>
      エフェクトの再生が完了すると、end() メソッドによって呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトの再生が完了すると、<codeph>end()</codeph> メソッドによって呼び出されます。 この関数によって、エフェクトターゲットの <codeph>endEffect</codeph> イベントが送出されます。
     
      <p>サブクラスでこのメソッドをオーバーライドする必要はありません。 エフェクトの使用時にこのメソッドを呼び出す必要はありません。ただし、エフェクトのサブクラスを作成する場合は、呼び出す必要があります。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:finishRepeat"><apiName>finishRepeat</apiName><shortdesc>
      繰り返されるエフェクトの各反復により再生が終了すると、呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      繰り返されるエフェクトの各反復により再生が終了すると、呼び出されます。
     
      <p>サブクラスでこのメソッドをオーバーライドする必要はありません。 エフェクトの使用時にこのメソッドを呼び出す必要はありません。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:initEffect"><apiName>initEffect</apiName><shortdesc>
      このメソッドは、エフェクトが EffectManager によってトリガーされると呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>エフェクトをトリガーするために送出されたイベントオブジェクトを表します。 たとえば、トリガーが mouseDownEffect の場合、イベントは MouseEvent となり、タイプは MouseEvent.MOUSEDOWN と同じになります。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      このメソッドは、エフェクトが EffectManager によってトリガーされると、呼び出されます。 この基本クラスのバージョンによって、エフェクトをトリガーしたイベントが <codeph>triggerEvent</codeph> プロパティに保存されます。 各サブクラスによってこのメソッドがオーバーライドされます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:pause"><apiName>pause</apiName><shortdesc>
      resume() メソッドを呼び出すまで、エフェクトを一時停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>resume()</codeph> メソッドを呼び出すまで、エフェクトを一時停止します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:play"><apiName>play</apiName><shortdesc>
      ターゲットでエフェクトインスタンスを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      ターゲットでエフェクトインスタンスを再生します。 EffectInstance でエフェクトの再生を開始する場合は、代わりに <codeph>startEffect()</codeph> メソッドを呼び出します。
     
      <p>EffectInstance のサブクラスでは、このメソッドをオーバーライドする必要があります。 オーバーライドによって <codeph>super.play()</codeph> メソッドが必ず呼び出され、ターゲットから <codeph>effectStart</codeph> イベントが送出されます。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:resume"><apiName>resume</apiName><shortdesc>
      pause() メソッドを呼び出し、エフェクトを一時停止した後、再開させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>pause()</codeph> メソッドを呼び出してエフェクトを一時停止した後、再開させます。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:reverse"><apiName>reverse</apiName><shortdesc>
      エフェクトの現在位置から開始して、逆順でエフェクトを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      エフェクトの現在位置から開始して、逆順でエフェクトを再生します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:startEffect"><apiName>startEffect</apiName><shortdesc>
      startDelay 時間の経過後、ターゲットでエフェクトインスタンスを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>startDelay</codeph> 時間の経過後、ターゲットでエフェクトインスタンスを再生します。 Effect クラスによって呼び出されます。 EffectInstance の開始時は、<codeph>play()</codeph> メソッドの代わりにこの関数を使用します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:stop"><apiName>stop</apiName><shortdesc>
      ターゲットを現在の状態にしたまま、エフェクトを停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      ターゲットを現在の状態にしたまま、エフェクトを停止します。 このメソッドは、<codeph>Effect.stop()</codeph> メソッドの呼び出しにより、呼び出されます。 実装時に、<codeph>finishEffect()</codeph> メソッドが呼び出されます。
     
      <p>エフェクトの終了処理の一環としてこのメソッドが呼び出されると、エフェクトインスタンスにより <codeph>effectEnd</codeph> イベントが送出されます。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:className:get"><apiName>className</apiName><shortdesc>
      このエフェクトクラスの名前です。たとえば、"FadeInstance" などがあります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      このエフェクトクラスの名前です。たとえば、<codeph>"FadeInstance"</codeph> などがあります。
     
      <p>これは短い形式または無修飾の名前で、パッケージ名は含まれません。 修飾名が必要な場合は、flash.utils パッケージに含まれる <codeph>getQualifiedClassName()</codeph> メソッドを使用します。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:duration:get"><apiName>duration</apiName><shortdesc> 
      エフェクトの持続時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>500
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      エフェクトの持続時間を表します（ミリ秒単位）。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:effectTargetHost:get"><apiName>effectTargetHost</apiName><shortdesc>
      データエフェクトのターゲットリストコントロールにアクセスできるプロパティです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:IEffectTargetHost</apiValueClassifier></apiValueDef><apiDesc>
      データエフェクトのターゲットリストコントロールにアクセスできるプロパティです。 このプロパティにより、エフェクトクラスのインスタンスは、エフェクトが再生されているリストコントロールと通信できます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:effect:get"><apiName>effect</apiName><shortdesc>
      この IEffectInstance オブジェクトを作成した IEffect オブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects:IEffect</apiValueClassifier></apiValueDef><apiDesc>
      この IEffectInstance オブジェクトを作成した IEffect オブジェクトを表します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:hideFocusRing:get"><apiName>hideFocusRing</apiName><shortdesc>
      エフェクトの開始時にエフェクトがフォーカス枠を非表示にするかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      エフェクトの開始時にエフェクトがフォーカス枠を非表示にするかどうかを指定します。エフェクトターゲットは、フォーカス枠を非表示にします。UIComponent クラスのサブクラスは、フォーカス枠を自動的に非表示にします。エフェクトターゲットが UIComponent クラスのサブクラスではない場合は、フォーカス枠を非表示にするための機能を追加する必要があります。
     
      <p>エフェクトの再生中にフォーカス枠を非表示にするには、このプロパティを <codeph>true</codeph> に設定します。</p>
      
      <p>Effect のサブクラスのデフォルト値は <codeph>false</codeph> です。 MaskEffect のサブクラスのデフォルト値は <codeph>true</codeph> です。
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      エフェクトの現在の時間位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      エフェクトの現在の時間位置です。このプロパティの値の範囲は、0 から合計継続時間（Effect の <codeph>startDelay</codeph>、<codeph>repeatCount</codeph> および <codeph>repeatDelay</codeph> を含む）までです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:propertyChanges:get"><apiName>propertyChanges</apiName><shortdesc>
      エフェクトのターゲットに関連するプロパティのセットに対して、開始値および終了値を含む PropertyChanges オブジェクトを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.effects.effectClasses:PropertyChanges</apiValueClassifier></apiValueDef><apiDesc>
      エフェクトのターゲットに関連するプロパティのセットに対して、開始値および終了値を含む PropertyChanges オブジェクトを指定します。 このプロパティは、このエフェクトインスタンスを作成したエフェクトで <codeph>captureStartValues()</codeph> メソッドが呼び出された場合にのみ設定されます。 
      
      <p><codeph>propertyChanges</codeph> プロパティは、トランジションの一部として使用されるエフェクトを作成する際に頻繁に使用されます。 <codeph>captureStartValues()</codeph> メソッドは、トランジションが開始されると、自動的に Flex から呼び出されます。 <codeph>Effectinstance.play()</codeph> メソッドのオーバーライドの範囲で、<codeph>propertyChanges()</codeph> メソッド内の情報を調べて、エフェクトの開始値および終了値を初期化できます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.effectClasses.xml#PropertyChanges"><linktext>mx.effects.effectClasses.PropertyChanges</linktext></link></related-links></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:repeatCount:get"><apiName>repeatCount</apiName><shortdesc>
      エフェクトを繰り返す回数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを繰り返す回数を表します。 有効な値は 0 以上の整数です。
      
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect/repeatCount"><linktext>mx.effects.Effect.repeatCount</linktext></link></related-links></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:repeatDelay:get"><apiName>repeatDelay</apiName><shortdesc>
      エフェクトを繰り返す前の待機時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを繰り返す前の待機時間を表します（ミリ秒単位）。
      
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect/repeatDelay"><linktext>mx.effects.Effect.repeatDelay</linktext></link></related-links></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:startDelay:get"><apiName>startDelay</apiName><shortdesc>
      エフェクトを開始する前の待機時間を表します（ミリ秒単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトを開始する前の待機時間を表します（ミリ秒単位）。 有効な値は 0 以上の整数です。 <codeph>repeatCount</codeph> プロパティの使用によりエフェクトが繰り返される場合は、エフェクトの初回再生時にのみ <codeph>startDelay</codeph> プロパティが適用されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:suspendBackgroundProcessing:get"><apiName>suspendBackgroundProcessing</apiName><shortdesc>
      true の場合、エフェクトの再生中にすべてのバックグラウンド処理をブロックします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、エフェクトの再生中にすべてのバックグラウンド処理をブロックします。 バックグラウンド処理では、測定、レイアウト、および、サーバーから受信した応答の処理が行われます。
      
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect/suspendBackgroundProcessing"><linktext>mx.effects.Effect.suspendBackgroundProcessing</linktext></link></related-links></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:target:get"><apiName>target</apiName><shortdesc>
      このエフェクトが適用される UIComponent オブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      このエフェクトが適用される UIComponent オブジェクトを表します。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect/target"><linktext>mx.effects.Effect.target</linktext></link></related-links></apiValue><apiValue id="mx.effects:IEffectInstance:mx.effects:IEffectInstance:triggerEvent:get"><apiName>triggerEvent</apiName><shortdesc>
      エフェクトの再生をトリガーしたイベントを表します（存在する場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      エフェクトの再生をトリガーしたイベントを表します（存在する場合）。 このプロパティは、エフェクトが複数のトリガーイベントに割り当てられている場合に便利です。
     
      <p>エフェクトがイベントによってトリガーされるのでなく <codeph>play()</codeph> メソッドを呼び出すことによってプログラムで再生される場合、このプロパティは <codeph>null</codeph> となります。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>